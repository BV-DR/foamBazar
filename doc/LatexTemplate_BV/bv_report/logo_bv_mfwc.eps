%!PS-Adobe-3.1 EPSF-3.0%ADO_DSC_Encoding: MacOS Roman%%Title: BV LOGO 1.eps%%Creator: Adobe Illustrator(R) 12%%AI8_CreatorVersion: 12.0.1%AI9_PrintingDataBegin%%For: Fr\351d\351ric Cuisance%%CreationDate: 5/04/07%%BoundingBox: 0 0 314 161%%HiResBoundingBox: 0 0 313.8101 160.1788%%CropBox: 0 0 313.8101 160.1788%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0%%+ procset Adobe_CoolType_Utility_T42 1.0 0%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%+ procset Adobe_CoolType_Core 2.23 0%%+ procset Adobe_AGM_Core 2.0 0%%+ procset Adobe_AGM_Utils 1.0 0%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Cyan Magenta Yellow Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_BuildNumber: Adobe Illustrator(R) 12.0.1 x5205 R agm 4.3861 ct 5.530%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 68 8%%BeginData: 6382 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD3AFFA87DA87DA8A8A8A7A87DA8A8FD72FF7DA8A8FFA8A8A8FFA8%A8A8FFA8A77DA8FD6FFF7DA8A7FFFF7D7DA7FFFF527DFF7D7CFF7DA8FD6D%FF7DA8FF7D51FFA87DA7FFFFA7A8FF52A7FFFF7DA8FD6BFFA7A7FFFF7D7D%A8FF7DA87DA87DCFA8A7A8FF7CA77DFD6BFF7D7D7DA8A8A77D5152275227%5127527CCF7D5252A87CFD69FFA87DA8527DA852275251525152517C7D52%52FF7CFFFF7DA8FD68FF52FFFFA87D7C27A85252275227527DFF52277CFF%A8A87D7DFD67FFA87DA8A8FFFF277DFFA8275227527DFF5252517CA87DA8%FF52FD67FF7D7D7D52A87D517CFF5252517D7CA7A852275227A8FFFF7D7D%7DFD66FF7CCFA87DA87D277DA87C277DFFCF27CF525251527DA87C7D7D7D%FD65FFA87CA8FFFFFF515151CF525127FF7D7DA85227522752A8FFFFA852%FD66FF7DFF7DA8A852277DA8522752A8FFA87C7DA87D5252CF7DA8A87CFD%65FF7D7DA8A17CA7275251FF7D52A8FFFF7D27FFA8FF2752A87C51A852A8%FD64FF7D7DFFA8FF7D5251527DFFFFCFA8FF52A8FFFFFF5227A8A8FFFF7D%A8FD64FF7C7DFFFFFF7D2752275251A7277DFF7D52A8A87D27517DFFA8FF%52A7FD64FF7D7DA752A77D5252A87DA87D52A8FFA87DA8FFA87D27A77D7C%7DA77DFD64FF7CFD057D277DFFFFA8FF7DFFFFA8A8FFA8FF7C277DA77DA8%7CA7FD64FF7D7DFFFFFF7D525152525251FFFFA77CA77C7D525227A8FFFF%FF7D7DFD64FF7C7DFFFFFF7D277CA7A8A852A8FF52FD05A827517DFFFFFF%52A8FD64FFA87DFFFFFF7D5252FFA8CF7DFFFFA77DFFA7FF7D5251A8FFFF%FF7DA8FD64FFA77DFFFFFFA82752A8FF52A8A7A87DA7A8A7A87D2752A8FF%FFFF52FD66FF52FFFFFFA85251FFA87CA8527DCF7D7D52FFA85252FFFFFF%A87DFD66FF7CA8FFFFFF515251527CA827A8A8FF27A8FFCF277CFFFFFFA7%52FD66FF7DA8FFFFFF7D515252FF7D527DFFFF527CA87D527DFFFFFF7DA8%FD66FFA87CFFFFFF7D5227527D52527D7D7D2751275227A8FFFFFF7CA8FD%67FF7DFD04FF5252515252A8FFFF7D7C5252277DFFFFFFCF7CFD68FF7DA8%FFFFFFA1275252CFA7A8A7A8A8522751A7FFFFFF7CA8FD69FF7DFD04FFA7%5152527C5252527C51527DFD04FF7DFD6AFF7DA7FD04FFA87C7CFD05527D%7DFD04FF7D7DFD6BFF7DA8FFFFFF52FFA87DA8A87DFF7D7CA8FFFFCF7DFD%6CFFA87DA8FFA87DA87D52FFA77DFFA751A8FFA852FD6EFFA8A7A8FFA8FF%7D7DFFA87CFFFFA8A8A87DFD70FFCFA87DFD04A8CFA7A8A8A87DA8A8FD74%FFA8A8A7A87DA8A7A8A8FDE8FFA87DA8A7A77DA8A7A87DA8A7A77DA87DA7%7DA8A7A87DA77DA87DA8A7A77DA8A7A87DA87DA87DA8FD59FF7C27275252%7D525127525152525127527C7D51512752527D5127275252512751525227%7C272727FD59FF7D275252FF7DA851527DA852FF51527CFFA8CF51527DFF%A77D515252FF7C5227A87D7DA8525152A8FD58FF7C512752A87D7D5227A7%7D52A752277DA8A87D51277DA87D275227A7A8A827517D7D52A8275227CF%FD58FF7D275252FF7CFF52527DA87DCF51527DCF7DA851527DCF7C7C5152%A8CFFF5227A8A8A8A7525152A8FD58FF7C5127527DA77C5127527DA75151%275252527D51277C7DA75251527D277D5227277D7D52275227CFFD58FFA8%7CFD1B7D7C7D7D7D7CFD057DFD59FFA19A9A9A939A939A9A9A939A9A9A93%9A939A9A9A939A999A939A999A999A999A9A9A93FD049AFD59FFBC8D8D93%BC8DC38D8D9AC39A8D8DBCA1C3938D8DC28D8DA0C3A0938D9A9A8D8D8D9A%CA9A8D8D8DCAFD58FF9A8D6893CA9AA18D8DCAA0BC8D8DA0CACAC36893CA%93689ACA9A8D8DA1FF938D93FFA1C28D8D8DCAFD58FFC28D8D8DC3FFC28D%93CAC39A8D8DC3CAFF9A8D8DCA938D8DCA8D8D8DCFCAC38D94A0CAA18D8D%8DCAFD58FF998D8D8D93FF8D8D68CAA0A0688DA09A9AC38C8DA7938C8DA7%938C9AA7C3A18D93C3A1CA688D8DCAFD58FFBCFD048D938D8D8D93BC9A8D%8D938D93938D8DBC8D8D8DBC8D8D93948D9A8D8D9AC2FD048DCAFD58FFA7%C9A1C9A1C3A1C9A1C3A1C3A1CAA1C3A1C3A1C3A1C9A1C3A1C9A1C3A1C9A1%C3A1C3A1C3A1C9A1FDFCFFFDFCFFFDFCFFFDFCFFFDA2FFA8FD1AFFA8A8A8%FFFFA8A8FD11FFA8A87DA7A8FD1CFFA727FD0AFFA852FFA8FFFF7D52FD07%FFA77D7CA8FD0BFFA7277C7D7DFFFFFFA851CFFD12FFA827A7FFA827A7FF%FFA8FFFFFFCFFD05FFA8FD04FFA8277C52A8FFFFA8FD05FFA8FFFFFFA8FF%CFFD05FFCFFFAEFFA8FFFFFF7D52FD06FFA8FFCFFFA8A8FF527DFF527DCF%FD05FF7D525252A7FFA8FFFFFFA8FD05FF5252A8A8A8FFFFFF7D52FFFFA8%FFFFFFAEFFA8FFFFFFA8FFFFFFA8CFFF7D2751A82751A7CF515152FF527C%FF527DCF515252CFFFFF7D51A7FFFFA7275252FF7C52517D51A87D52A852%7DA7277C51A8A752517DA852515252FFFFFF27A87D52A8527D7D7C7D2752%A852525251FFFFFFA7517DFFFFFF7D52277DFF7D527C27A87D5251A852A7%A852515252FF525227A8A752525152FF7D5127A8A852277C7D5252517C52%A8527DA8517DA852A827FF58525252A8FFFFA7275252CF517DA752A87D51%A8FF527D7D52A852CF517D7D52A8A727A8FF7C52FF517DFFFFFF527D7D52%A851FF52A7A852A8FF277D7D52A8FFFF7D27FFFFFFA8527DA827A85252A7%527DFF27A8FF527D7D52CF527DA75152527DA827A8527CA8527DFFA85252%7D27517D7C527D52A7277DFF27A8A852527DFF5251A7A8FFFFFF5252A8CF%7D51A8A827A8517DFFFF5252527C517DA851A8A827CF7C52FFFF277DFF52%7DFFFFFF5252527C517DA8517DA827FFA851A8A827FFFFFF7C27A8FFFFA7%27FF7D51A8527DFF27A8A851A8FF27A8517DFF527D7D277DA7FF7C52FF7C%7C7D27FFFFA8277C7DA8527DFFA8A827FFFD0452FFFF5152A8FF7C527CA8%FFFFFF7C52FFFFFF5152517DA8517DFFFF7D27A85251A8FF51525252A87C%52FFFF52517D27A8FFFFFF7D27A85251A8FF27CF7D51A7A827FF7D52FFFF%FFCF2752527DA85252527DFF27A8A852CFA827FFA851A87D517D27A8A852%52A7FF7C52FF27A7A852527DCF7C527DA87DFFFFFFA8A8FFFF7C7DA8FFFF%A8A7FFFFFF7D7DA7FFFFFF7DA8FFFFFFA87CA7FFFF7DCFFFFFA8A7A8A87D%FFFFA87DA87DFFA7A8FFFFA87DA7A8A8FFFFFFA8A7A8A87DFFA8A8A8FF7D%A8A8A8FFA8A7FD04FFA87C7DA8FFA87D7DFFA8A8A8CF7DFF7D52FFFF7DFF%A87DA7A8A8FFA77D7DFFA7A8FFA8A8FF7D7D7DFFA87D7CA8FD61FF7D527D%FD7DFFA87DFD1CFFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 70 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/set_gvm{	currentglobal exch setglobal}bdf/reset_gvm{	setglobal}bdf/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/thold_halftone{ 	level3		{sethalftone currenthalftone}		{			dup /HalftoneType get 3 eq			{				sethalftone currenthalftone			}			{				begin				Width Height mul {					Thresholds read {pop} if				} repeat				end				currenthalftone			} ifelse		}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			/srcDataStrs [ imageDict begin				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse				{					Width Decode length 2 div mul cvi string				} repeat				end ] def					imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put			imageDict /Decode [0 1] put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		DataSource 0 get type		dup /filetype eq			{			1 dict begin			/flushbuffer Width cvi string def			1 1 Height cvi				{				pop				0 1 DataSource length 1 sub					{					DataSource exch get					flushbuffer readstring pop pop					}for				}for			end			}if		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and			{			Width Height mul cvi				{				0 1 DataSource length 1 sub					{dup DataSource exch get exec length exch 0 ne {pop}if}for				dup 0 eq					{pop exit}if				sub dup 0 le					{exit}if				}loop			pop			}if				}		{		/DataSource load type 		dup /filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 idiv mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and			{				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul					{					DataSource length dup 0 eq						{pop exit}if					sub dup 0 le						{exit}if					}loop				pop			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 	dup type /dicttype eq		{			Adobe_AGM_Core/AGMCORE_tmp get			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			Adobe_AGM_Core/AGMCORE_tmp get exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{ 	/indexed_colorspace_dict AGMCORE_gget dup null ne {		dup /CSDBase known {			/CSDBase get /CSD get_res /Names known 		}{			pop false		}ifelse	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse{	/pdfmark_5 {cleartomark} bind def}{	/pdfmark_5 {pdfmark} bind def}ifelse/ReadBypdfmark_5{	2 dict begin	/makerString exch def string /tmpString exch def	{		currentfile tmpString readline pop		makerString anchorsearch		{		pop pop cleartomark exit		}{			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5		} ifelse	}loop	end} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for%% definitions of some fundamental procedures.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 201 dict dup begin put/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSD_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_in_pattern false def/AGMCORE_currentpagedevice nd/knockout_unitsq ndcurrentglobal true setglobal[/CSA /Gradient /Procedure]{	/Generic /Category findresource dup length dict copy /Category defineresource pop} forallsetglobal/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	//Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_&setoverprint /setoverprint ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse			/AGMCORE_gstackptr exch store		}def		/grestoreall {			AGMCORE_&grestoreall			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/setoverprint{			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint		}def			0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/sRGB ne					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			//Adobe_AGM_Core begin			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						current_spot_alias false set_spot_alias						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor						set_spot_alias						currentgray 1 ne					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						//Adobe_AGM_Core/AGMCORE_name xddf						false						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not AGMCORE_currentpagedevice/OverrideSeparations known and						{							AGMCORE_currentpagedevice/OverrideSeparations get							{								/HqnSpots /ProcSet resourcestatus								{									pop pop pop true								}if							}if						}if											{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not						}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace							false							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall								not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse			end		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	/AGMCORE_IsSeparationAProcessColor		{		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or		}def	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		level3 {			/AGMCORE_IsCurrentColor				{				dup AGMCORE_IsSeparationAProcessColor					{					AGMCORE_plate_ndx 0 eq						{dup (Cyan) eq exch /Cyan eq or}if					AGMCORE_plate_ndx 1 eq						{dup (Magenta) eq exch /Magenta eq or}if					AGMCORE_plate_ndx 2 eq						{dup (Yellow) eq exch /Yellow eq or}if					AGMCORE_plate_ndx 3 eq						{dup (Black) eq exch /Black eq or}if					AGMCORE_plate_ndx 4 eq						{pop false}if					}{					gsave					false setoverprint					current_spot_alias false set_spot_alias					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor					set_spot_alias					currentgray 1 ne					grestore					}ifelse				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf				dup type /dicttype eq					{					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end}{					channel get 0 paint? AGMCORE_separateShadingFunction					}ifelse				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					Shading /AGMCORE_ignoreshade known					currentdict end exch					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				//Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					/AGMCORE_SpotAliasAry2 where {						begin						dup 0 get dup /Separation eq						{							pop							dup length array copy							dup dup 1 get							current_spot_alias							{								dup map_alias								{									false set_spot_alias									dup 1 exch setsepcolorspace									true set_spot_alias									begin									/sep_colorspace_dict currentdict AGMCORE_gput									pop pop	pop									[ 										/Separation Name 										CSA map_csa										MappedCSA 										/sep_colorspace_proc load									]									dup Name									end								}if							}if							map_reserved_ink_name 1 xpt						}{							/DeviceN eq 							{								dup length array copy								dup dup 1 get [ 									exch {										current_spot_alias{											dup map_alias{												/Name get exch pop											}if										}if										map_reserved_ink_name									} forall 								] 1 xpt							}if						}ifelse						end					} if				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	/AGMCORE_def_ht currenthalftone def	/clonedict Adobe_AGM_Utils begin /clonedict load end def	/clonearray Adobe_AGM_Utils begin /clonearray load end def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/getrampcolor	{ 		/indx exch def		0 1 NumComp 1 sub		{			dup			Samples exch get			dup type /stringtype eq {indx get} if			exch			Scaling exch get aload pop			3 1 roll			mul add		} for		ColorSpaceFamily /Separation eq 		{sep}		{			ColorSpaceFamily /DeviceN eq			{devn} {setcolor}ifelse		}ifelse	} bdf	/sssetbackground {aload pop setcolor} bdf	/RadialShade	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/r2 xdf		/c2y xdf		/c2x xdf		/r1 xdf		/c1y xdf		/c1x xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		c1x c2x eq		{			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope c2y c1y sub c2x c1x sub div def			/theta slope 1 atan def			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if		} ifelse		gsave		clippath		c1x c1y translate		theta rotate		-90 rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax xdf		/xMax xdf		/yMin xdf		/xMin xdf		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			/max { 2 copy gt { pop } {exch pop} ifelse } bdf			/min { 2 copy lt { pop } {exch pop} ifelse } bdf			rampdict begin			40 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			c1x c1y translate			theta rotate			-90 rotate			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def			/c1y 0 def			/c1x 0 def			/c2x 0 def			ext0			{				0 getrampcolor				c2y r2 add r1 sub 0.0001 lt				{					c1x c1y r1 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2y r1 add r2 le					{						c1x c1y r1 0 360 arc						fill					}					{						c2x c2y r2 0 360 arc fill						r1 r2 eq						{							/p1x r1 neg def							/p1y c1y def							/p2x r1 def							/p2y c1y def							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto							fill						}						{							/AA r2 r1 sub c2y div def							AA -1 eq							{ /theta 89.99 def}							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}							ifelse							/SS1 90 theta add dup sin exch cos div def							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def							/p1y p1x SS1 div neg def							/SS2 90 theta sub dup sin exch cos div def							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def							/p2y p2x SS2 div neg def							r1 r2 gt							{								/L1maxX p1x yMin p1y sub SS1 div add def								/L2maxX p2x yMin p2y sub SS2 div add def							}							{								/L1maxX 0 def								/L2maxX 0 def							} ifelse							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto							L1maxX L1maxX p1x sub SS1 mul p1y add lineto							fill						} ifelse					} ifelse				} ifelse			} if		c1x c2x sub dup mul		c1y c2y sub dup mul		add 0.5 exp		0 dtransform		dup mul exch dup mul add 0.5 exp 72 div		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		1 index 1 index lt { exch } if pop		/hires xdf		hires mul		/numpix xdf		/numsteps NumSamples def		/rampIndxInc 1 def		/subsampling false def		numpix 0 ne		{			NumSamples numpix div 0.5 gt			{				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def				/rampIndxInc NumSamples 1 sub numsteps div def				/subsampling true def			} if		} if		/xInc c2x c1x sub numsteps div def		/yInc c2y c1y sub numsteps div def		/rInc r2 r1 sub numsteps div def		/cx c1x def		/cy c1y def		/radius r1 def		newpath		xInc 0 eq yInc 0 eq rInc 0 eq and and		{			0 getrampcolor			cx cy radius 0 360 arc			stroke			NumSamples 1 sub getrampcolor			cx cy radius 72 hires div add 0 360 arc			0 setlinewidth			stroke		}		{			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				cx cy radius 0 360 arc				/cx cx xInc add def				/cy cy yInc add def				/radius radius rInc add def				cx cy radius 360 0 arcn				eofill				rampIndxInc add			} repeat			pop		} ifelse		ext1		{			c2y r2 add r1 lt			{				c2x c2y r2 0 360 arc				fill			}			{				c2y r1 add r2 sub 0.0001 le				{					c2x c2y r2 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2x c2y r2 0 360 arc fill					r1 r2 eq					{						/p1x r2 neg def						/p1y c2y def						/p2x r2 def						/p2y c2y def						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto						fill					}					{						/AA r2 r1 sub c2y div def						AA -1 eq						{ /theta 89.99 def}						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}						ifelse						/SS1 90 theta add dup sin exch cos div def						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def						/p1y c2y p1x SS1 div sub def						/SS2 90 theta sub dup sin exch cos div def						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def						/p2y c2y p2x SS2 div sub def						r1 r2 lt						{							/L1maxX p1x yMax p1y sub SS1 div add def							/L2maxX p2x yMax p2y sub SS2 div add def						}						{							/L1maxX 0 def							/L2maxX 0 def						}ifelse						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto						L1maxX L1maxX p1x sub SS1 mul p1y add lineto						fill					} ifelse				} ifelse			} ifelse		} if		grestore		grestore		end		end		end		} ifelse	} bdf	/GenStrips	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/y2 xdf		/x2 xdf		/y1 xdf		/x1 xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		x1 x2 eq		{			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope y2 y1 sub x2 x1 sub div def			/theta slope 1 atan def			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if		}		ifelse		gsave		clippath		x1 y1 translate		theta rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax exch def		/xMax exch def		/yMin exch def		/xMin exch def		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			rampdict begin			20 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			x1 y1 translate			theta rotate			/xStart 0 def			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def			/ySpan yMax yMin sub def			/numsteps NumSamples def			/rampIndxInc 1 def			/subsampling false def			xStart 0 transform			xEnd 0 transform			3 -1 roll			sub dup mul			3 1 roll			sub dup mul			add 0.5 exp 72 div			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			1 index 1 index lt { exch } if pop			mul			/numpix xdf			numpix 0 ne			{				NumSamples numpix div 0.5 gt				{					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def					/rampIndxInc NumSamples 1 sub numsteps div def					/subsampling true def				} if			} if			ext0			{				0 getrampcolor				xMin xStart lt				{					xMin yMin xMin neg ySpan rectfill				} if			} if			/xInc xEnd xStart sub numsteps div def			/x xStart def			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				x yMin xInc ySpan rectfill				/x x xInc add def				rampIndxInc add			} repeat			pop			ext1 {				xMax xEnd gt				{					xEnd yMin xMax xEnd sub ySpan rectfill				} if			} if			grestore			grestore			end			end			end		} ifelse	} bdf}def/page_trailer{	end}def/doc_trailer{}def/capture_currentpagedevice {	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf} defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup //Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA get_csa_by_name setcolorspace_opt		set_crd	end}def/map_csa{	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse	{pop}{get_csa_by_name /MappedCSA xdf}ifelse} def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	CSA map_csa	/AGMCORE_sep_special Name dup () eq exch (All) eq or store	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc {setcolor} bdf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		7 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {					/AliasedColorants false def					exit				}				{					new_LookupTables names_index get 0 get null eq {						dup /Names get names_index get /name xdf						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq						or or or not {							/AliasedColorants false def							exit						} if					} if				} ifelse			} for			lut_entry_len 1 eq {				/AliasedColorants false def			} if			AliasedColorants {				dup begin				/Names new_names def				/LookupTables new_LookupTables def				/AliasedColorants true def				/NComponents lut_entry_len def				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	dup not {		CSA map_csa	} if	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			AvoidAliasedColorants {				/currentspotalias current_spot_alias def				false set_spot_alias			} if			Names {				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				/names_index names_index 1 add def			} forall			AvoidAliasedColorants {				currentspotalias set_spot_alias			} if			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx 					0 0 0 0 /setcmykcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				{setcolor} bdf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSDBase known {			CSDBase /CSD get_res begin			currentdict /Names known {				currentdict devncs			}{				1 currentdict sepcs			} ifelse			AGMCORE_host_sep{				4 dict begin				/compCnt /Names where {pop Names length}{1}ifelse def				/NewLookup HiVal 1 add string def				0 1 HiVal {					/tableIndex xdf					Lookup dup type /stringtype eq {						compCnt tableIndex map_index					}{						exec					} ifelse					/Names where {						pop setdevicencolor					}{						setsepcolor					} ifelse					currentgray					tableIndex exch					HiVal mul cvi 					NewLookup 3 1 roll put				} for				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt				end			}{				level3				{					currentdict /Names known {						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt					} ifelse				}{				[/Indexed MappedCSA HiVal					[					currentdict /Names known {						Lookup dup type /stringtype eq							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx					}{						Lookup dup type /stringtype eq							{/exch cvx /get cvx 255 /div cvx}							{/exec cvx}ifelse							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx					} ifelse					]cvx				]setcolorspace_opt				}ifelse			} ifelse			end			set_crd		}		{			CSA map_csa			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 			begin			CSDBase /CSD get_res begin			currentdict /Names known{				map_indexed_devn				devn			}			{				Lookup 1 3 -1 roll map_index				sep			}ifelse			end			end		}{			/Lookup get 4 3 -1 roll map_index setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_res{	dup /CSD eq {		pop 		//Adobe_AGM_Core begin		/AGMCORE_CSD_cache load 3 1 roll put		end	}{		defineresource pop	} ifelse}def/del_res{	{		aload pop exch		dup /CSD eq {			pop 			{				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef			}forall		}{			exch			{				1 index undefineresource			}forall			pop		} ifelse	} forall}def/get_res{	dup /CSD eq {		pop		dup type dup /nametype eq exch /stringtype eq or {			AGMCORE_CSD_cache exch get		} if	}{		findresource	} ifelse}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		/CSA get_res	} if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/wrap_paintproc{   statusdict /currentfilenameextend known{	clonedict	begin	/OldPaintProc /PaintProc load def	/PaintProc	{		mark exch		dup /OldPaintProc get stopped		{closefile restore end} if		cleartomark	}  def	end  } {pop} ifelse} def/make_pattern{	exch clonedict exch	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	1 index dup /ID get exch /Pattern add_res	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/RenderingIntent known{		currentcolorrendering/RenderingIntent get	}{null}ifelse	Intent ne {		Intent /ColorRendering {findresource} stopped		{			pop pop systemdict /findcolorrendering known			{				Intent findcolorrendering pop				/ColorRendering findresource 				true			}			{false} ifelse		}		{true} ifelse		{			dup begin			currentdict /TransformPQR known {				currentdict /TransformPQR get aload pop				3 {{} eq 3 1 roll} repeat or or			}			{true} ifelse			currentdict /MatrixPQR known {				currentdict /MatrixPQR get aload pop				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq				and and and and and and and and			}			{true} ifelse			end			or			{				clonedict begin				/TransformPQR [					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind				] def				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def				currentdict end			} if			setcolorrendering_opt		} if			}if} def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict /ColorRendering known{			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		clonedict		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/set_spot_alias_ary{	dup inherit_aliases	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf}def/set_spot_normalization_ary{	dup inherit_aliases	dup length	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if	array	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf	/AGMCORE_SpotAliasAry where{		pop		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval		AGMCORE_SpotAliasAry length	}{0} ifelse	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval	true set_spot_alias}def/inherit_aliases{	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall}def/set_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry2 where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry2{				dup/Name get AGMCORE_name eq{					/CSD get /CSD get_res					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	//Adobe_AGM_Core begin	/setcustomcolor	{		currentdict/TintProc known currentdict/CSA known and 3 1 roll		//Adobe_AGM_Core begin		dup /customcolor_tint exch AGMCORE_gput		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not		current_spot_alias and{1 index 4 get map_alias}{false}ifelse		{			false set_spot_alias			4 -1 roll{				exch pop /sep_tint AGMCORE_gget exch			}if			mark 3 1 roll			setsepcolorspace			counttomark 0 ne{				setsepcolor			}if			pop			pop			true set_spot_alias		}{			AGMCORE_&setcustomcolor			pop		}ifelse		end	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	//Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defend/set_def_ht{	AGMCORE_def_ht sethalftone} defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.25 0%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.25 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.25 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict /Adobe_CoolType_Data 2 copy known not	 { 2 copy 10 dict put }ifget	 begin	 /@opStackCountByLevel 32 dict def	 /@opStackLevel 0 def	 /@dictStackCountByLevel 32 dict def	 /@dictStackLevel 0 def	 endsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup /args			7 index			5 add array put			put get			}			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{ pop count }			if			dup /argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					 { (*) { pop stop } 128 string /Category resourceforall }				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup					 {						  /@shouldNotDisappearDictValue known								{										  {												end												currentdict 1 index eq													 { pop exit }												if										  }									 loop								}						  if					 }				if				end		}		{ false }	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end		currentglobal false setglobal	  userdict /Adobe_CoolType_Data 2 copy known not		  { 2 copy 10 dict put }		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.%%Version: 1.21 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 27 add dict copy }	{ 27 dict }ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {				mark				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put					 {					 ((Hex) 57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec					 }				stopped					 {					 cleartomark					 Adobe_CoolType_Utility /@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						  {						  2 copy get 3 index eq								{ 1 index length exch sub 1 sub { end } repeat exit }								{ pop }						  ifelse						  }					 for					 pop pop					 Adobe_CoolType_Utility /@eexecStartData get eexec					 }					 { cleartomark }				ifelse			} }			{ {				Adobe_CoolType_Utility /@eexecStartData get eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind def/T0AddT42Mtx2{	/CIDFont findresource /Metrics2 get begin def end}bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/AGMIMG_flushfilters nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/AGMIMG_flushfilters{	dup type /arraytype ne		{1 array astore}if	aload length		{		dup type /filetype eq			{			dup status 1 index currentfile ne and				{dup flushfile closefile}				{pop}			ifelse			}{pop}ifelse		} repeat}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	CSA map_csa	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{ 									Name AGMCORE_IsSeparationAProcessColor  									{ 										Operator /imagemask eq{ 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor 										}{											invert_image_samples 										}ifelse	 								}{	 									[ /Separation Name [/DeviceGray]	 									{ 	 										sep_colorspace_proc AGMCORE_get_ink_data											1 exch sub	 									} bind										] AGMCORE_&setcolorspace										/sep_tint AGMCORE_gget AGMCORE_&setcolor 									}ifelse 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name AGMCORE_IsSeparationAProcessColor not and					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	mark currentcolor counttomark dup 2 add 1 roll cleartomark} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/DataSource origMultipleDataSources		{			[			BitsPerComponent 8 idiv origDecode length 2 idiv mul string			0 1 origDecode length 2 idiv 1 sub				{				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch				origDataSource exch get 0 () /SubFileDecode filter				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx				}for 			]bind cvx		}{origDataSource}ifelse 0 () /SubFileDecode filter def			[		origcolorSpaceElemCnt string		0 2 origDecode length 2 sub			{			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx			}for		/convProc load /exec cvx		origcolorSpaceElemCnt 1 sub -1 0			{			/dup cvx 2 /add cvx /index cvx			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx			}for	]bind cvx 0 () /SubFileDecode filter	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	CSA map_csa	2 dict begin	dup	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi			{				dup 65535 gt {1 add 2 div cvi}{exit}ifelse			} loop			string		} repeat		end ] def	/dstDataStr srcDataStrs 0 get length string def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [ [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def									/MultipleDataSources true def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA get_csa_by_name 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							devn_alt_datasource						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								devn_alt_datasource							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get get_csa_by_name				}{					/Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		<<			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		>>		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		current_spot_alias{dup 4 get map_alias}{false}ifelse		{			false set_spot_alias			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask			true set_spot_alias		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (Page 1) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2007-04-05T16:40:31+02:00</xap:CreateDate>
         <xap:ModifyDate>2007-04-05T16:40:31+02:00</xap:ModifyDate>
         <xap:MetadataDate>2007-04-05T16:40:31+02:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>132</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAhAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYqluta3FpiQosTXV/duYrGxjIDyuBU7nZUQfE7nZR9AwEqxdtVtZfMw0PzNqU8Oo&#xA;SxxyQW1s72lgTMW4xJLGyzSP+7P94wDb8V7ZG991QPle20u+8xGwu9Fsmkt4LxL6tqrNHNBeCOHl&#xA;LIrNSaA8l+I1pXEJXy6TZp52utPfSbO30q3jGoy6gttHCy2og9MRLNEEbl6/N612UY1uq3yhqfmT&#xA;ULee+0tJbW0jHqwWepTTTQzROS0Y9SdBPEzR0YMjyR+3YItWbaHrlrq9q0kQMVxA5ivLSSnqQygV&#xA;KPSo9wRsw3G2SBtCY4VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirzG9XzZrcV35s8vBZJfrDQabCz+m5sbQsKxk/CfXuV9R1JHNFC13yvc7pY95n8za1qXmS00&#xA;zTdLhHm67t/ReS6jjd7a2V2nhVkf1EWfiPUfstQAK4CVeaap5v8APJvZob/WL9bmB2jliNxIoR1P&#xA;FhxVgooR2wWqf/l//wArF8w6hNBp+vXNrbwxPLcXF1NK9sAtBxZW5oSa9COlcItU58s6zf8AmvRr&#xA;vyjB6VnqkbtOkVoY7e0vSXRJGmVVK0jUFykYAkHbbdG+ys0sbjSvLGo6S9lqyamIPS0fzDIhBAWZ&#xA;m+pyPQuq+g/7vdiQhocPJXp2WIdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVY7+YerSaV5L1a7ir9YMBgt6dfVnIhQj3DPXBI7KxFPI97Bq9pcadrUT2OnW8FleWsF&#xA;xLbTwxW6BJqSRGUH4w0hUqtTsTtkKS8//LbzRc3X5rT6ozR+tqpuQEuGZFIf40QOqyceIQUqKUFM&#xA;AO6pL5RsNL80/mIIdduSYNSuJ5HliBj9aaQs6hdhw5sdtvbANyrLNb0VdI8mearFYRZ6Ek8aaRLc&#xA;1E93cx3VXkVXPI8Yv3dVUAgV8cNK888sX7aP5i02+uIyLb1FM6SCiyW0pMcw36q0ZZcCvfPM2hea&#xA;L7SZ9JttKtNO8v8ApXMItbaVWk5LE0ltOyCONVCzRJ8KMW+LfpkyCrLPJusHWfKulamzcpLm2jaY&#xA;/wDFoHGT/hwckDshOcKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;Vhn5nESweXbAn4b7XLKOVfGNS0jdj/IMjJWNeYLbRSdY1a217T73ULKzv7hLe0t7eO6JkhlgPqTR&#xA;NydEaSpBWtQDXxiUvHvIWsx6R5otLyZ0S2pIlz6qh4zG6EEMp6itMiFej+TNR/K2x8yabd6TazXm&#xA;qa3Mix2RXmumFhRuJYfF8f7Q6Jvt3kKVkGvT6WPzqsZdevlsoLGxV9KilqI5ZJPVDMX+wlDy+0RU&#xA;hRhPNWA/nRP5eaTy/aaddR3uoafYi0vrmFi0bRxhfRAILJ9oyHbffftkZK9A0HTNCfXtP12712Ky&#xA;ubuOxeHS7WT0TNPPCrr9YJY+o0pb7IAqKeOEBU6/KH915Wn08fZ03ULy0QeAWYv/AMb5KHJDNskr&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYV+ZKUu/KM5rxTXrRGo&#xA;K/3gdQfvyMlSzzN+XWk6T5Y1u/tLi7mlh0+69OKaRGjUNAFYgBF6JGB17YDFXnv5S6n52g0q8g8u&#xA;S2Ah+u26XEd2sjSB7n92jjjReFENd67ZGJKXpvk9vMmpeb9S/wATrayXflxVt7Ka0RljJv0SWRgX&#xA;JNRHGg6ftHJjnuhA2nmLzZqEl3q1tPbabJLqiaGLK4hMwiEDMORkWSPkxaRtqeAwWUsB/OTXPMU9&#xA;vpun6pd2l1DIz3Ma28TQyo0ZaIiRWeSm/IUNDUEdsiSr1Ly35B0SbTdF1O59Z7uOwsQU9RljDwxw&#xA;EOEG4Y/V4wd+gpkxFDf5T/Fo2rTD7E+sX0kZ/wAkuB/DGCs2ySuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxViP5qW8j+Tbm8hXlPpcsGoRD3t5Vdv+E5ZGXJWRXkEGra&#xA;PPAGDW9/bsgbsUmQiv3Nh5q+bvy488WPkyfVbbVdOlu3neAosbBTHPaNJQEH3k69qdDlYNJZZa6z&#xA;5g0Q+UfLKyCx1HULr9La68zgMI2nLLHKWNQBDH8QJrsBjyVMvMCaro2raZo8cttHaeZdam1WG5ul&#xA;blEfVVmjkjJCsrq4oKg78duuEqxf83NMh1HzJoUdi8Ut3qaiDnGweQkyKkXNhu4o3wM3xU2bdcBV&#xA;71qFzBpGiXN1QLBp9s8gXsEhjJp27LlnJCRfldp0lj5C0iOX+9miN1ITsSblzNv9DjBHkrKskrsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVUry1gvLSe0uF5wXEbRSp4&#xA;o6lWH3HFWPfl7cTroH6Hu2rf6FK2m3Haqw09CQA70eAowORirxH86fKF5onmubV4ImGm6o/rxTr0&#xA;S4beRCR0YsC49j7HISG6V+gReWNSni8yebtYtdTu76eCOe0lkkgnhPqrGXYRgKVWMV7LQYq3+Y0f&#xA;l3V4ZdXs9diY2Ty21vp8lxPdTyKkxVCnqEhEKjlt8NPfEqq/kX5OudS8yprk8RGm6ZVo5GB4vcEU&#xA;RV8eFeR8NvHGIV69+YxkvdOs/LVuxFzr9wlsxX7S2sZEtzJ9Ea8f9lk5dyGVxRpFGkcahY0AVFHQ&#xA;ACgGSVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirHdZ0++s&#xA;NWHmLSoTcO0awatp6EBriFCSksdaAzQ1PEH7SkrXpkT3qhfNuoLrPky6bQ2W8mneKBIjAtxSR5VQ&#xA;rNDKrBePKr81+GmJNhWBap5P8nSfmLbeXv0NbraOESeWN5opi7W8sxYKkyqF/dqPhhK7kF1O2RoX&#xA;SVPRvJvla6g80QafptlcappUbfo5oZJrpjKA9YzDPIyyFSqrz9MIWJFDx3QFZv5M8wfo7yhE2tq1&#xA;u8U0sFjEIWjkuEryiWC3EVu7EBuG0QqVr0wg7ITTQNKv59Tm8x6xH6N/PGILGxqG+qWteXAkbGWR&#xA;vikI9lGw3IHVWRZJXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqk8&#xA;vnPyfDK8M2u6fHLGxSSN7uBWVlNCCC9QQcFhVn+OfJX/AFMGm/8ASZB/zXjYV3+OfJX/AFMGm/8A&#xA;SZB/zXjYVLb3VvyyvLn63JrOnRXtOJvLe/jt5yB0DSwyI7D2Jpg2VCtqnlQMGh8+rCRsp+t6ZKwH&#xA;hznhlf8A4bHbvVbFf+T1qJPPSSK32gt3psBI8OVtFA/447d6o3T9Z/LOwmNxb6xppu2HFrua+inu&#xA;Cv8AKZpZHkp7cqY7KmP+OfJX/Uwab/0mQf8ANeGwrv8AHPkr/qYNN/6TIP8AmvGwqtZ+bPKt7cpa&#xA;2es2NzcymkcENzDI7ECvwqrEnYY2qa4VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdir4681f8AKUax/wAx1z/ydbKEvSfzC0qx/R/mdLTS4I1025t/RlSwishBEz8WMdxEf9I5&#xA;EqvFh03HTJFWMaDoY1PyCzWdgLvUotdt1leOISTLbSQMtGIBYRtJT2rg6Kh/Nlpp8X5nXdpbQxJZ&#xA;JqKRLbxqoiCh1VkCKONOoIxPNWY/mTZeWf8AD2tmwtbJrzTdUjt+VpaLZPaxvy+B2WgnrwI2+eEq&#xA;l/5e2mmDyNd30+nrd3I1NYFlXTYtTlEZt+XHhIV4pUVrXr88RyViHlzRG17zpb6bLGIUuLpjdIFE&#xA;QjiQmSb4OicUVtu2AKnv5t6NpkGo2Os6RHaxabqcTKI7Bo3t0mt24OFMPwboUJp3rhKp5F5bsjc2&#xA;V+dMhOlDyiLia59FPQ+ti3YGRmpx9b1O/wBquNKxX8o//JjaL/xlk/5MvgjzV9VZch2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvlLzDr/wCXx80anbS6JqMt19enjd1v4URp&#xA;PWZSQGgPEFvE7ZinJ5fb+x63F7KynjE/EABiD9PlfemOs6nYGHU11jQtekh0SSJNRW51aJ1hknPG&#xA;IUaI8i3+TXb2x8Q932/sa8fs5CfBw5onxL4fSd65/gr9Bh06XT49V0jy7q8Fnec0juF1m1tvU9Nu&#xA;Lj4o42ND1wHJXT7f2NeXsHHjmYSzDiHP0SPP3JXoFx5R129li0fy3qtxdW8ZupSNTt4ykaMoMheS&#xA;FAKM474eM932/sbtT7MjABLJlABNfSefwVfMOreXdDvZ9P1vQNbtrm7VLi4ik1OJhMCSUkYrCyyb&#xA;1oaneuPGe78fJOm9mRnjxY80ZR/qn9aLstS06w10+WbLRNds9VkpIbGLV4YQS0ImDEiJY/7qh648&#xA;Z7vt/Yw/0OR8LxfGHh9/Ce+vfzW6/wDojytMlzq/lzWbCe8LqJf0rbtI/IAyBjHEzfEG3r1x4z3f&#xA;b+xjpfZ6Govw8wlX9E/pQerX/ljS9M05tS8ua1Bp2oobvTVfUYjFIrBayIogIBIZe1aUx4z3fj5N&#xA;uH2ZGWUowzRJgal6Tsfmm1lYwXnllr+18sa3JoYje69EatbjlFGaPKtsYxIyg/tBMeM932/scbJ2&#xA;Hihk8OWePFdfTKr7r5fat/K3X/Ilz5+0iDTtIv7e9eRxDNNeRyxqRE5PJFhQnb3wxnvy/Hybdf7M&#xA;y0+GWUzB4elftfS+ZLy7sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVfEXn&#xA;DT79vNutsttKVN/dEEIxBBmb2zB4g+waHLDwIbj6I/cy/wA+eb49b8oaZZ2dtcfpi9aK48zSNE45&#xA;z2cC20PxFRyDKC58DjxB1XZui8HPKUiPDjYx7jlI8R/Uj9C1nQn/AC/0jRL2eC1vbJr31xfaNJqJ&#xA;UXMgZDC9P3ZoN+PXbwxMxVW06nBkGqnkiCYy4a4cghyHXvYz+W+rL5duNeuL6zaU3ej3FpaQTW8k&#xA;sUs7yRMkcigfZYIa12wiYDsO1cPjjGIy+nICSCAQKO4+a38ydWfzJqel39rbyLw0u1t7i1SGRIbe&#xA;aIMHhhUqKRg/EKV69ceMJ7KwjTwnGRH95Ig2LIPU+al+Zl2uu+dL7VNNhnls547VY3aGRCTFaxRP&#xA;8LAHZ0OJmGfZMPB08YTIEhxdR1kSr+fZ7PzF+YcuoQi4XR7o2Ucl16EoZEjt4YZm4FeXwlG7b4mY&#xA;a+zYywaUQNeIOLax/OJDJvzI83eXfNPl+6sbKyvbW40y9jk0b1Ud0ltvTFs6RgRr6K8Ikk4uTv3x&#xA;Mw67srRZdNlEpSiROJ4qPI3xb7+rckbIry75k8sR+T4LXW5prs2uny20WmSafIL+OdixAtdQhCKk&#xA;JrWjknxyNxrf8fj8Br1WlzHOZYwI8UweLjHDX9KBv1e5iv5L2N7H+Z+gvJbyIglkqzIwA/cSdyMn&#xA;GQsOz7eyROjyAEch94fX+Zj5Y7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqwHy9+a9rqnnjUfLE9u&#xA;lsto88drd+pyErWzEMCCAF+FS3XtkRLdXeU/zVtvMnmnU9NtrdItI0+GScam8lOaxuqcipACqeRa&#xA;pPQb4iVqnek/mJ5K1fUv0Zp2qxT3pqEiAdeZAqeDMqq+w/ZJwiQVXg87eVp9OvtRi1BDZaa3C+lK&#xA;uvpt0oQyhuvgMeIKpah+YPk7TtOtdRvdTSG1vl9S0YrIXkT+ZYwpk4+/HHiCptpWrabq9hFf6bcJ&#xA;dWc1fTmQ7GhoRvuCD1BwgqwG5/M7zTP5k1bRtB8uDVBpUvpTSi4EZ7ipDKP2lPQ5DiKsm1Hz55e0&#xA;S1s/8RXkWm6hcQxyS2VWmdGcDkKRqzcQ1RyIptkuJURd+dvKlpp1nqVxqcKWF+3C0uKlldvD4QaU&#xA;716d8eIKo235geTrmW0it9Tjle+ma2tOKyESSoVDKp40/bXfpvjxBVU+ePKgi1OY6jH6ejOseptR&#xA;6QuzmNQfh3q6kfDXGwqne/mB5NsXskvNVhgfUESW1V+QJjkFUd9v3at2L0x4grR/MLyaNJbVzqcf&#xA;6NS4+qNc8ZCvr8efADjU/DvUCmPEFVF89eUW0+71EapCbGyl9C4uangJKV4KafGT24Vx4grFrT8y&#xA;JNZ/MnTNI0K7hufL81o093IqfH6irKaVYBk3CVBAyPFurNdR8xaLpt/Zafe3IhvNRYpZRFWJkYEA&#xA;gEAgbsOpyVqhD548qCLVJTqMfp6M6x6m1HpC7uY1B+HerqR8NcbCpTP5+sV8yxRLqdkmipp5vbpZ&#xA;EmFzRwHjcfCEVODA7779OmDi3VIh+clvqfkXWtZsIlstU07iqWkjeseMjxokpoqjiWkIp7YOLZU8&#xA;8l/mJo2q2ul6de6lDJ5ju7dZpbaNWA5MnqcagcAwT9nlXCJKnvmnzNpvlrRZ9W1An0YqKkabvJI2&#xA;yoo8T/bhJpWI6B55/MTV7qxuP8KC30O8lQG5eceokDkfvOJ4saKeX2KHIglU/n/MryLBqn6Ll1iB&#xA;b0N6ZX4igetOLShfTBr4tkuIKitT87eVdLvpbHUdSitbqCL6xLFJyFIzsDWlCTXYDfHiCpL5k/NH&#xA;QLPyZN5g0m7iuzIWgsFZZAHuB+yykKy8QeRBpt88BlsrF/LP5geZp9H068vdc06a41a/itooJYJU&#xA;9NEIM0a+ki8pCJY+p4ivXIiRSzDzX+Y/lnRodRsxqcC63bWs0sFqan96sZZEYgFAxanwk1yRkhB+&#xA;VfzBto/Imna/5sv4bWa9aXieJXkElZAEjQMzfCtdhiJbbqnI/MDycdEGuDU4zpZlEH1gK+0pFeDJ&#xA;x5q1N6EYeIKq6b528qanrEuj2GpRXOowgs8KciKL9ri9ODU78WONhVBPzE8lvrS6LHqsUmpPJ6Kw&#xA;oHYGStOHqBTHWu1OWPEFW3v5jeSLHVf0VdavDHfBvTaP4mVXrTi8igxqQevJseIK8m0X8qNY8xaP&#xA;JqFzBNpWrT6xK07XCPDJ9RmRfUIV9yeTHiO++ViKV0XkTXl0/wA/Q6Vplxao0kNvpkLRvGbi1hnY&#xA;v6RcLzqkanb7VffdpVTy3oOoa7r3k9bPQbjR7Xy5HE+qX08PoetPEVkelQC/N0+fxGoGEBV2o+Sv&#xA;M1x551ny3BZzxeXNb1GG+vNQEbiERIHndFkpw+1LSlftKMaNqt/MLy1qlr+YiahLZXsmgfV4obJ9&#xA;NtkumiRIREYlSSqIQ3IivStRvgkN1ereQdF0/SPK1na2Fvc2sDBpTFfAC5DOan1VX4Vb2HTLIjZD&#xA;zbyh+V6eY9R8war5hh1DTpLi/le2QcrYukjNIWo6VYfFsQMgI3zShtfsNU0nz35lur7y9c60NUtX&#xA;g0WaKAzwqXVUSvXjwUcTTcU6UOAjdUNL+X/mGPS/JOgXljPNC97Lc6uI0eSKCOaSIBZJEBVSIw1d&#xA;+uNKyn82/L17aReWr/yzpLSyaPetNHa2MBZVrwkqUiU0BaEAmmSkO5DC9M/LzzUutweXZ7S5/Res&#xA;GxvNavmST0gYkeaWIyAcOXKQrua8gMiIlKbavpOrWn5heZDP5cn1c6patbaLIsSvboWRFQl3oiKi&#xA;rTrUUp3xI3VKB5Z8w3X5c6DoiaTerJNrEst6PQkJQACMSPt8C8ZCKtTocaNKyz84PLLW1r5dXRtG&#xA;M2iWl00mo2NlD9qgjCFlQVNUV15HxyUgqp5E0fUJvzW1fXpdDn0fTpLNRZxyw+koZ1hA+yOHMqrF&#xA;1U7EkHfEDdUb+dGna07eXNX0exmv7zSb0yrFBE8xH2JAWVAx48oQMZIYHp35eeaxrcHl6e0uf0Zr&#xA;BsrzWr8pJ6YMSPNLEZacOQaQr1ryAyPCUspGg61ceefPGojTJhD+ipbPSg8LrFK6xRpGISy8W3i7&#xA;HvhrcqxuPStYb8mjplpoN9+k5L9Uuv8ARX9SRKvKGUAM5ReKgkgDltgrZWS2/kqWx/Nby0LHS5IN&#xA;L03TlW7vY4WWFp1imFWlAKFyWWu9ThrdU8/O3y1q+u+Uok0uJrmazuVuHtYwS7oEdDwUfaZefTwr&#xA;kpBDeh+dtf8AMdlLpsHly80q4azlV72dTDbxTekRGIiy/F8dKdKDADavLLby1rt75Zt/J8Plm5h1&#xA;w6i095qk8PCJYgpUfviOm/jTbapORpLMovK95N+ZHmDUr/S57ux03TPT02SaB2SeeKCOMGPkvGRj&#xA;R6AV3OGt1YtqWl3WifklFbX9pJa32oaty9GeMpKo4deLgMKiAYOis08xeVr7/GnkSxtNPlOnaSqT&#xA;XN1FE3oLIhUku6gqGP1dep8MJG4VhA0jzDHpPm3S7nyzeXuvX1ysv6R9AyKsay82KPQszMfs8Ota&#xA;9BgpUX5p8o+YrJvJ13JZXkunWWnWy3C2tutxLBcBmllVoJOSV5OPt7Hp2xIVGeYPJ7P5H0fTNB0v&#xA;VTHqWqm6vvrkB+sJxUw+pKsSlI0Ieq+2JGyptL5Q1L/lZmsHSNNews7TRpLfSroRNFbtcNbLGgSW&#xA;nBmDSnv2PhhrdVL8pYprO2Ty/deVri31dZZ5pNZuLcCKJlQ+k3qOOVQaKAvzHfGKsV8q+SZTqDaJ&#xA;5o0vWTLNfRlvqttGYGpVPUmu2Bf0xzYngaU364AFfR+WodirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirzfzz/AIA/x1pP+Jfrn1vjF9T5V/R9fUbhzp+1z+12pSu2QNWr&#xA;0jJq7FXYq7FXYq7FXYq//9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:6546087DE4EE11DBA0EA9DEDDCDCAD22</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:6546087EE4EE11DBA0EA9DEDDCDCAD22</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:6546087CE4EE11DBA0EA9DEDDCDCAD22</stRef:instanceID>
            <stRef:documentID>uuid:6546087BE4EE11DBA0EA9DEDDCDCAD22</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_AGM_Core/capture_currentpagedevice get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -160.179 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 160.179 li313.81 160.179 li313.81 0 licpclp[1 0 0 1 0 0 ] concat10.9219 155.643 mo11.8677 148.418 li11.9541 147.752 11.5454 147.623 11.1367 148.268 cv7.46045 153.9 li7.1377 153.9 li4.85889 148.225 li4.64404 147.688 4.19238 147.752 4.10645 148.375 cv3.13867 155.643 li0 155.643 li1.82715 141.925 li5.1167 141.925 li7.91211 148.139 li8.0625 148.482 8.27734 148.504 8.53516 148.139 cv12.6636 141.925 li16.0176 141.925 li14.1685 155.643 li10.9219 155.643 licpfalse sop/0 [/DeviceCMYK] /CSA add_res0 0 0.2 0.7 cmykf22.9189 147.43 mo21.6934 147.43 20.833 148.611 20.5967 150.375 cv20.3604 152.116 20.8979 153.385 22.1016 153.385 cv23.3057 153.385 24.209 152.138 24.4453 150.375 cv24.6816 148.611 24.144 147.43 22.9189 147.43 cvcp21.7793 155.879 mo18.7905 155.879 16.5547 153.9 17.0278 150.375 cv17.479 146.849 20.2744 144.914 23.2627 144.914 cv26.23 144.914 28.4014 146.827 27.9497 150.375 cv27.498 153.9 24.7676 155.879 21.7793 155.879 cvcpf35.9258 155.643 mo32.3784 155.643 li29.9272 145.15 li33.3027 145.15 li34.5713 152.009 li34.6572 152.417 34.894 152.481 35.0874 152.009 cv37.8608 145.15 li41.1934 145.15 li35.9258 155.643 licpf47.8154 147.106 mo46.6758 147.106 45.9019 148.139 45.7515 149.213 cv45.6865 149.665 45.73 149.858 46.8477 149.687 cv47.8799 149.536 li48.7827 149.407 49.1055 148.805 49.1055 148.268 cv49.1055 147.773 48.7827 147.106 47.8154 147.106 cvcp48.7612 150.912 mo46.8262 151.191 li45.7515 151.342 45.4502 151.471 45.4502 151.793 cv45.4502 152.073 45.4717 152.396 45.8159 152.783 cv46.1812 153.234 46.9766 153.6 47.9873 153.6 cv49.1055 153.6 50.0298 153.385 50.8037 153.17 cv50.5459 155.083 li49.6641 155.557 48.3745 155.857 46.7832 155.857 cv43.709 155.857 41.4727 153.707 41.9243 150.396 cv42.376 146.935 44.9771 144.914 48.1162 144.914 cv50.9111 144.914 51.9863 146.525 51.9863 147.967 cv51.9863 149.858 50.3525 150.676 48.7612 150.912 cvcpf64.0474 144.871 mo63.7031 147.602 li68.7559 147.602 li68.4116 150.225 li63.3164 150.225 li62.6284 155.643 li59.2744 155.643 li61.1016 141.925 li69.7231 141.925 li69.3149 144.871 li64.0474 144.871 licpf76.4312 147.43 mo75.2056 147.43 74.3457 148.611 74.1089 150.375 cv73.8726 152.116 74.4102 153.385 75.6138 153.385 cv76.8179 153.385 77.7212 152.138 77.9575 150.375 cv78.1938 148.611 77.6563 147.43 76.4312 147.43 cvcp75.2915 155.879 mo72.3027 155.879 70.0669 153.9 70.54 150.375 cv70.9912 146.849 73.7866 144.914 76.7749 144.914 cv79.7422 144.914 81.9136 146.827 81.4619 150.375 cv81.0103 153.9 78.2798 155.879 75.2915 155.879 cvcpf89.6968 147.859 mo87.998 148.074 87.2886 149.17 87.0522 151.041 cv86.4502 155.643 li83.0103 155.643 li84.3862 145.172 li87.353 145.172 li87.439 146.547 li87.4604 146.935 87.6328 146.784 87.8047 146.568 cv88.5786 145.645 89.7183 144.957 91.0728 144.957 cv91.3091 144.957 91.5454 144.957 91.6104 144.957 cv91.2017 147.795 li90.8145 147.795 90.2773 147.773 89.6968 147.859 cvcpf104.768 155.643 mo101.285 155.643 li100.791 150.031 li100.748 149.622 100.468 149.622 100.317 150.031 cv98.1675 155.643 li94.3618 155.643 li92.9644 145.15 li96.3613 145.15 li96.813 151.857 li96.8345 152.267 97.1572 152.267 97.3076 151.857 cv99.8232 145.15 li102.618 145.15 li103.328 151.857 li103.371 152.331 103.693 152.31 103.844 151.857 cv106.123 145.15 li109.197 145.15 li104.768 155.643 licpf117.216 148.439 mo116.786 147.645 116.421 147.43 115.711 147.43 cv114.314 147.43 113.604 148.783 113.389 150.375 cv113.196 151.771 113.475 153.385 114.873 153.385 cv115.668 153.385 116.786 152.567 117.13 150.375 cv117.259 149.579 117.302 148.59 117.216 148.439 cvcp118.807 155.879 mo117.84 155.879 116.958 155.319 116.851 154.18 cv116.829 153.814 116.722 153.793 116.507 154.115 cv115.733 155.19 114.83 155.879 113.497 155.879 cv110.68 155.879 109.39 153.299 109.82 150.246 cv110.229 147.321 112.25 144.871 115.045 144.871 cv116.012 144.871 117.001 145.322 117.56 146.311 cv117.689 146.568 117.883 146.655 117.99 146.354 cv118.42 145.15 li121.237 145.15 li120.248 152.331 li120.119 153.191 120.463 153.621 120.871 153.449 cv120.57 155.643 li120.205 155.793 119.646 155.879 118.807 155.879 cvcpf129.622 147.859 mo127.923 148.074 127.214 149.17 126.978 151.041 cv126.375 155.643 li122.936 155.643 li124.312 145.172 li127.278 145.172 li127.364 146.547 li127.386 146.935 127.558 146.784 127.73 146.568 cv128.504 145.645 129.644 144.957 130.998 144.957 cv131.234 144.957 131.471 144.957 131.536 144.957 cv131.127 147.795 li130.74 147.795 130.203 147.773 129.622 147.859 cvcpf138.48 147.43 mo137.233 147.43 136.395 148.611 136.158 150.375 cv135.921 152.116 136.459 153.385 137.663 153.385 cv138.867 153.385 139.77 152.138 140.006 150.375 cv140.243 148.611 139.705 147.43 138.48 147.43 cvcp139.942 155.643 mo139.834 153.836 li139.813 153.385 139.619 153.557 139.426 153.836 cv138.91 154.609 137.899 155.879 135.9 155.879 cv133.578 155.879 132.18 153.836 132.589 150.74 cv133.083 146.913 135.642 144.914 137.964 144.914 cv138.931 144.914 139.598 145.215 140.092 146.074 cv140.329 146.461 140.501 146.525 140.565 146.031 cv141.339 140.377 li144.715 140.377 li142.672 155.643 li139.942 155.643 licpf163.634 155.643 mo160.151 155.643 li159.657 150.031 li159.614 149.622 159.334 149.622 159.184 150.031 cv157.034 155.643 li153.228 155.643 li151.831 145.15 li155.228 145.15 li155.679 151.857 li155.701 152.267 156.023 152.267 156.174 151.857 cv158.69 145.15 li161.485 145.15 li162.194 151.857 li162.237 152.331 162.559 152.31 162.709 151.857 cv164.989 145.15 li168.063 145.15 li163.634 155.643 licpf171.826 143.795 mo170.944 143.795 170.17 143.107 170.278 142.162 cv170.407 141.172 171.309 140.506 172.277 140.506 cv173.159 140.506 173.911 141.193 173.782 142.162 cv173.631 143.15 172.772 143.795 171.826 143.795 cvcp168.493 155.643 mo169.891 145.172 li173.288 145.172 li171.89 155.643 li168.493 155.643 licpf178.125 155.879 mo176.276 155.879 175.093 155.104 175.502 152.116 cv176.125 147.666 li174.771 147.666 li175.072 145.516 li176.405 145.516 li176.792 142.721 li180.189 142.721 li179.823 145.516 li181.973 145.516 li181.672 147.666 li179.543 147.666 li179.006 151.578 li178.813 152.912 178.856 153.299 179.78 153.299 cv180.146 153.299 180.555 153.256 180.663 153.213 cv180.339 155.449 li179.801 155.686 178.942 155.879 178.125 155.879 cvcpf189.606 155.643 mo190.422 149.622 li190.551 148.654 190.508 147.58 189.305 147.58 cv188.058 147.58 187.026 149.041 186.768 150.912 cv186.768 150.912 186.575 152.31 186.145 155.643 cv182.748 155.643 li184.768 140.377 li188.187 140.377 li187.305 146.935 li187.219 147.58 187.499 147.451 187.756 147.042 cv188.445 146.01 189.499 144.914 191.37 144.914 cv193.863 144.914 194.122 147.192 193.927 148.74 cv193.927 148.74 193.412 152.653 193.024 155.643 cv189.606 155.643 licpf210.933 144.526 mo207.88 144.526 206.096 146.504 205.795 148.891 cv205.473 151.342 206.956 152.998 209.171 152.998 cv210.503 152.998 211.622 152.74 212.804 152.116 cv212.46 154.631 li211.364 155.319 209.88 155.879 207.837 155.879 cv204.398 155.879 201.581 153.406 202.205 148.762 cv202.829 144.097 206.762 141.646 210.246 141.646 cv211.837 141.646 213.019 141.817 214.396 142.248 cv214.03 145.021 li212.998 144.612 212.095 144.526 210.933 144.526 cvcpf220.867 147.43 mo219.641 147.43 218.781 148.611 218.544 150.375 cv218.308 152.116 218.845 153.385 220.049 153.385 cv221.253 153.385 222.157 152.138 222.393 150.375 cv222.629 148.611 222.091 147.43 220.867 147.43 cvcp219.727 155.879 mo216.738 155.879 214.502 153.9 214.976 150.375 cv215.427 146.849 218.222 144.914 221.21 144.914 cv224.177 144.914 226.349 146.827 225.898 150.375 cv225.446 153.9 222.715 155.879 219.727 155.879 cvcpf234.433 155.643 mo235.25 149.622 li235.378 148.654 235.357 147.58 234.111 147.58 cv232.884 147.58 231.832 149.041 231.595 150.912 cv231.595 150.912 231.402 152.31 230.971 155.643 cv227.552 155.643 li228.951 145.15 li231.896 145.15 li232.132 147.042 li232.154 147.623 232.347 147.43 232.605 147.042 cv233.271 146.031 234.283 144.914 236.196 144.914 cv238.689 144.914 238.991 147.192 238.776 148.74 cv238.776 148.74 238.238 152.653 237.83 155.643 cv234.433 155.643 licpf249.504 142.678 mo249.052 142.506 248.601 142.441 248.085 142.441 cv247.032 142.441 246.601 143.193 246.494 144.204 cv246.386 145.15 li248.644 145.15 li248.3 147.688 li246.042 147.688 li245.312 153.041 244.882 156.008 244.882 156.008 cv244.473 158.889 242.646 160.179 240.904 160.179 cv240.324 160.179 239.184 159.963 238.905 159.877 cv239.206 157.706 li239.4 157.813 239.658 157.835 239.958 157.835 cv240.667 157.835 241.377 157.061 241.549 155.729 cv242.646 147.688 li241.097 147.688 li241.42 145.15 li242.968 145.15 li243.097 144.097 li243.484 140.957 245.892 140.098 247.441 140.098 cv248.429 140.098 249.16 140.162 249.805 140.355 cv249.504 142.678 licpf252.493 143.795 mo251.611 143.795 250.837 143.107 250.945 142.162 cv251.074 141.172 251.976 140.506 252.944 140.506 cv253.826 140.506 254.578 141.193 254.449 142.162 cv254.298 143.15 253.439 143.795 252.493 143.795 cvcp249.16 155.643 mo250.558 145.172 li253.955 145.172 li252.557 155.643 li249.16 155.643 licpf261.308 147.43 mo260.06 147.43 259.222 148.611 258.986 150.375 cv258.75 152.116 259.287 153.385 260.49 153.385 cv261.695 153.385 262.597 152.138 262.833 150.375 cv263.07 148.611 262.533 147.43 261.308 147.43 cvcp262.769 155.643 mo262.662 153.836 li262.64 153.385 262.447 153.557 262.253 153.836 cv261.738 154.609 260.726 155.879 258.728 155.879 cv256.406 155.879 255.007 153.836 255.417 150.74 cv255.912 146.913 258.47 144.914 260.791 144.914 cv261.759 144.914 262.425 145.215 262.919 146.074 cv263.156 146.461 263.328 146.525 263.392 146.031 cv264.167 140.377 li267.542 140.377 li265.5 155.643 li262.769 155.643 licpf274.335 147.106 mo273.197 147.106 272.423 148.139 272.273 149.213 cv272.208 149.665 272.251 149.858 273.369 149.687 cv274.4 149.536 li275.304 149.407 275.626 148.805 275.626 148.268 cv275.626 147.773 275.304 147.106 274.335 147.106 cvcp275.283 150.912 mo273.347 151.191 li272.273 151.342 271.972 151.471 271.972 151.793 cv271.972 152.073 271.994 152.396 272.337 152.783 cv272.703 153.234 273.498 153.6 274.507 153.6 cv275.626 153.6 276.55 153.385 277.326 153.17 cv277.066 155.083 li276.185 155.557 274.896 155.857 273.304 155.857 cv270.23 155.857 267.994 153.707 268.445 150.396 cv268.896 146.935 271.498 144.914 274.638 144.914 cv277.433 144.914 278.507 146.525 278.507 147.967 cv278.507 149.858 276.873 150.676 275.283 150.912 cvcpf286.828 155.643 mo287.646 149.622 li287.775 148.654 287.753 147.58 286.505 147.58 cv285.281 147.58 284.226 149.041 283.99 150.912 cv283.99 150.912 283.796 152.31 283.367 155.643 cv279.949 155.643 li281.345 145.15 li284.291 145.15 li284.527 147.042 li284.548 147.623 284.742 147.43 285.001 147.042 cv285.667 146.031 286.677 144.914 288.591 144.914 cv291.085 144.914 291.386 147.192 291.171 148.74 cv291.171 148.74 290.634 152.653 290.226 155.643 cv286.828 155.643 licpf297.728 155.879 mo294.654 155.879 292.806 153.729 293.257 150.354 cv293.666 147.149 296.074 144.914 299.363 144.914 cv301.083 144.914 301.75 145.236 302.351 145.473 cv302.007 148.074 li301.47 147.645 300.673 147.516 299.857 147.516 cv298.029 147.516 297.019 148.869 296.826 150.418 cv296.654 151.729 297.148 153.277 298.804 153.277 cv299.835 153.277 300.609 153.063 301.427 152.61 cv301.148 154.847 li300.222 155.6 299.062 155.879 297.728 155.879 cvcpf309.638 147.106 mo308.5 147.106 307.726 148.139 307.576 149.213 cv307.511 149.665 307.554 149.858 308.671 149.687 cv309.703 149.536 li310.607 149.407 310.929 148.805 310.929 148.268 cv310.929 147.773 310.607 147.106 309.638 147.106 cvcp310.585 150.912 mo308.65 151.191 li307.576 151.342 307.275 151.471 307.275 151.793 cv307.275 152.073 307.296 152.396 307.64 152.783 cv308.005 153.234 308.8 153.6 309.81 153.6 cv310.929 153.6 311.853 153.385 312.628 153.17 cv312.369 155.083 li311.488 155.557 310.199 155.857 308.607 155.857 cv305.533 155.857 303.296 153.707 303.748 150.396 cv304.199 146.935 306.8 144.914 309.941 144.914 cv312.736 144.914 313.81 146.525 313.81 147.967 cv313.81 149.858 312.175 150.676 310.585 150.912 cvcpf143.291 1.94336 mo143.449 1.89063 143.135 1.99414 143.291 1.94336 cv0 0 0 1 cmykf143.291 1.94336 mo143.322 1.93555 143.266 1.95313 143.291 1.94336 cvf156.659 82.0137 mo156.754 82.0137 li161.375 82.0137 165.723 81.3379 169.93 80.0679 cv169.93 80.0679 li174.448 78.4995 178.741 75.3433 181.333 71.4141 cv181.333 71.4141 li185.61 65.1582 189.493 53.0645 189.655 41.0254 cv189.655 40.9883 li189.493 28.9473 185.61 16.8555 181.333 10.5977 cv181.333 10.5977 li178.741 6.67188 174.547 3.51563 170.026 1.94336 cv170.026 1.94336 li165.819 0.671875 161.274 0 156.659 0 cv156.659 0 li152.041 0 147.496 0.671875 143.291 1.94336 cv143.291 1.94336 li138.771 3.51563 134.582 6.67188 131.99 10.5977 cv131.99 10.5977 li127.709 16.8555 123.828 28.9473 123.66 40.9883 cv123.66 41.0254 li123.828 53.0645 127.709 65.1582 131.99 71.4141 cv131.99 71.4141 li134.582 75.3433 138.771 78.4839 143.291 80.0581 cv143.291 80.0581 li147.496 81.3242 151.943 82.0137 156.561 82.0137 cv156.659 82.0137 li156.659 82.0137 licp0 0 0.2 0.7 cmykf187.108 41.0059 mo187.256 50.0762 184.493 61.084 181.829 66.9414 cv178.879 73.6382 174.372 77.7085 167.752 79.5171 cv164.188 80.4331 160.448 80.9023 156.602 80.9023 cv156.602 80.9023 li152.762 80.9023 148.998 80.4331 145.438 79.5171 cv138.818 77.7085 134.309 73.6382 131.363 66.9414 cv128.695 61.084 125.936 50.0762 126.08 41.0059 cv126.08 41.0059 li125.936 31.9375 128.695 20.9297 131.363 15.0742 cv134.309 8.375 138.818 4.30469 145.438 2.49414 cv148.998 1.58008 152.762 1.11328 156.602 1.11328 cv156.602 1.11328 li160.448 1.11328 164.188 1.58008 167.752 2.49414 cv174.372 4.30469 178.879 8.375 181.829 15.0742 cv184.493 20.9297 187.256 31.9375 187.108 41.0059 cv187.108 41.0059 li187.108 41.0059 licp0 0 0 0 cmykf156.711 10.7969 mo159.877 10.7969 163.045 11.2402 165.961 12.0273 cv165.961 12.0273 li169.069 12.916 171.62 15.0586 172.901 17.9707 cv175.686 23.9531 177.52 32.5527 177.52 41.0059 cv177.52 41.0059 li177.52 49.4648 175.686 58.0605 172.901 64.041 cv171.62 66.9512 169.069 69.0977 165.961 69.9844 cv165.961 69.9844 li163.045 70.7715 159.877 71.2129 156.711 71.2129 cv156.612 71.2129 li153.439 71.2129 150.277 70.7715 147.359 69.9844 cv147.359 69.9844 li144.25 69.0977 141.703 66.9512 140.42 64.041 cv137.627 58.0605 135.801 49.4648 135.801 41.0059 cv135.801 41.0059 li135.801 32.5527 137.627 23.9531 140.42 17.9707 cv141.703 15.0586 144.25 12.916 147.359 12.0273 cv147.359 12.0273 li150.277 11.2402 153.439 10.7969 156.612 10.7969 cv156.711 10.7969 li156.711 10.7969 licp0 0 0.2 0.7 cmykf161.192 22.3379 mo160.75 21.5957 161.112 22.2578 160.653 21.3945 cv0 0 0 0 cmykf151.773 39.3867 mo151.773 42.4258 li141.313 42.4336 li141.313 39.3906 li151.773 39.3867 li151.773 39.3867 licpf149.404 65.7129 mo149.186 65.2324 149.098 65.0645 149.078 64.5684 cv151.264 64.5684 152.742 64.5684 155.059 64.5703 cv155.047 65.4023 154.576 66.2129 153.822 66.752 cv152.992 67.3555 151.615 67.4941 150.697 66.9785 cv150.168 66.7266 149.693 66.2129 149.404 65.7129 cv149.404 65.7129 licpf155.863 63.2813 mo152.654 63.2852 li152.654 61.7969 li155.875 61.7969 li156.887 60.6035 li157.377 61.1758 157.417 61.2188 157.928 61.7969 cv161.143 61.7969 li161.143 63.2852 li157.922 63.2813 li157.922 64.8906 157.922 65.1113 157.922 66.9785 cv157.278 66.9785 156.45 66.9785 155.863 66.9785 cv155.863 63.2813 li155.863 63.2813 licpf156.244 58.6719 mo156.901 58.4512 157.833 58.0742 158.016 57.4375 cv157.967 56.4473 158.651 55.6523 159.157 54.8613 cv159.415 54.5195 159.448 54.3125 159.374 53.9395 cv160.395 53.9844 161.432 54.8359 161.829 55.791 cv162.237 56.7676 162.079 58.041 161.45 58.8555 cv160.659 59.8125 159.569 60.3184 158.297 60.0898 cv157.497 59.9121 156.706 59.4219 156.244 58.6719 cv156.244 58.6719 licpf148.521 45.3359 mo147.951 45.0527 147.18 44.9355 146.541 45.2383 cv146.029 45.377 145.486 45.9863 145.438 46.5938 cv145.402 48.4004 145.465 48.9609 145.438 50.9492 cv145.402 51.2617 145.24 51.4102 144.85 51.4102 cv144.516 51.3945 144.268 51.2285 144.271 50.9395 cv144.271 46.5 li144.242 46.0254 144.166 45.5684 143.838 45.2109 cv141.537 45.9629 li141.33 46.0352 li141.912 46.4688 142.18 46.4824 142.23 47.1973 cv142.227 52.8809 li142.26 53.1855 li142.344 53.3809 li142.412 53.5645 li142.488 53.707 li142.869 54.3164 143.508 54.5605 143.957 54.6738 cv144.156 54.7344 144.506 54.7617 144.701 54.7637 cv145.299 54.7656 145.861 54.7285 146.473 54.3027 cv147.416 53.5586 147.211 52.2617 147.236 50.377 cv147.242 49.8477 147.277 49.5508 147.609 49.248 cv147.881 49.0391 148.266 48.9727 148.617 49.0488 cv149.018 49.1582 149.084 49.1914 149.484 49.4551 cv149.496 47.8262 149.547 45.8203 148.521 45.3359 cv148.521 45.3359 licpf169.868 52.4648 mo168.188 50.8145 165.278 48.5137 165.045 47.5371 cv164.792 46.8828 164.872 46.0898 164.858 45.332 cv165.346 44.9492 165.745 44.6172 166.329 44.1602 cv166.284 45.3242 166.124 46.5059 166.684 47.1973 cv168.059 48.5645 169.301 49.7988 170.536 51.0117 cv170.997 51.5078 171.36 52.2168 171.061 52.873 cv170.917 53.1914 170.721 53.5449 170.508 53.832 cv170.508 53.1953 170.235 52.8262 169.868 52.4648 cv169.868 52.4648 licpf160.354 44.084 mo161.635 44.0664 162.049 44.1016 163.381 44.0762 cv163.381 53.0586 li160.344 53.0586 li160.354 44.084 li160.354 44.084 licpf167.149 44.918 mo167.471 44.5645 167.584 44.4336 167.961 44.0645 cv168.727 44.9844 li168.727 47.5371 li168.727 47.5371 li169.805 47.0137 169.542 45.4824 169.542 44.1563 cv170.182 44.6797 170.504 44.9727 171.116 45.5508 cv171.463 47.0801 170.543 47.9473 169.86 49.0195 cv167.149 46.4277 li167.149 44.918 li167.149 44.918 licpf169.614 38.0527 mo170.026 36.3398 li171.348 36.1426 li171.346 31.9023 li170.834 31.9785 170.624 32.0332 170.206 32.082 cv170.206 28.8652 li169.512 29.0059 168.77 29.2578 168.036 29.4297 cv168.036 34.7676 li168.036 34.7676 li168.028 35.0234 167.618 35.1094 167.532 35.1074 cv167.42 35.1074 li167.157 35.1074 166.897 34.9258 166.897 34.7461 cv166.897 32.8047 166.897 31.4258 166.897 29.6035 cv164.774 29.875 li164.774 32.043 li164.026 33.5664 162.917 34.9512 161.838 36.3398 cv162.987 36.4238 163.069 36.4238 164.208 36.5273 cv164.909 38.0527 li169.614 38.0527 li169.614 38.0527 licpf145.486 36.9941 mo145.449 35.5938 145.391 34.6719 145.357 33.2891 cv145.795 33.1719 146.217 33.4434 146.553 33.6953 cv146.498 35.459 146.498 35.4395 146.465 37.291 cv145.492 37.291 li145.486 36.9941 li145.486 36.9941 licpf145.297 28.9258 mo145.063 27.5449 145.041 27.4434 144.914 26.4277 cv144.578 26.4277 144.463 26.4277 144.033 26.4277 cv144.033 25.459 li145.555 25.4551 146.398 25.4629 147.924 25.4629 cv147.926 26.4277 li147.547 26.4277 147.396 26.4277 147.014 26.4277 cv146.621 29.6855 li146.227 29.332 145.781 29.084 145.297 28.9258 cv145.297 28.9258 licpf145.139 24.7598 mo143.836 23.3672 143.744 21.2754 143.996 19.3867 cv143.998 19.3789 li144.234 20.0781 144.678 20.5801 145.379 20.9121 cv145.301 20.5391 144.973 20.2031 144.865 19.8105 cv144.563 19.043 144.59 17.9492 145.09 17.2832 cv145.445 16.7559 145.953 16.541 146.51 16.3633 cv146.299 16.9961 146.232 17.75 146.492 18.3887 cv146.857 18.1113 146.877 18.0938 147.16 17.8184 cv147.268 17.7168 147.314 17.6836 147.406 17.6133 cv147.926 18.7227 148.512 20.2461 148.17 21.5371 cv147.957 22.0898 li147.875 21.1797 147.729 20.7441 147.113 20.4141 cv147.035 20.9434 147.373 21.3242 147.453 22.0137 cv147.703 23.084 147.506 24.1426 146.846 24.7598 cv145.139 24.7598 li145.139 24.7598 licpf161.192 22.3379 mo159.848 23.8086 li159.485 23.4629 159.456 23.4277 159.096 23.0488 cv159.786 22.3242 159.856 22.248 160.653 21.3945 cvf162.952 18.7598 mo163.223 17.4844 163.368 16.0137 164.768 15.4844 cv165.297 15.332 166.018 15.3984 166.465 15.7949 cv167.067 16.2305 167.241 16.9668 167.096 17.6523 cv166.676 19.1309 165.022 19.4063 163.684 19.7578 cv162.952 18.7598 li162.952 18.7598 licpf172.237 39.3867 mo172.237 42.4492 li161.776 42.4336 li161.776 39.3906 li172.237 39.3867 li172.237 39.3867 licpf146.975 59.8125 mo146.553 57.8809 148.885 57.1875 149.438 55.582 cv149.871 52.9004 150 50.0762 151.867 47.9863 cv152.049 44.0469 153.324 40.5605 156.125 37.6973 cv155.994 36.8086 155.629 36.0391 155.363 35.2109 cv154.996 35.1973 154.748 35.127 154.418 34.8301 cv154.174 34.4863 154.074 34.2305 154.01 33.8164 cv153.037 35.0254 151.828 36.377 150.498 37.1934 cv150.256 37.332 149.945 37.043 149.502 36.6309 cv147.869 35.3398 147.596 32.4277 145.109 32.5547 cv143.98 32.1758 144.033 30.8438 143.848 29.8496 cv144.268 29.5449 144.947 29.5586 145.449 29.7539 cv147.002 30.584 148.037 32.332 149.502 33.5039 cv149.893 33.8164 150.246 34.2246 150.607 34.377 cv151.568 33.5469 152.338 32.8379 152.99 31.5586 cv153.441 30.8301 154.193 30.5176 155.021 30.5059 cv155.611 29.8105 li155.301 28.0723 li154.693 27.2988 154.193 26.4863 153.787 25.6152 cv153.996 24.6211 154.129 23.459 155.139 22.9082 cv155.797 22.5 156.334 23.4316 156.875 22.8418 cv157.27 22.7598 157.612 22.8672 157.887 23.0918 cv158.297 23.8047 158.778 24.5137 158.805 25.3418 cv158.555 26.1465 158.174 26.8906 157.795 27.6426 cv157.708 27.8086 157.477 27.8613 157.321 27.9824 cv157.415 28.3223 157.497 28.7012 157.729 28.9688 cv158.03 29.0332 158.315 29.0859 158.674 29.0215 cv158.965 28.1406 159.913 27.7461 160.702 27.5078 cv162.436 26.3789 li162.159 25.0625 163 23.9082 162.532 22.5977 cv161.54 22.1289 161.256 21.0117 161.042 20.1328 cv161.2 19.5898 161.469 19.0059 161.862 18.543 cv161.92 18.6113 li162.868 19.7129 163.737 20.8457 164.04 22.2129 cv164.209 23.9609 164.377 25.75 164.264 27.5742 cv163.329 28.5078 162.198 29.0605 161.135 29.7539 cv160.344 31.2676 li160.25 32.8301 159.793 34.2363 159.553 35.75 cv160.227 37.5762 161.026 40.0117 160.438 41.7012 cv159.985 42.7109 159.038 43.2598 158.334 43.8203 cv156.557 45.2402 li158.342 47.2051 157.913 49.4297 157.987 52.2793 cv157.967 52.9648 159.2 53.5371 158.543 54.3223 cv157.995 55.2012 157.139 55.9121 157.282 57.0664 cv156.737 57.9844 155.432 58.1816 154.813 58.1719 cv154.686 58.1816 154.578 58.0801 154.578 57.9473 cv154.707 57.4746 155.074 57.1074 155.27 56.6602 cv155.904 55.6875 155.611 54.3457 156.403 53.4434 cv155.754 51.3262 154.773 49.3672 154.504 47.1094 cv154.486 46.9648 li153.957 48.002 154.25 49.0195 154.527 49.8379 cv152.779 52.0449 150.881 54.166 150.881 57.0664 cv150.129 58.3965 149.068 59.6055 148.514 61.0117 cv148.328 61.248 147.979 61.043 147.766 60.9199 cv147.268 60.5898 147.15 60.2656 146.975 59.8125 cv146.975 59.8125 licpf166.178 50.291 mo167.86 51.9414 170.766 54.2441 171.004 55.2188 cv171.252 55.877 171.176 56.6621 171.186 57.4277 cv170.702 57.8125 170.299 58.1406 169.715 58.5957 cv169.758 57.4316 169.92 56.25 169.36 55.5605 cv167.989 54.1992 166.747 52.9609 165.508 51.748 cv165.049 51.252 164.682 50.541 164.983 49.8848 cv165.125 49.5684 165.323 49.2109 165.534 48.9258 cv165.534 49.5664 165.815 49.9297 166.178 50.291 cv166.178 50.291 licpf168.897 57.8398 mo168.575 58.1953 168.459 58.3262 168.084 58.6973 cv167.317 57.7773 li167.317 55.2188 li167.317 55.2188 li166.241 55.7461 166.5 57.2734 166.5 58.5996 cv165.864 58.0801 165.543 57.7852 164.93 57.209 cv164.584 55.6797 165.499 54.8125 166.19 53.7363 cv168.897 56.3301 li168.897 57.8398 li168.897 57.8398 licpf164.37 65.7129 mo164.594 65.2324 164.674 65.0645 164.7 64.5684 cv162.504 64.5684 161.04 64.5684 158.719 64.5703 cv158.731 65.4023 159.204 66.2129 159.954 66.752 cv160.778 67.3555 162.163 67.4941 163.081 66.9785 cv163.61 66.7266 164.079 66.2129 164.37 65.7129 cv164.37 65.7129 licpf157.715 78.7612 mo157.686 77.103 159.309 76.2632 160.331 75.1636 cv160.61 74.8999 160.711 74.3726 160.514 73.937 cv160.391 73.6636 160.215 73.5288 159.987 73.4722 cv159.631 73.3901 159.329 73.4429 159.1 73.6421 cv158.784 73.939 158.696 74.3218 158.713 74.7358 cv157.575 74.8022 li157.479 74.1733 157.633 73.564 158.016 73.0874 cv158.545 72.521 159.342 72.3628 160.118 72.4155 cv160.739 72.5171 161.461 72.8882 161.715 73.5366 cv162.043 74.2397 161.932 75.1421 161.413 75.7339 cv160.743 76.4487 159.866 76.8394 159.309 77.644 cv162.18 77.4741 li162.204 77.8257 162.225 78.1714 162.241 78.4995 cv157.715 78.7612 li157.715 78.7612 licp0 0 0.2 0.7 cmykf147.531 71.5879 mo147.512 71.6421 li145.643 77.3745 li144.449 76.9819 li145.732 73.062 li145.752 72.9937 li145.275 72.8257 144.701 72.6616 144.238 72.4995 cv144.482 71.7554 li145.086 71.9155 145.705 72.019 146.232 71.5801 cv146.426 71.4297 146.459 71.3887 146.563 71.2754 cv147.531 71.5879 li147.531 71.5879 licpf168.803 75.8921 mo168.653 76.0698 168.379 76.2065 168.086 76.2769 cv167.79 76.3491 167.487 76.3589 167.27 76.269 cv166.973 76.1577 166.77 75.9292 166.694 75.6675 cv166.583 75.2729 166.694 74.8589 167.028 74.6226 cv167.176 74.5249 167.383 74.4272 167.608 74.3647 cv167.608 74.3647 li167.84 74.3159 168.075 74.3042 168.243 74.3276 cv168.655 74.3765 168.948 74.6929 169.026 75.0874 cv169.084 75.3569 169.012 75.6597 168.803 75.8921 cv168.803 75.8921 licp166.295 73.1284 mo166.151 72.8804 166.151 72.4604 166.409 72.2124 cv166.555 72.0562 166.772 71.9448 167 71.8901 cv167.229 71.8276 167.477 71.8257 167.68 71.8999 cv168.018 72.0015 168.211 72.3726 168.204 72.6597 cv168.2 72.8804 168.1 73.0562 167.959 73.1909 cv167.811 73.3218 167.604 73.4194 167.389 73.4683 cv167.176 73.5249 166.956 73.5327 166.766 73.4878 cv166.573 73.4312 166.403 73.3237 166.295 73.1284 cv166.295 73.1284 licp170.241 74.7651 mo170.09 74.2007 169.776 73.7476 169.147 73.5659 cv168.784 73.4878 li169.159 73.2241 169.502 72.689 169.379 72.1733 cv169.292 71.582 168.864 71.207 168.327 71.0039 cv167.86 70.8574 167.309 70.8828 166.788 71.0234 cv166.26 71.1426 165.768 71.377 165.415 71.7241 cv165.04 72.1519 164.834 72.6812 165.036 73.2456 cv165.163 73.7612 165.715 74.0718 166.167 74.1343 cv165.883 74.3726 li165.407 74.8276 165.344 75.3726 165.471 75.9429 cv165.612 76.5757 166.124 77.0737 166.743 77.2573 cv167.208 77.3745 167.772 77.3667 168.321 77.2378 cv168.868 77.0991 169.372 76.8472 169.727 76.519 cv170.192 76.0679 170.411 75.394 170.241 74.7651 cv170.241 74.7651 licpf153.039 77.5659 mo152.84 77.689 152.537 77.7417 152.236 77.7202 cv151.936 77.7046 151.646 77.6128 151.463 77.4741 cv151.213 77.2788 151.09 76.9956 151.096 76.7163 cv151.105 76.314 151.336 75.9526 151.725 75.8257 cv151.895 75.7769 152.121 75.7437 152.357 75.7554 cv152.357 75.7554 li152.59 75.7729 152.818 75.8276 152.975 75.9019 cv153.348 76.0737 153.535 76.4604 153.494 76.8687 cv153.471 77.1343 153.307 77.4019 153.039 77.5659 cv153.039 77.5659 licp151.469 74.1831 mo151.406 73.9038 151.533 73.4995 151.852 73.3394 cv152.031 73.2339 152.277 73.1909 152.512 73.2104 cv152.748 73.2241 152.984 73.2944 153.156 73.4214 cv153.449 73.6147 153.523 74.0308 153.428 74.3042 cv153.363 74.519 153.211 74.6479 153.035 74.7397 cv152.855 74.8179 152.635 74.8452 152.412 74.8296 cv152.191 74.8218 151.977 74.7651 151.807 74.6616 cv151.646 74.5562 151.51 74.3999 151.469 74.1831 cv151.469 74.1831 licp154.748 76.9175 mo154.773 76.3374 154.607 75.8081 154.063 75.4487 cv153.738 75.2651 li154.17 75.1284 154.658 74.7222 154.693 74.189 cv154.787 73.5952 154.488 73.1108 154.041 72.7554 cv153.635 72.4761 153.107 72.3413 152.566 72.3159 cv152.027 72.2729 151.484 72.3511 151.047 72.5757 cv150.557 72.8726 150.205 73.3198 150.227 73.9175 cv150.199 74.4468 150.633 74.9097 151.047 75.1011 cv150.705 75.2456 li150.107 75.5366 149.889 76.0386 149.846 76.6226 cv149.789 77.2729 150.129 77.896 150.668 78.2515 cv151.07 78.5112 151.617 78.6694 152.18 78.7085 cv152.738 78.7397 153.297 78.644 153.736 78.437 cv154.313 78.146 154.721 77.5698 154.748 76.9175 cv154.748 76.9175 licpf181.739 18.7617 mo176.157 21.166 li175.657 20.0078 li181.237 17.5977 li181.739 18.7617 li181.739 18.7617 licpf160.715 9.11719 mo159.28 2.86328 li160.604 2.99414 li160.868 4.54492 161.141 6.29883 161.456 7.60352 cv162.024 6.38672 162.643 4.72461 163.209 3.26563 cv164.514 3.39453 li161.872 9.23438 li160.715 9.11719 li160.715 9.11719 licpf136.98 12.6934 mo135.625 15.1211 li134.48 14.4844 li136.031 11.6992 li135.16 11.2051 li132.986 15.1035 li138.287 18.0664 li140.463 14.166 li139.584 13.6758 li138.027 16.4668 li136.543 15.6328 li137.902 13.2051 li136.98 12.6934 li136.98 12.6934 licpf132.961 41.2559 mo131.266 41.2578 li131.254 41.2578 li131.283 39.9082 131.074 39.1133 131.877 38.957 cv132.158 38.8828 132.504 38.9102 132.711 39.123 cv133.055 39.4551 132.949 40.0059 132.961 41.2559 cv132.961 41.2559 licp130.34 41.2578 mo128.846 41.2578 li128.893 39.8691 128.664 39.123 129.518 39.0313 cv130.021 38.9961 130.156 39.1055 130.273 39.4121 cv130.369 39.7227 130.34 40.0508 130.34 41.2578 cv130.34 41.2578 licp133.768 38.5059 mo133.479 37.8516 132.775 37.5938 132.049 37.627 cv131.438 37.7051 130.973 38.1191 130.713 38.75 cv130.621 38.3809 130.273 37.918 129.689 37.8457 cv129.08 37.7715 128.496 37.9375 128.205 38.4531 cv127.803 38.9648 127.979 41.2246 127.938 42.5273 cv133.969 42.5215 li133.971 42.082 li133.936 39.6816 134.076 39.3926 133.768 38.5059 cv133.768 38.5059 licpf181.786 22.1367 mo182.752 21.8867 li183.977 26.6367 li183.006 26.8867 li182.557 25.1309 li177.678 26.3887 li177.368 25.1582 li182.239 23.9023 li181.786 22.1367 li181.786 22.1367 licpf151.119 9.46484 mo150.441 9.58008 149.746 9.51172 149.188 9.17188 cv148.705 8.89063 148.531 8.5293 148.443 8.08789 cv147.744 3.74805 li148.98 3.54688 li149.682 7.88672 li149.752 8.24414 150.068 8.46289 150.396 8.52734 cv150.576 8.57227 150.779 8.57031 150.975 8.5332 cvf151.135 9.46289 mo151.809 9.35938 152.445 9.07813 152.875 8.57813 cv153.242 8.16211 153.295 7.76172 153.24 7.31641 cv152.543 2.97266 li151.307 3.16992 li152.004 7.51367 li152.045 7.8418 151.816 8.17773 151.525 8.3457 cv151.363 8.44922 151.176 8.50781 150.975 8.5332 cvf181.083 32.6602 mo180.872 31.1563 li183.493 31.5566 li183.5 31.5566 li183.497 31.5586 li183.506 31.5586 li183.493 31.5586 li181.083 32.6602 li181.083 32.6602 licp184.59 30.7461 mo178.282 29.4785 li178.454 30.709 li179.829 30.9609 li180.129 33.1348 li178.883 33.752 li179.049 34.9863 li184.774 32.0371 li184.59 30.7461 li184.59 30.7461 licpf183.68 41.1816 mo183.792 41.1621 li183.932 41.127 li184.03 41.0879 li184.43 40.8711 184.526 40.3379 184.502 39.9063 cv184.489 39.4648 184.354 39.0215 183.942 38.8574 cv183.729 38.8008 183.461 38.7832 183.315 39.0039 cv182.629 40.0176 183.104 42.168 181.338 42.543 cv180.569 42.6738 179.891 42.3359 179.493 41.7188 cv178.946 40.7461 178.901 39.2168 179.528 38.2637 cv179.903 37.7715 180.417 37.4668 181.032 37.4609 cv181.108 38.627 li180.729 38.6758 180.354 38.8691 180.182 39.2441 cv179.928 39.8535 179.985 40.8203 180.436 41.1777 cv180.6 41.3613 180.975 41.3379 181.182 41.2305 cv181.883 40.7266 181.741 39.4688 182.092 38.627 cv182.211 38.2695 182.543 37.9082 182.874 37.7266 cv183.495 37.459 184.295 37.5566 184.795 38.0488 cv185.604 38.8125 185.639 40.3086 185.268 41.2168 cv185.057 41.8477 184.372 42.3027 183.667 42.3438 cv183.59 41.1836 li183.68 41.1816 li183.68 41.1816 licpf134.791 32.0195 mo134.688 32.6934 134.412 33.3359 133.912 33.7617 cv133.496 34.1328 133.1 34.1875 132.654 34.1348 cv128.309 33.4531 li128.5 32.2188 li132.842 32.8926 li133.203 32.9375 133.506 32.7031 133.672 32.4199 cv133.777 32.2559 133.836 32.0645 133.863 31.8672 cvf134.793 32.0078 mo134.904 31.3281 134.836 30.6309 134.492 30.0781 cv134.213 29.5977 133.852 29.4219 133.404 29.332 cv129.063 28.6563 li128.865 29.8887 li133.211 30.5781 li133.537 30.627 133.787 30.959 133.854 31.2832 cv133.9 31.4668 133.898 31.668 133.863 31.8672 cvf142.268 9.97852 mo141.598 7.41797 li141.592 7.4082 li141.598 7.41211 li141.596 7.40234 li141.602 7.41602 li143.563 9.18945 li142.268 9.97852 li142.268 9.97852 licp141.527 6.04883 mo140.42 6.72461 li141.752 13.0176 li142.816 12.377 li142.504 11.0137 li144.373 9.87305 li145.441 10.7793 li146.5 10.1328 li141.527 6.04883 li141.527 6.04883 licpf171.01 8.02539 mo168.452 6.95117 li168.956 5.74219 li171.893 6.9707 li172.286 6.04492 li168.168 4.32422 li165.821 9.92773 li169.94 11.6484 li170.331 10.7168 li167.381 9.48438 li168.038 7.91797 li170.612 9 li171.01 8.02539 li171.01 8.02539 licpf132.82 23.6543 mo131.295 23.2051 li131.631 22.1699 131.779 21.123 132.508 21.1836 cv132.803 21.2344 133.008 21.3125 133.176 21.5254 cv133.461 21.875 133.096 22.6543 132.82 23.6543 cv132.82 23.6543 licp134.029 21.4805 mo134.025 21.0645 134.004 20.7188 133.66 20.3867 cv133.326 20.041 132.795 19.8848 132.275 19.9199 cv130.922 20.125 130.744 21.6777 129.994 24.1367 cv135.813 25.8711 li136.176 24.6543 li133.875 23.9727 li133.783 23.9473 li133.936 23.3828 134.166 22.6758 134.275 22.5215 cv134.691 21.5625 136.234 22.5039 136.842 22.416 cv137.199 21.209 li136.164 21.2656 134.77 20.3359 134.029 21.4805 cv134.029 21.4805 licpf177.385 13.168 mo177.174 13.375 176.995 13.4883 176.719 13.502 cv176.264 13.5234 175.854 12.7715 175.208 11.9609 cv176.465 10.9961 li177.112 11.873 177.868 12.6113 177.385 13.168 cv177.385 13.168 licp176.477 9.39453 mo171.657 13.0742 li172.422 14.0801 li174.327 12.627 li174.411 12.5684 li174.766 13.0234 175.209 13.623 175.266 13.8047 cv175.803 14.707 174.124 15.3965 173.844 15.9453 cv174.608 16.9414 li175.17 16.0645 176.743 15.4902 176.25 14.2188 cv176.588 14.4648 176.883 14.6504 177.358 14.5625 cv177.833 14.4961 178.272 14.1621 178.549 13.7148 cv179.174 12.5 178.028 11.4434 176.477 9.39453 cv176.477 9.39453 licpf203.69 101.199 mo203.69 87.2988 li109.07 87.2988 li109.07 101.199 li203.69 101.199 li203.69 101.199 licpf203.69 117.295 mo203.69 103.391 li109.07 103.391 li109.07 117.295 li203.69 117.295 li203.69 117.295 licp0.1 1 0.7 0 cmykf135.354 97.541 mo135.648 97.5566 135.945 97.5078 136.201 97.3945 cv136.67 97.2227 137.09 96.7754 137.098 96.2871 cv137.1 89.7188 li138.965 89.7188 li138.965 96.2871 li138.941 96.9629 138.77 97.5313 138.133 98.0566 cv137.389 98.6914 136.379 98.9512 135.365 98.9473 cv135.34 98.9473 li134.32 98.9512 133.316 98.6914 132.574 98.0566 cv131.934 97.5313 131.764 96.9629 131.732 96.2871 cv131.732 89.7188 li133.598 89.7188 li133.602 96.2871 li133.619 96.8242 134.029 97.2227 134.5 97.3945 cv134.756 97.5078 135.057 97.5566 135.354 97.541 cv0 0 0 0 cmykf166.993 93.1133 mo162.86 93.1113 li162.86 91.168 li167.602 91.1641 li167.606 89.668 li160.965 89.668 li160.965 98.707 li167.604 98.707 li167.602 97.2051 li162.852 97.2051 li162.854 94.6797 li166.999 94.6797 li166.993 93.1133 li166.993 93.1133 licpf191.333 97.5313 mo191.627 97.5391 191.924 97.4902 192.182 97.3848 cv192.651 97.2051 193.071 96.7637 193.077 96.2754 cv193.081 89.7031 li194.95 89.7031 li194.95 96.2754 li194.918 96.9473 194.749 97.5176 194.11 98.041 cv193.366 98.6797 192.36 98.9375 191.34 98.9316 cv191.319 98.9316 li190.303 98.9375 189.295 98.6797 188.549 98.041 cv187.915 97.5176 187.739 96.9473 187.713 96.2754 cv187.713 89.7031 li189.583 89.7031 li189.583 96.2754 li189.6 96.8125 190.014 97.2051 190.475 97.3848 cv190.737 97.4902 191.034 97.5391 191.333 97.5313 cvf117.826 89.6992 mo119.637 89.7031 120.691 89.6992 122.189 89.6992 cv123.582 89.6992 124.68 90.4531 124.785 91.834 cv124.877 92.7891 124.578 93.6152 123.434 93.9023 cv124.447 94.1836 125.098 95.1094 125.105 96.3086 cv125.111 97.332 124.314 98.7207 122.096 98.7207 cv117.826 98.7207 li117.826 89.6992 li117.826 89.6992 licpf119.709 94.6797 mo120.377 94.6797 121.205 94.6738 122.096 94.7285 cv122.795 94.7734 123.215 95.375 123.215 95.9375 cv123.215 96.5 122.91 97.0723 122.264 97.1484 cv121.625 97.2227 121.563 97.1992 119.701 97.2227 cv119.709 94.6953 li0 0 0.2 0.7 cmykf119.707 91.0918 mo120.586 91.0918 121.172 91.0918 121.896 91.0918 cv122.494 91.0918 123.023 91.4004 123.023 92.0957 cv123.023 92.8262 122.623 93.2715 121.965 93.2715 cv121.301 93.2715 120.605 93.2715 119.709 93.2715 cv119.707 91.0918 li119.707 91.0918 licpf176.655 95.252 mo177.778 91.4746 li177.778 91.459 li177.782 91.4688 li177.782 91.459 li177.782 91.4746 li178.907 95.252 li176.655 95.252 li176.655 95.252 licp178.752 89.6875 mo176.807 89.6875 li173.647 98.7227 li175.495 98.7227 li176.149 96.752 li179.415 96.752 li180.069 98.7227 li181.915 98.7227 li178.752 89.6875 li178.752 89.6875 licp0 0 0 0 cmykf151.115 93.4648 mo150.576 93.5137 150.311 93.5195 148.578 93.5156 cv148.578 91.1875 li149.465 91.207 150.434 91.1445 150.963 91.1875 cv151.502 91.2383 151.992 91.5957 151.996 92.2637 cv151.998 92.9258 151.652 93.4102 151.115 93.4648 cv151.115 93.4648 licp152.029 94.3203 mo152.961 94.0176 153.953 93.6152 153.848 91.8613 cv153.752 90.3418 152.361 89.7813 150.967 89.7148 cv149.416 89.7148 148.422 89.7031 146.693 89.6914 cv146.693 98.7227 li148.574 98.7227 li148.568 95.0371 li149.43 95.0254 149.977 94.9883 150.844 95.0449 cv152.393 95.1387 151.76 98.7207 152.188 98.7227 cv153.963 98.7227 li153.387 97.2949 154.184 94.7813 152.029 94.3203 cv152.029 94.3203 licpf120.221 114.799 mo117.158 105.76 li119.135 105.758 li119.762 108.014 120.432 110.564 121.086 112.453 cv121.744 110.564 122.416 108.014 123.035 105.76 cv124.984 105.758 li121.951 114.799 li120.221 114.799 li120.221 114.799 licpf136.436 109.205 mo132.301 109.201 li132.301 107.252 li137.041 107.25 li137.049 105.754 li130.406 105.754 li130.406 114.797 li137.045 114.797 li137.041 113.295 li132.293 113.295 li132.293 110.764 li136.436 110.768 li136.436 109.205 li136.436 109.205 licpf159.219 105.758 mo159.219 114.799 li157.331 114.799 li157.331 105.758 li159.219 105.758 li159.219 105.758 licpf164.471 107.303 mo164.471 105.826 li171.764 105.826 li171.764 107.301 li169.067 107.301 li169.067 114.799 li167.184 114.799 li167.176 107.301 li164.471 107.303 li164.471 107.303 licpf178.397 111.328 mo179.526 107.547 li179.526 107.531 li179.53 107.541 li179.532 107.531 li179.532 107.547 li180.651 111.328 li178.397 111.328 li178.397 111.328 licp180.495 105.76 mo178.555 105.76 li175.387 114.799 li177.239 114.799 li177.891 112.828 li181.157 112.828 li181.811 114.799 li183.661 114.799 li180.495 105.76 li180.495 105.76 licpf147.84 109.518 mo147.305 109.574 147.035 109.582 145.309 109.576 cv145.309 107.246 li146.193 107.262 147.164 107.199 147.695 107.246 cv148.23 107.287 148.721 107.652 148.725 108.32 cv148.73 108.982 148.375 109.465 147.84 109.518 cv147.84 109.518 licp148.76 110.373 mo149.688 110.072 150.682 109.67 150.574 107.916 cv150.48 106.398 149.092 105.838 147.697 105.764 cv146.143 105.764 145.15 105.754 143.422 105.742 cv143.422 114.773 li145.305 114.773 li145.297 111.094 li146.158 111.086 146.699 111.047 147.57 111.096 cv149.119 111.191 148.488 114.773 148.912 114.773 cv150.691 114.773 li150.109 113.348 150.912 110.84 148.76 110.373 cv148.76 110.373 licpf187.961 111.973 mo187.961 113.287 189.018 115.002 191.766 115.002 cv193.987 115.002 195.563 113.979 195.563 111.959 cv195.563 108.914 190.094 109.748 190.094 108.125 cv190.094 107.492 190.612 106.916 191.936 106.916 cv193.159 106.916 193.606 107.594 193.606 108.33 cv195.344 108.268 li195.344 107.689 195.047 105.441 191.735 105.441 cv189.348 105.441 188.243 106.83 188.243 108.453 cv188.243 111.5 193.678 110.373 193.678 112.293 cv193.678 113.354 192.598 113.559 191.625 113.559 cv190.368 113.559 189.694 112.627 189.694 111.91 cv187.961 111.973 li187.961 111.973 licpf%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5[[/CSA [/0 ]]] del_resAdobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 9.0%%AI8_CreatorVersion: 12.0.1%%For: (Fr\\351d\\351ric Cuisance) (Vent Portant)%%Title: (BV LOGO 1.eps)%%CreationDate: 5/04/07 16:40%AI9_DataStream%Gb"-6HZLLBOXKu3c?D8J.'Bs>-E@J%!9H;I&UZEJ4<n&;5:1!FG=+Z?ZR(Y-k[B\KBKuI??TnH($LBsP'QJ8*8&oM=K*%,F,SHN%%"R:mu:@FhChHf#eGC':]^Y4`tg,hOcr>bS'0^c[MiZG@RGP/5CEti*EMFWjLAuZl3I#<rQ$qGbK->IaRs7Y^NlL+23L\nP^+$Z@Q%hqUGDr71f5LWd=.D_Af"-^X^[]=PP`s4dPFk47nHW[8PVGE5_r+0TS]HM)O]p@>[o:KP=/_tVc,<Lr#3IJ@c&IJ*"SFbu4WV[(*$%=8NM]e]4`2rQ2\K5@8hcF7n.cS*A[k?dJW>B\F!Hp:iOd*e3s(s4tTSL[T`>C;YL*=8Rd1I/=EbQg_'`+@#;e_Hcm//WiiB"KLUq%eUDpfoCVSCiUZO<6)!u;ICOZP]R%*2)"m1,rV/O\GbV+8oCV);QP`fh+^#?*fs_dL2cggi&%@mdqtZ&kSDaCeO+]TS,/-_?YOC?)%4MAB'L;r`J*L$1/&)t(rrV'BSO46C6*8EUPc+j5K),YR,b8jEQIX^gbhd(YSbp6ZRhu0`3[;IQX;OK5os5N\5l=p:trpJU_rU&^a%p"d[eG;o8G^:a9)$'\%]NCE6Pe&1H"StO(Vros"<m]-$VB\!Md+.GcP^b:.\s7G-tqU&0GDZAh`iN[\uUF_B$rRHZrToN5![/9tL%E.7KZo',:634^cNkj.8qHg^ju%k.4oNImm57,"h!jT>>WEl@uM[I#o#Vcg\,%-F$tc2hC;k5dVoSk`I=I&?pN!(k8J+0KKGgg!$L%Z&4p76u;MEE9,F[R\*cU6ql*e4.9ZTaZqUBpgl[fnL,u/hPY'J$H[)^U/.rkH@>Iq?]btHH[YX5s7(GEn2Js;7<VHJ*e/\<^I^uZ%ANlRB*;7KQO(h2Vr-(pq<tBen]7(Hf4SeXo*W5(!h:2t.SpS#X\V/nl>iU=1_B1BP^:S]E9"B5aq#"m!#(?-uVq\C-J%0eQ!5AGO%Fn^[gIpp!>l.eZT9gB"7?m9lc'D4MA\=Wi?=n\XbbNN]UkQQB:kE3dO)k(;E5?r\^IJ56\/Wq$`ITIj;.I&2Y0_Q(.r;Xb805)!;%UepInm;`!rlo1a_;XM6p]`@iFpJ88J^:V$)G)]GSLW$dcPc!s+q;pYuYP,f/M0/<<mSA=WKK^7:5NhNS#l&UHnF,%uPra]8cJbaD%Gj:e]]sp=CBb^\aKn*MRTN2>s'uIqDoslWPZRi&]d!o`B/?#s-W.f0b(U_Q6;![HV/^M`3jQm:t/hZYciZ\N4^::uMM[O5D(^n'0%O$Jr-BPGe`gO4X&;%#5>?do-O7]AKP7JI[A5S<u!h8Tb8$_$Q<IXr^@Mk5StdPE;g^RuNq;$r`l;n+:G;%%L)?duWr5adTB0Gbc<%(PPNW='>smK"^(p\-[7bDI[37j?M,qIJ=UAaTr7(nk;L]Io-UGfa%seUb1fJ^\@utAGku$@#bltMcubas2laIPR(V"4s6:&!-=>G%)`,<+\;jb02rffm0%^8I_+W]YcSf*-_u<"D:hPptlHi_5QD^Ads.Yh#2s:pH86c"M3hUBbKh8_t*T<MR&Eu(j2H_bK"6LdV+q$:^%CeTQOJt6jdi!S@l\W)Em-Ffh:6'pH)]f_Y]"EU!!,0_n*_AhauK)ZM[/[Ja:m(T^W>%X)jWQ;eE\&j&\5I<$uA2CoXZ>mF6"#)K*%U35FLiG/-+>j5<nNoRqTiNHq6;?*+4GuFXaJ)8B;nlPhFI50&G;Z=gg1!8tU=8kiaI]$_\PQ#cH,#??gq=!rTI[@h?hsQEoF"&Pf%jhE`mjELDMrsecgdH;?.r%$eW^[7Bc-2Js<k3%YDGB.\CP2a%MT0L`;?_#1$i^1CeaA`#5A]dUhSmIps(q<nbi,A7Y^Wf\>kMKqC%S8+X*>kpJ[4-'`>CBH?G=>*qZPfn-_J1]+.s(<."0pS:1)ejkl8l#SSGp61@r_IWsp_HG[W-fdkM/YNeMfAb7j'U;&48F@g6Z$cO%E%:2k?cG6[asj'e5niPR/b2R<5/<*17=tih0.nSZ:*o4L!a4f>CBTJu$?_=)3GRWdkMUo"5=Og@\Ah>IYWp=k4n7_:CVW"V/C(UM%i<#sDf$nkTN6e:qJiMc-onfG)k,D00oh`N-!VtM]M)g`7M^/<=dmNWNZlV\k<h.ih563^;N!rA*A/%e_:[h4NF<8gkF6u)7BeM=\%_C-B.bpm^&'m%WGAQb5jB2W)ER</EFTaEpg7kk>P$.;.\S)Kt>\!X!eWE&60m4Z;:(e9OPatprM3$2`M1#]2&;eDm*k&HV'8Zg<R%fS7#\o-><obi2cH-<Q\Sa:'Z)CYD4oKY&Fj_p!-_=tQUUq$)^+fFpm&%!.R,BR&(3F8KY<AT$.6WK)l0c(:W:cBDWl;l!5Ic'cfF%ZO<0eqJ7q2)./p^Q)'>VS,ilR[r;[1-L,o!&m7;pUg%'N4fgNd:$/7LnltD6/7GO(*"uV.*b6ULch6'o4>BKrO#.dS,1#4'5A3M[%1@(ad),!q")7Io-I:N6oB6B5pU43Uj[&(TJ\f$gLi4h%^pc7s;K],=9J[s(sN*;sD#+m40[-"!>OD4l'8`Ua^&a2D_cQD+^OY2bH%cp<)p\]Ch*8;l^9iOQ%/kVj!G)[&+@XDjq<)*PL<=t`<&cJN/+:85tPW^bL'/+WV`Eh(b=VM5!Kid>'CL<Bjr[:nDZUNKjPM:6I_%GAG$+UIYEm"3O2N9#'Oe7lYG@+2:84A_*=$Ufe<\\NU[@2#WJU`g8QG?m8CW?51UZU9+I%L?V=+\lC^=3^n.dPb2B59@!cO?2_tc%&1l-W8g*FDPF16?Q'MZIq\\pl<8YO@h&"4*jX[N:d8lG[$AJ7j1RD7brJF(Y3$1p>_(q?OVoopIN6;NWSGrPar_)+k\oaqNgAgsd%jE3JF5#9MQGreH2HolEIlf=#YiS3VMa[k="oPDCZ-c;?6),Pq!:kEWH60)Bc-UJ>mLU9$'3>pr#aWU)OQP93TGtsaegPPTC6@,"B%37'3q9>C;3POE15Q8(RumfFF['Q_1Y!qiL!&,:b*mY_G47HpM;nM__$Hnp?XN'T,)-N$[!U432*SIp:4\2'd)rgo[R7HsO\UZh6t%qEI+FL4CjtaqN`nrM<E!3RJG,U^uc)Yc3hKs6lu&%);Z,3d'X>[;K_aS6nPN49(nVL*ar(1&WK#J`sCZP]*kYdVn=Nef2M`C=N\r%A(VQQX;.Mql1<k5lANmLeJR,4O-?[1-aERaSSDpSk(d=llN[27Q=YMk@29I&X_g>Wad_j#YmXHMQL-$*[%Se=>DCf^(%FVjhYES@%WFd;g^DAZ?[H<r9:@e-QXXC2>ZC[YE"[.]*+P+6j0<Ds$4d]k]oUT+\kXflkX9QOQP_r3cg=WJGdF-H0oT*Z_BZ8[PPZ>&ugPV7H%*feohi/tHK3+bUN7'f14MCI9mAo#8%1"`5$"_7%WqGE2nXJ=Gp>Uu9+,JKgI,BQKd[E%='I\EiR7Zl56fVA52B$Zq>Y5J]m=iSnf%40eM+itQ8Kc7\[61"@l"mPK8(,Gse]R94^r9,OS4%lg.k>>I5!`c_`N[.HPN?"qlVn5GpN.K/C=$LH2Jh*UUr)(Mc5l8*c#FGmUU%j'Q4WRU%K>#Y2fXYq]Xik01=bo@\M/R?@E#B"MHP.l4X=#AoJ=7:r#.p,6M,OZY7kaUqorYM>kXTN<_4A*:^OV3G2(2!VsE.[r0c%Ln.i$gge\.gn(JuW0iKs,OK&i`-O.@;s?A"4.%5t2AS<];VT=[fk??*b^,,?\P8\8%$RUU601;37>^\n%pYhlPm*d3mSa)O_XrLh%@NLe#iH6;R?kBUQY%pKDc!,ch[V)o>TZ8_BgqCThLjV:r^W!q;8)#3_k2H=%r]>Ck^[mZH?TgT$f_oOIQK/!i\pqBhG^]>Bc..7L%a59$brq-VF/]T7-Y-/o1aiEG*#C:cFp@de-p!(bCnXI_2:QJSt^O<c/H$=E/[8ks%s"V!mPU`$Tg[XC[l\DrF\*n7<rq#oje<0Hk%h"b1?r/+_HNj#8C<Rp^k2nbOFYGKNe<TcEp\`<+%a7iL+?L$BKFmjD-HU6abW]j#)Vc%Y]r06N]]DV*/X,#_ZK](D2nQY#In]/\N%LDs([n`h\ak`5]@FE;NrG`3YDhT8!Z(:TWSn,@]%>^G?,BBnm?n_<pO5<N2#p\j.Bj29ujX4tgQ^DmUk);NWqrStMjpW"Y"NkbR<%F8>A'>qYtmoCVSHqX1=^ZG/V/h&YB:[DfaP4o9U+nF$5iF`i+VL$uL;+5]9<i.k=BUiM1g+&>r[60,ZT^YKo;rTDq)b?Os<dWPN^%nqJ(D<pstpBlLOpI.p#rI<Bo:G]WQWZ2>50>i"1?IfSRP5?tq93^/\B3)O,55AuSN+X;4"#c6R^>Q2Nl9J#=$m>(>U^Il$N^:XC1%2$>0\/bAnto!e?(QSP:RSf[;;;k>EUDuR`3m>g(2'>Z.>"Sqfp_7>%#!TC:9oBaei+0RGOr.D"5IXhCiO[N`(Hr>gbS*Km-8B.-X%g`'\HYGM0K[CH2s=8K=(qH>@s?1hiPIk<PW-oM!+GOn=MoF<,=n`0:^eQN1:p@@SQjSe%0Wa3@##pE5NB(YNdqkq'p/g$[&D_@Y'%Bcc-g?2`m[m3T0prS\3(2p_Nrm2nMUh-U%ps''dtS+*MVhV>fX8(,J^p>9c:DL.^1Ild!s4RTSAXnG!W56?f9UOeSEPs>39iG/+b%0oS0>pLA<c`366AGe1P]+6!"kmQJg]`uh<a#Tdsh;PI6Z(j5c/NG6=A,\?IiI<kGPqYg;$,5.=D09/7ZgqS2^9<.!?H@1CoU[HTO%r:TI-GF/3_\BN"7oQcAS,p$EBTEbFq==i_3r9EG7E^,OiV3trSs1Z)AmV4u^!L7Ro^;'XF&%@&&^\RS*riSeaL!SWhhnPjN_uBQ$%[ib)bIJ_:6'0Z2IL\mt[^V5&E^\\1UB)dVkA4(aRs8((A:>5,/jIs57Uj;s%$#4r3?!`$Unrs%Nr[k#`m8"gq5(:9H_u9NCp$j!\%$EZg"s,!PH.iFO6dY+ds@,TMS/#ouQrA+NIc/n![qpQM4:*6qVcN!&a"rcWJpq)$"[==7_571r$^3]eK+COF.lT9ZD-uE%4;Rk?I%1N<t$;X:.6J!M3Q*ZbglfCk]%qYpYJB:$!nZ*A9Hp&LIu9D'mlou#+n^::_$TOHr;kQF-7mlt.8g`J5P=K>\V]VQD>HblWpID2cR%.nk\L86;8:h#6p2k5N7'FIp89Y9*F#A);8ViF`i8`g*q*4&Q9tJ%C*1(jCK,iVk(u.0R:,k]\,2-Wc`W0Lp"5mk,^U>e[&qRk)pp%:W2jK5MTQ$nd)u,^C9%%f71aZUDb#oN"r?nd_G_A-a^A?TAES//QMFEqd5jU]`$sBh(RYl?eo[%j3s@,:)U/DEI[hFgk3B!OdGTm%5Na"341dJKcO#"8qBYo*q?6Z=o^VQnoU4o!dV$@NS)_8)qOHs0S@prEcO#"8qBYo*rWN)Ao^Vj!oU4o!nn32'S21Z=KbFI3piF#.%5Gc[4I2;f)MC<pQi6P(=cQC3"M*E57L@aA_M)p"$+7=,=s2]\fr&N`^U7]ArW1T`T=[-4W:-TCU48q$:T:u7S?H?dR5D\-087S+P%j-!2Z$7R<t':u!u`*nL&(X'%AbCl8I1,!'m9B(3j.3Srmh^fQk_o[-YS[]>_1@ItiDUpA[Z62cbM=27Y"+A2<l-u:#e+kiI-_@3a%jn+540$]9LDb_r&^QEJZ6k[QKB5tua0>ruOk0Z2om/g^'@OE#YLs]UUTE3u$/e?2UF7u+nN^f,M&gKI-#l>VOouocF=VMtk-S-AW%P&lp/Os$&:a:r.m1'Um6bX(qFK9/OCjK`:c'V<J2MVu.pO8_Z9*p>EJ^\INp@5ehfOWlSTK,a_B%q18])OB?83-@]2nqNe^K4Z%X%kf9)B_ant,17jH&4Jq:0d`"%:j"sJJo$]^Th%XQKQg&$A,lotQ=h\k)],TSeSF^WA_*s^Gi_J8XbKDncjMDFVoTOLUqq25N7%aD:%:]0I;7-g?ja2L/[1rmj?B:e9?a#VDfHpXH()Q@eH7c;N&`\7RO?G[[KLk.rD/E$^V*mSpc6/F9tLH+iGR#;)"c7qj2:F,an-]s(7%jo(_4.@<9"fuJ[Pd5Bm:pd0KS_@Y_Jffok&15,IfkKu;JoG\j_JH[!e%H2IlP&ElNA/nJW3DZ0lG/D[Vb0s35rXHjfq\LOPOF5,5%Uu-eF1]]96i_F.&,5F\j(GHd^+5X6?aIL&I^q@J,^tc0IJbaj7JiU]SAB3uoS>XLK(,hR5,>WO(PK'Io?u7&CB464/Rci!WWu_o&%*V9s0-(.;a[?aL`^`#ooPYETr<9L=qARa?BilST<4Z_cj<DTiFMB+h$G'TD,'XR&#'8r\R(QEKB/5CGXLqGut?5c:>'!N@GnLCcI%rXZ+)*UETR[6-;D.BE-K@r4E9%YsHn=C[u0MEYIF**ESp<k0I@e2P==1E*,()R2]*(MG'WNTrnV4R<@R2oNZk)Tre1`fYoWOqgc5%1Q`(T7,o6GoGNWIp(J+]?Q`MD,aoAQks0W@6_eWj13#X4R<Bk7JY_+cjA.T?#3+2QhGuT^fir+k7%.%1bq2GlClAI9oF28q)%"n$%8U-u/)/+nRR]I/sg0mKfIm[^q7M9r4did$H%lD`uc$AY%$oBeZ83Y<i8l'-#,au2nP^t4$0p)MTB_^GG%%WM+T4$Dj8%L%/cLI]W%-IP0^NU[r#Zni?h':O$"VLK_rj[jkpUrEV%K/Y'7B/Co0BOW;dG_$R$-NuJl,,EnAJOLG,(em/&$#.UKRZg"#(.Hg5s/6Zc,U9UL%KoUkQKq9#R$XG::<qNM->gp6XF\V>)k1sV1H_-L@XaWhBX8]4YYioKD^agG<_joU4@8k'H$*t+*Dffr""7K7tf[R)Qh_WZmWcqb"%\OlIrkZZB?J%l)dgkC46kXXtW1Gr9E3ECNFi=E;7jA4^[bTDr-G+:?PYoM]>j+05:*"iqLN$[MKV;m6>#T64(.M;G3Za;u(geLd=%7gKT_c@qX&4?-t)6kCRKd_`j(EJclI1CKHa9[EeEHj<4To9"an>YHFZ2$hsR!Y\_t!fIZ^Ldc5k0cO3pa!-*;Y>PVLbKnDVH=H;K%1GcLRI84-5X"dhLWEO?jC6L7.T_>R(c:W;Lp,)_^)Utao.U&)0kY>-W-rX!@U/4:T::tNU=;=rAT(CrfWnMUCbb3$m0sn%>Z(t-r%Ce#Pp$WafVGY(,0`I"V!*"+:T`(!"&F'rT[lrb>j<lrfc"D\V&i,soOM`6f5+D*\S*iDTY?.^-"/2N]R'`"tqZt"N%+.kd#qFo.H%gjFkIg!r<YqlFAh:V5R6cM9`P4RAEr-k8V[j59=>q"D8=V]VlG*&!L'DE/VK^?uXL\[5K):K<MuoV%oO@61,c;E*DqUGgQZB__@I%'F(0:]%s8t8#T+f4UO\9:&NkMdJ[Srm3=h:O%9fVr>:QBLh#8[F&f`*;'/QO%[&+6Sm-(S;2`opm%0]9h=nQXD_CM8rn[R_pX]r:%F4\1*UM8h,s-M^:?\[$k'`a*2N"^Q',j#`1V"7FD2#i#]E1[#IF+*fNiG*jb\%d<;I0C5=QLSD"rt<i]'%Dr7rr%j?8dX-TYST=)%rs7L:Z,:h/Y2UC?'!9\[@3Td>6/uOg(C&*PE#FE<<fs[n'.>A>Z4\E5+gSmi^.$(%2PuTkM2RK8^XJk.W<L5mB8=5SENmM:qFSpW%OdLF5\@$:);Do&KbajQ%%:[<29dI$IGu0I$'-ZZGaN-BrFlQuFkh+T@He'Y#Q)N>rQ+*4Ms3cN!B5,1`/Bi)o+rEtZ4Bj7=bf^iZ%/:B2n`MJsTrJ0/8AF^=]H9_Zo9bh#=oc?`+PXtZ4_<d5=rjcdoGpkTLN/8YfaAJ>HC9L>-c9lL2(D<$:*__-).]n"-\^fVPd'Pki%c"VK*mR-I%:Ls[F)#q32>NU9si`;%F+l?i#?Y7[bOUC%<pA1[TnT-2?=]'Uhk&3h_dPMEcpXn7!T>^-;qs,4!Kmg]b_mLm;'Yrdi%k&H@W&Pb6dVDQi_&b=KZj!XMR`Vohg+8G"`dFWlG_S>L:r\s^=rNBZ0Nm%IqGMka8lYTX6*Uga0@1-sYC@/e$oSKk8#5PZ?9b).%%[Lk_7$a(S&?%Io/NeW*1HeSLrfCeMe?2n#Kh[<=mXpb>%dF=Or6o/dF!3*<";=J.m`q_"kA"[][l+=G2<eLNK-f!V=O(_QGq\tb0%mO40R7&BO#,(7V1j)C5rT']$DLfklY+V#JXWjPke,&Kqk]K:-jiM;^b-A-!-\qq2Q3GI`VE-s\bBQ@f9rCB?V9PkQnhpUn4'E\`(%Vq#N_6oRNi-sH\ui<h8:"\6K?V05%CNnTNbHpg"=.LGXd%>d-6Q_TD7HD["p4k(L5`ai`k[-A6)$"GMs>*F\\Os1u;_os2S1jVRZ%I$A(`Jnbn,rHq!hh7+#W@W\27P;CY&Rl&G"T6/\Lq7%Wlk`%A-^F'p(@Lp:_H6XRp:_sN9<TXE[U)MI/!HYqnS.'p^>iIpZr<ar(%`$l4LK(P5Q)$>iumNNk1BaD7#&JsX9l6Xm5;MJD;@R=uF=0$=D+ph[GBH>\KRPTk_qZUuF8W_\'@H8^?,[guXPPUi(4<".%/Gg`V%`/c[@1hVE4ci_OJ600Y\2*pBuI[RFI$e*1E=_P&?270e_[HRsu9f1=rPS'@ITD"BmhMYbQW?*Aj<?m3hN4a-9I\3Rm0P)kq,ZM]p%=q\3DV'8P_opHp'%T72m9&d3SD^3piIPtUZ8es2;+:,;TR3:@\*mM>X3WVYR;jmn'b$dDQUXkq>)%i2%BbC+M2bWtb8Bnr;CF5Jl%R$],gG*+C3F3.'aHj1AjT4pKHPJbpP1l7Majh)n[kTj7T:KL%K?ASKf;L:s%PRLM=7AT27(JGp6f@fC^*CWp]2jUBe:9+SacSUQV%%S:3H?!JW<dZGQLB8GV8TWI,U4d&(i7+4p:K/?a'bY(IT=,2t.$:=sBM*nVpjUEY-o8o3!FhNj3P*X'D:HV81TC,:iORVIE-7N;8%iZ[NEWs;@o7ECBo8:H1+P-C,.YU=%efe121-+$EnFq0Bo[*8`QK[q;B=UU'l'?u6!FG<ff`%qfG+[gfZ\.F9>mr_FK,u.cN\+F2t%#obXSW&=t:[-1mmON+X<!9mB^V2e#sk,-&m@JZ+W%ar:U1j<8ME4$N3dc>IZRSs2Zb&NkdO@]GnJL<3e,3>7M:1TYBHVYkAb_=>n%,SZ^L;pre($umQm"?^7hD94LnYmcgIo$TDA3hV&NL9;L&KA`$B`64PW_*.WB2&8pFqI0"IhILk'RF?:dJj_7qOd<Zab7MoI?9riX%3#N=tQ1(#;I4_c=1F<UW<)j9_Ok6Fh'V?></KD@L\\4[aY9>_7L;X_LZg1XA]7@kfHC2g12;Liu0="BNl>/:/$-L5LP`Z\2*(_sn%Z!9S-kW0>1OA$:H;c#nUE+m7S^*4RdS8ktC/Mq]WEt5eB5jQbC%&@ltPSZ#Yf#=k[;5LfL-d+)@+q,.W0TchV_5.;;DT<giC/fb[%Psra8@;-OH8;W!')a"\K8bEfTb=$)g,ZQXg.7A]2\q2=h,r6]86h,1-XYcJ;P3BgLACZt]Rh)hD4dbQ2;R6gqBMIG`(MlETW%.Fc%=i>S/EJn"L"7GPdLnn!hfc?9-Fa@1m#)SJYB_.@/]YduPJnb$R@:\)*IN$1X0oRs10SPH(frpE;'@P-ZN'NC7f-So!B9E?)#Ab%9%1NQZJ","^,2Qj#/$CK<J3.]J0X`gb"'<f*-MQ(7t&lkT_7=+K9GgYRtD7a.goPDofeW95p0N>_CT8?_ihhA!=[Qp<>7l@U_!06+C%UWYLILm,,UZNZXs)H3ep+Qe-(@5V03L7gj^$ut8-%0ha?Xk&LL=R*bmgp:*k?l(@Io9bA<aQnOc<7VuIacpII+JQNT&Hqiq;:lWn%@n%tV=P;tB$3>*a;)?MNQ6j/0#*m7O8DRi@Z'e/D=/LI7:c9;tSC&5XAP08LKOQ[SKFP/)Ho>SMFCm(3_/)*2a5]b&Lt6pH'&!c3%M:H7d"VhEU?`8prR71g8(!2)"oiQOi7TbJ1V!M6_;1r/,0pD]*l]Y?/OUP?*Fj+&F13lI4-6:6p`i[aM6-)^-5a#kh&Dr,L'@UWj%n/r@cP?3Sa2XhOr.;Z:?)jiK^`h&RW'4t.HF1'p=hBWp_fJOop<=]+k-uqn-6pd;sO2/=QbZ;.r_oO)"L+cE#8ODb``-S%aWN^l[%+HRuSP.s#s">>f?bA:L0I'?(06J[X4%*W$Y1jFjs;DBOaZrdM*n'\.M3%UR#.KrPf9=KUhG14BXHIE*QH_:Rn'"NGuSbP([qP-CV%Empd3PIegL*FSrY5o*=tNK#-*g9PK[Gl&B@1tACAF%2EC3oFYW@chgQESMfM#uRXkK)Oph=sG[peG6&SL[YiG/?Q7F%SEF$:`*Wj%)c(tqrJbE'D<Rr*SI''Mo0BI5cq-$Gm!T_C4M-iP`RF/unRIJO;<#3r*AjmE(U/H^*fpR<a=fC.C^Z=a7g0@N,:m(O>AfgN(cL[)%KfGJX_PTAfi[8jN=XfGW@V0n\\KN1:I3X++1`6o7W*?7DVAP8`;(!)JQHa8KQUP:/L]m'96i_%.',/4kdV?XdWOUS3ohKNnAtAOH%2%45%\q:n?_207%A]5u@/P'1c]*L=h)Bt-K!O2ld?4ib8?c\ugPB/s-W!HSH,qS$`[%<5Y)oXnWU.:HJRi',<7U]?WYed1ZMtN1O%>f^(P7Si[!'o-APa]]d/?#U&Sb](b`(4&nXZW*_)an-Gg>,4(oG-nZo+`;guL1SHGF$iaB#Y,n^E.VniJCka!C^SHI6,Q?R+<0#X%&;+ks]>UR2XAWI/altL8M4^>=2M7c,Bs]cl`\>u0*8N?YJQPR&H/ui@<X@K<0FGSI4'(YEbRoCT>LO'Wc^;5dfa&/(S/R1qiJX0H%/Vf2c0$Bk1p`uE;5)pPO+IgYb9ct"")&*>Z"r_eUm`b@$[=d9EBJE^>3&#m%$B[^iFMM#jaI!PW15!XQ('CS(CnX=gN65i`Ru0^n%TObq!`)BB_>mSP\m=c11;ZX3Kk?r#^pfnp^"oT0WP_RsF0.'"D6U9No?*Is[.LDW4,)d"5r&_-!^to_:bsHBUX.33?/?ZZVW0V#r%EF]pkT*ZJ=nV(_T%%UK4B/"`*29VZUB"2i+BGu1,QAA*K:NGQ1:t4pOHP:Y#+H'W(As:YM(1'q$#H6r6/Zq3`ZC^;WO_HO<`5;J)%bLB7ZW7<Hb=ggFPPQF-Wa[o=L"Y6n_NT$>A4dC.k)*U^'B&k8b4LLKJ_drmB),q8C\mUYL(FE9?F/YSZKF-cp!nFX/q2D_HqWAUF%R83DpMfh_b1>,J5bT=#t;DJoSg-`c&"O?Qh,'+?6n*FU<.O1IfN$^lIKk7?`$$t/k%6]J=7"S2sM,1/a&pOR^&eI[)U>"FZMR(ce%X7FMt83qG#L8CsqBbp>$/30aj/VmWVM!i\>_iX"IU+$-:!,9iWDo%_:A0I^DBBCiB:[Be9,nAdOiM:qo#S/WrTSB%j`F7-o*B[V'%h$PM@:dTp$W1F8^+O.i5=%$nH31Y/5=Cr%LAlC&(pIIX]U6e1%^B@7=6ZIq$+[u;m#1#Tm*#Bfs$S+'ao3S!S"bY#=K+6fIa#FK#%Yk*1KU$$A00o<pVA`Vua^?M<F5^3<f\bsAH%aAueZ3[qnb0[!FBO3oH:b]B"F<J#YbpCpc#k]GV$[+3I3!em@esVcJZ;Z<l1Q,ZZ%Y][q=gf,Hoh17M3BP#>5<\7a8lO#Ba+r1/]eC'L)VS&j;^FXYgH7"Jl6:\Z0e0-`d0KHC%\?Uo._Zn(XP2.>m^a.cU_n_$?`gE'r%E0.:T9LL8?W2Rm'Vt#FBQT.`"g;FR%_=&KdZG3rHX>&b?mE#Mu:/3>u;AO3"L)k(cq9,k5V%[9K;Vp)o8;OcMm'e@KO:u)PUaV=`%4mGKA-Gm-o`KDH299:`"m'2s!ZHNB&e06VP2$`c)i%b_<]tLMN8;&^U]-5)%5[`6:$p*!YV(+Pk*",eC#+JI2On-',hZW7njH)iS%Q:R#+OCK6Y[Lj1##+-AALQkJ>/su:`9JBD#juKa)37E:T)+&ue=s*aM;\9-Oi:+S_#eKZ:F;TG1/[5b@-#\ICa`asg]aR]oBs`MF%i3KeZ2R:slf(3Da1[I^C0Pf@WR<+%9@nOC>4DBj%LLTh$00rtu*&uNpHac&*l*4p\Go")dehbJU$?NFi6]I5mTp9'^,<cYi:(oJT%$\kOGh&Y<:VmR7Dr+=D&ciNDZYD_9`4,^D!)tA^ilF&\:o3b$NOpY>fR)b5;942%Y\Y@Oj2D=c>:rpgcAdAVW&5#s/?pfteMJ3K[%S!F*?G>L_^rU%P#;o">j4cL!jmursSYh3!8m7Dk_jFFaV_.k5"m\8CG;<-"W&LZlZM$K,Ofr8$W6:+'?TG)pF/EdPk!5(pggb0;m%6##hH3<Te"R:<ZR]J<p%fQJTi:ra7('?M!THph`'(l6#g=@aKYkF)*!H&K9Y9SSYl.!n=9)]!o5hI(tXE#CUf(k@b3C_?5r=SQ^N%c5M+$'o<5?W0'I4i",8m"N6F=I;MP+1m@Em?OVDe%YYh)!C9PR/SZ/2mstZKIZo*-A0N/>(6JdKl=SS1Ca1]6`>k"52j!\u!c>Io%P8DomelC)I'CP4G(e<R^L[#1JaiLdWfnLej`]\Z(k5I1O(hJnp?"m7;[o/Rc"LVULlI![B"E1a25RNq5!=lMSO>:Y=ajA\',uORp%/DIf`>9#;teRWbs6!c%]ASV,d&2j6a"?FnhLi_"p#s?!=QQM.9hi_uXnJ)jK$V`g.\i<go5%3FsK>j(s-^[h?LQn,G/do`dg%.m9%-I$!lHN]d;Sa^X%M>_Y2@4#4FaB*oUfG[=^/l0_p*El[NZ13isfW%XSD6D;S=rImZZ4[EgeUZR$I/[@7N)pZPS>N'U##c*+['_I%%M^7,9nEI%<7Vj`nm7o[NK6S78-r#kTUA/br"/_fHp(MVIBmKDu#Yq?@YX]+a9,3d)YCROO)Y@ph38!^AYbcn.+X(]5%V9jJ*L_de%X<qtnob:WeZhXu#KE=2X>'/jP@phh58!/i&KB5(T6P<dpn`jfm,$D&Y)88r6@5b/(DCM(2S>_^NOI%4<;9,QgOLZO20'fPi=X^sC%6m1-+i?/9AbW4GXoHI[Q`!f]$BYmdoJ<5-h5'oqTQZP@<&_T8-a:kum#0lQZ,>(W,B\<Un7!ppeSn0@-FDQf>hsYS(O-e7\eTf5a%j'WC#HWZ.t:;iTq(J>#2*/'e^_?$3tAQ!)LW_CVf)Q@P>RUf+)M;]Di5Rq"gf7MtcCM4?Bj^L4gnm8@h"k;V'*Bt9rBrP'N9?k:F%,'+=HMou\`'a]Y'RX#/g&u;R@gH8Aj+SBQ/7[=9\EoU+?0W2fl)MU]i]OW<H;K0#&&k`6F[4*IO2C'7n!s.0D$[-2V*iP:HPr+dX%:sV<-k5^ef:soZW"@U11D6.HrUHo7$kcPM5%7*8UM.M3HY8gbFaSrCq;X?V$1i..aqN5:Pj:nJb,_&Rr#*;uS`[^Sd+l_FB7l6g]%lkE)nBTPK-RS$='.<\Gm76m_\K[MnPo.m2+&*gCs&PC-;[.#=M\0k.6A+?$"iBW8<WDo>saE,0]#M*:P?[N!D]ML*$H(]t1^g<'n%T\jR!.&7rP$&n6rG0F"?L)^]\U`5K)KS76C^*.D?[L%`U=<LJ>:,mnI]$32SOfGc[3TQI)brLH/Rh2E%,opI.MA&<<X/s2J?.mRN%J=X>?/4H&H6WhNaUdrt'L\':m4[b%i3r*_i^$J*+A8fp-U!U:ELEg>WPCPX4WKVnCV<VFt0Z/rA[acjXO,3<[2%b62TTX:uL[]Sr%Z#-b'iPTFE#B(?qT/B$INoIr4K]6[^pd6EhcgD2Mi,p07I,8FP,P`;,%UTmR&W['W3gL:5_Uo"_+X7Y5,h14hhK29;B,/\ss4!77%j8$XZP*D&<SfEsI7.cU0[gD:$8LOF?`UjDgmp67l)p2Kg1$5=m.3_lIpfHi4Eb'niXdhhuJ)HUChBL,E0k9T&P0Sj6XkZ?=PE!>u%N]r\>jY2^b]tNtR6#FYR>l$W/loS5tCT!:oaZ-E97LVMZk-*R[)/4365-=`PR*2"@ZuR-0U5e'?F<!fl(2Si]F(@WU9Wq_lAd;p[%m5o4,3SZ_6,V+.O+3[SQXUPCA2MW#K('7AX)A?QQ*?0Q?&jBZ>,=&Fg<OIqhl3'^j-,;BG>ud@#R.<3rZF1DbC0mPC&hgF=94?2+%\&q[#dc5mcfa;\0>@V(uDn3:li%ACFAo0./E[mum(M)h-[D=P;::<eGMZG'K60d07BW*pj(d,*%EJe>YD$[@sk4T@['+m*G92<Nh%`<26T;8`&POMp`n!h$LpHUOsJKQ^YL3TUj)5b]rEN(m\%jU;<-7]0Q?mkBQTbb59C;&o-PN;R5%B3&VLR"g^]X9gpi*Y:>:q!8RO%X3(`L@LJfl)GRfaqVWV?c:f2,<5<CnaNU'(3\!s]I)LS7e!5o!&'sb5OsV.]'ZlU2Y'>:Q5r?A"JXc%L!C8sp@9nJ\V5[o@LEJUP%F0re!22;N,5`c55Fbh4'0.2U'q9I.:%Qe)F)M5n&8MTBREB+ngI\M]X2GcAu%InUS$!ag6(*T)".Ofp9`"H*O)$u`RK-!CcXSK],%UGVq$DSu\&b@4P!p)2)CSqH-Um5J.e1imB>NVQZVEd7]'L(p%sOR.eIG0BQf+Ust@Th/]?38g\j2L:,(Ksk<lHA%B1a(`a8o^"!1%@Behjs,[fP?orb[%"kf80l=<P2oNA]7*r_1qs7o<fS0EM*M#WoD80Hs.Vg0q(EfD&8(>ePX?qHfG/7%42rreHZ.@+,=cfZMCtgI*%\CDr/Ug"#Tg<Fe-6VoZS/=Ojs'(dGQhC(YWGZ"4H:I)($Yar589n5'93u:rb&l]'(fd)Z,DSo*?#_pJB.U*$U^ng<.d/;"?X)8Ik%1M/&db_i'[WWFHZ7DICVM"7I2F%odLi!b;l;5OP:r5Ej6ZPJ@[=LM*/8DG.'*De-OWY45GPDp'fE=NB)RL2;"-0J>fA@u"FE1T?&%X81'b/DZrLq%'sg/4c90E:-5_1MnH4ZPlu9r0&2&=AOD9G3c\'<QWlOp[-=74ng+sYoGi/O^[mGNPfBI+YuZ<i%96-:;trQB3j17%_GAg4_jZe<;[@(/Oq0ejSI6g@Ie#NXQE=t`O`R7LU6L`\O.[kpVKNe)3L+5NbUMU9#I_<rO_lg#,`*#:V&C[R05ILH<60'p29h;#%2C5a5Oi>8nK!7>LD3L'Z^cSVS)bES`OXpa$OQ^B4IkaN(0M!PJ;JYjW-OCm)cbKm51BEH%U.&[bj<\dA?CWbq=JA;Gr)Pcm7g:#)%bJ7j!3`t7*;'M\N7U>G$7YIWSp6P&A,PF'(*)bJN1a[eF0aM.EGcr+p6rF_r)]s%*oWD&WqWNjY,$b5sOm"(f;9N(f`D@iq_@(O=%MhY=LSCR=lb*"OtejLK-"p?Z>A9CB.p_r[tjS?X1O"ogWnH?`u/;qX1U/lc*;j^f*,r%@TZ<IHD!d48u(?AajO_#"&W?$VI1rKW3%P:cBLnWLp*OgG]Vk=4f9`E4+7QB$S&+-@RgW19u!$1Yq6`44_?fp8AqI(:qqI5XbY*2gWPJu"h8Q7/JAo.1co2ZePs+*a4i:kDK&%V&OCd>8%Q%n[r^O.jY[PbS+X1ba&UVBat7H+U-&;DeV1QnG,lbc,_T(ZsQoT`-^iG3gG(<ftc9,NfYhF8862dIauYp>(Vu[^67$a%iB92JPjF2WHjUjSSECOX6.?%k&r1OEX[^/<ZMs!$=(^#HHRpX6.VB<-1(G@PS<?5l\f],J,81N(50cmTfQ5i6O&G&T*td-J3CDqh%%6dMe_"BsAO:=DE!gf<b*I7-kG6$lS2Y]g`O1Z??K9,+7Yo$,fiNc=n@@,-p[mV2spc/52F";\fK+I8S0pndG^27c`TaX,*'p1\5%XL`fO=FG7\"<0rr:,YP/%DE`oc;dHKH<CFbNq.(EQ]NFiQ>Gp(,Aa?q^U17aWAo.h8'R2bW1J&eDM;3<*+!a5>KfW%'t5;2A9MZ"%rc$SnKm;[5"R)o6@QBA%iIQn0(6\unp`UZ5h*jD]`OeAp=W#*h0Y.g0706\YljW=mGLkKYYRM<PO8^Qt?/F+&6^E/e4=tT.gd[P2%'tABqNk(7Xl^(S5O!GE-UI&:`+?>7]UWAJC&qGNDE9>Y]=E\]CL.`j-#P2TSa$M@6OI;>X*&<.*6l\>cIaX`(JrTsGNd2c26Wt0o%T(6%),hgh'Z9O0c<N%#C3`F1(BXlq:kFad<KZeIi$`CJXG(gBY*#oqZ8i`r3;g[>*bZ'XuM?BV/N[=R>`">79,qQN9*'3p;X"!ap%(YQRNi"rSiY1OWEDF/q:OpTAX+]+#3@6RUNj9XFp".2Vb/dZd>2]+Pb7Ma#hYR-jrWH%4J_G(i9+pa3'Se'CHVHUe]=tiAc(k3JK%%\NT(O#Q),]1CrH3]TjNmWlkkD<fB`l,Db>=pdKTh122pqkIS_>7!W]RLC=kDWY^@]IP/f+U"b`F,Uu&!4IE5@KQ(kPF0.LS.(V0%+PH*k]d'eUlqiPs;asXPq?`JO._#4%9@@WhR=W@;8RgtPGLN("&0`6ad[7Sc#A6P5Z$Zk8#Z"a2FjQOE%:+)dO4/-2\AZM[/t_T8%f],GpT.E23JON.Q+3R@d)nHM\&[6M".23s=8TS?hdKBLON&_>#qH6:LO"<7P+;?->Q*36Q6`1c-#>r92#MpdhDBqOUdX_9Cc!WlN%(J2bsp*3U-(G_l8Vk"TnmBV9dQH[EQ_sAcshp!%/2*hJ:M5-WU=?,F&<]f=T82t;qFmBJH/2ik#XHbEaB&8,/l:bNmns$q48A:IP%,J71oP+p-R+t<]cE9:tJbC8NfZ/TS2b?BFlD!qbL0HGmE&cl3W$6*Y!JO,@o1-C9t4"N0"PXU7<$Hs$pq1BG'&p[2-M6bdm,XZTq%;M.A?!hW#L*%`0H>!7*n17EF+S>(fjJW_Y02CG06k-1N4,'UqtAknBK\J.'&QqEMPlR/:?Y\Ph047](Q,\L'?icBQ=6eK5d"8:_.%9+Jdg@">M8cZC;t@iEecc'<;e8h=@+MN_=n_Q:X#jpQo17Qfsb3F\W+ju=,!ai_J7%9HXZWTn;UPXCpfdTh$(39Qikh<aO!abH`1%b)'=pg.9S3jQI8^>r&Z_Zs=Cj$2+sI::&ji8nM!L0:pgM_GqmTFXkP5+c,JB]0lkH(%0nW9df:#YoT:UeOdEBOgG-&gEsb2".pP;%TEX7W.Lrm@1te8"89$7"q0qB,?f5A'R0rXFb%A8+LPJX//%,01a:cZZ3*6f$G:\PKkfQS1BoHkM-;2nj>qd19#E2UWiklLP>4EGf%'r&qiM3RJD=Hi8Q+c+@V.'&=]+c6\9Zc7A$G__B3TICU\#.#1K96i>5@9#Ps_HbRp-5g>:<)s._));cqi[!P4A0C(=;I2)E6fK&2%Zl4i&2HA"iChPe-!WWh6$]?9U..&Pc#gERk6Mr@j+ci$f5n&Ad$AX.6OIU/VN5n/9eKl;"rWmsc):lH:ljMM>=dV8fJ*([nI,j`-%.8*r6_[AsVOm5LjW=&6k);Be8r,krGK9pZla6=`8ng..\GgMH3n0mjqECBu%l^RKp5iheD*&8!\&j,@?)R9jtYf:6P*nMFkMDt!E%WdM`"M2]bkq=CAYi&D_$<e]7*F/U3L]*f99s.lN'eAG@<i/A$OTE!jpHt0mm;6_'uC'M0.X<an..<C(%#DGA*oYji;U/-0tD[?0%%0aZ(A&]sC&&@_-iF)+1F*b,i+Kp$4T?>;U<1nliCkLX)bh.dh^%Yu)8[d`<N/5-9g(<g[:OMl1T'hnGGJK]p0JCDLuEs="P!@YqP%3%7a/0i:i1Ha^"&gC:[71*7(Hc6V!%"@LoZDlUo["3qJ4\\ON(K5Cf0TibXs3i/&r-X\^fK$>_[nmF3qeF%DOGuF948L"8R?ngM`%G4s"3,jGkP%>T<@AeB(b$2<;"76qn_2UrVPJdnq"f)/jm>Y#LO\EQjhYoudPSq4(G8_@pXFVI?)bjX!7)VlUl^Nk<SONUk*S,gVj%)5KC"@$Wkr]^/+lB$Fu)FE`_jqirqn\Dmji3ENNi04C.-QlQfL3BO:Q4+VTgTo<5+H]G&(@F6Nm/_-#J)5.ihS,^_P^K@E]eVi4G%O\+*:NKu`fP5I0SEjZ?]];d35D.C:b7IJ6!3*o_XX1W&Nn`e%q>]eie5g?sdmXt2"cP80UYceA[o2;`a=HR[oi:EDX-hJ#8ek*[3%Q@,Jlg3n=hGiOH!^,^>YR166XO\`"r3^?B4mZ;]u1/%D:=4GDSIujXml=EBq1nr89g,3<cq8eEqA877=eCt0]fJ+oF2(cM(#@P7g%K.?C/V-@enoF@CYa>Y4"kVJ^hZ^g++6GA9&QR#Ot1IrnT3t;I]f*>=u-o=:Dke/8bGrF7VX"!6#U9u"R`EC(5V-PIdbS_.?9R/p/%;fh`8:D2[H.?r=9`#XGW0*(-V:+6]oe$5FL1$9s"c8NO93RWK26BX/';a,PloEOKX*)";.'Zn;1`B';pNn]J:9@[#I//PksNb=mD%@?7EdH$ToPa*Q>?Fltp)LjYL0#NWa<+a;&rnKkdP*cTVeVeLnK9pg=f#e04@Hh_>Sc9<+>1#[_E+M7!9^:b8%Qk`R2Q6_0/5@<f0%k%=PLP2G&m=_Q#$^!%Uq3O<0hd(od6'RYpA"D!-\UR`pu/0/8K3K#'=Cc.aC0NZ8p73@XU5#::c.F'"BfLf(l'jF@ZVaKBj1M=/'%m.)B*,oaU*:LOK8G%CE_--\HJZ(A%o>jjT2Zp_W\DbX#GquKk3\UpofHJ.72,ls.S+Z[gHjBVGH$Isd7-f5d,oRIVt::=B-E=!gr%Rh7-\F\[=%:d##(+\A@O.?g5s`?Qg[7N2S>:*;3eK/XJbXoT*d_<H9Ab[q=B<!C46auadH!hb/s>KWoL#YUuoS8&%)T"\a35m)cc%Qa02NC&k=ODA[F`,d2s!,Z$Lls%mf1'l;k)+7$6I/N)AKceA^^)NjcWP[_=C0ieTE*"g'cL\[MXGc1-TDGe,%bCt>OEP@ckK1)+,%d.s[#(gh<>9VK+[ago)qd0@./`JDfFAlHb7oEXl5Pt=?hiKIX;=0W%F?FI'@8]T/fC@I2@q]g[5jrT*UJI_iNZam;!`>:hPEf^:l%5q$.fM0&BB*AS0hQF1bX!q/6<cWZVlRp%ZCr*6\CR!F]H$+=@";UM'*8WO\n\OB>)!-37mNa`.5UgoV3ZA:k3TTG3En5U(-MShWd%l[>;[)MYP3bV:t=PK,W.'RVp3$h`jW-&,Fs1SK#]/I/L?'[r.`n4;S%"U?BZHI$p/1uciOTo;\\%;^(#T$J24H9=oO+>8.HUu#do%1!G%B^Z-?/`Qg![,FaXJkm_eBk@D-e6eSr?-f%Jd;n8P>LO3JAF+@(_<c`rKaG*'h&:7&EDo_s(Sn(D%)@E)-gG#WXEKRNj(9,CP%XpRMH&Su4DPSZ=2K5<-Y=>i^g6:@O'a,@V/aiUtr\`jb6d">RU'_>UrY4S,N+8d!m9?gqN/O>.rpNgO)(7r@j-omn5pKMsUYntfg%!A;Ys,.7ND%:$TOCi-JWMko+(R-1\q&Mh25?F*6a<jhETCVCc<k^*\^gNgl;4o#23Me-Whk:P<gSk?\^N8C3P9Z+T6DKRJ/E`":U%cSEN8UAP`"Hp;65D34LMgHmJb'gY%M)'Ko.8M`["7#oVfg!Fq_i*/Wk3"\b)LE$%H#'8',AX.m';gi$[p9!+L>p/$dEVO94l5`?&%Y$R)A/96AR^a?R^T,Ef^@tX/[Ad%Qj/Y'V@_i-!RK-lO'j-V&NI.oD!'@(N,_:ap(03%Z,bmL-$kt)gu6ZG+,^BR!-9!UX+P:X6/%AIT)3h=Vb,Tm;9W^sfEnjOe=WUX.=92E6*;WlG![\9\;?C</&g5QDeu5Yop]8q^f4eR>Hf<$;O"md"(6!1WWiC1^sb*$n03<(H15%YQFukD<7Ss]iOd<^mN"CT6q%O7Z(8J3-f!:T-VZ&#@u2$niPF.]Iu/Lh42J,Z["=[FUG9VS,h:\C".NDdTc]4)u>cR)BCATMRn+]%LbBOg<I)#,?MU%=fZ\0so8B>Q7Vb_"hlcQsQ1>>.`boQ^'Gp1"T:63'q5fr\9)dJ+iUCC>q_ii18-d8:jV*Gk[^mfBl>Z!PD8&T%%b4>)Gm/8tNs1*$kk-)6UXF/\'KQbf`SALM/4)HE.=<qk@"P5Z3lFKAO(80Yb=D;BmDo2`m;p(PspY'RbMHO092S`In<#2/eb5Ku7%QUN)nZIM7kU)h+,UVmPhHt5lZS0VU20ZcpGlBN-a":\QZHD;",3-gU[GQ>5,%];K'medT`:j0TOa`)p"'*L&8M)4gaeL(+_&gFDV%=Ri=@fR8#\fh[m5`nNilT#R^D"G;aGC3R8IJ/u_/7Y\TfYI-b<4Ns#GTu3S.Uh<-W[1<X8O@j96UA(3$%_'B(O/qV/i&s'V/l<PZ%dR)APq>LaA-lJkU2a7fJO99Ekj2AKC0g>U^;7p>a%27gO%2RAI7h3)*UB\Jr3H?'bH:*]k:OEX\o]78<[,cT$d+sl,F3*'uW7d7?%F^*^fJBsr-1q9C*9N]#,',h0#]9G&mn>\dbSR?V$2_Zd&]&[Chb_X\[8=:.(M93Ps0ta?\)ZJ'QPjtb\Hsg,qS$I#XU(N&D*0H:>%/A*b'gZISkgDuoUOj0b$Vs2.%+_d]V7P&]ZdS"6rK`W]5UNLt=M;LYZWu`(:FZ@s@[nW!W*G64ne=^4/"OYnodnfVC,k:"hND0p@%'Q'R5*,XY(g;gj\1079d&#lh@4Y.O#I+tEQ-@AV&l`hpK"L5Y]\!gcI`Nb\FcP8Fsi6OKI>Vn$,%s:1^9sc;UJu+O<L(Xqf_8C#h%HY@(I'"p#`?Z-N.W@aIAY^+LZju5Y(-00#b"oXG+30ar*;!MjX=[CJ*\Vu4opVQZr<fls_2A0i-:22j^>=a-EhCL3[k2MY*Ac+HQ%8ON61DNEa7++CB-H$$\-7]td@55Z=Z[]qUeS,8Ql3-,8DE%,q\IEYnTmq#*aGq<CS>__hVA1\#!'FkqMU(5\'53Lh':BX1gj-i0e%)NH7!/Rth4pCS?(Z%?JqPWJ+or"]cXTKuqdisVEgbR'<^3l]BNSFi@/3S8eU05TEQLVBe;p9B4ED6/\9b^K6jNaKU7>dUTLTDN<d%0fkH0_)ESJip,B$AaH-(Nd.rh-:Q9c_dNB*F8l,=/01<e<LpRZ'c_(#AW3DW&Vi4`qlO]PQX"0<qO"^1=;Rr!,Bq8oD2qVa8,@ki%3>(lb&[1fGI^=XQ\WuLUV@UFrUMZf#O0.J,@KRuYE"&(2BALV@L%AVm!Rj9R17l$Mk8%sR":o-.X$#W`[e?3`K+kapS[ORo*,T1s%4;PJgfYE=o3.d(=nP(*S$]!W0UHJ5"GZJB<(:2;7Y@BGjIdkm4cDj6P*S9rBeo8!UPj)<25%4Vl)UF@8WO)$1DrKp'4tRJ6l)`#E%8)tG*_M$2V2[H&C[k?Y1XOLt]=M`BC;Ps22k<>aIcEr0J\4dds\rUh=LW=J%Yh>7ugubmj15EXHUApG"$GUOQSnE>cq)lT9X#fQ1%r#1U(YqhWUgdc,;U^E.@@Wgh1O*M+'hBP"<,5+YId(5</K6,SZ7_bnH18s5M"`Lr>=639/g@V_'B$Ii)ejQ7fcTF&2XMC:H<6_i5%[\%gQc!I!_r?:p;&7#W!ZCL\'VhU^$eS$r,UXX=$5AgqTRRs2/A??s*6?<To)(4%?VY&oXd$X#ohp'4)jiiIX8k5"7:*aJA'/,l;%Q[K!bJXMcW.Ut.HWd<F6ehF4;/sUZ^l"f"gSCTA/[p1S(qJ,9=[\DVN0NU<H.c\>PqYHI[&`Tk:j`qmM]_i<3Z)Y.u@pHq!2H$FK%2>7\%30fNL\6,<$l!rGaWHB#lHHN?h(VcFTNgT&=ISH0P.Rej<R]FqOHLNF5[Gm?N=Tu8fI8"E);hgJ*O;`2p_n:Qk?HjND*Z;NC%<=u[8*H,c:+gI/N?+hC/5Lg=.3t/NOCO:"N.,:UJRX*XGpG&hEN"m&G_eO"6BVF(*5k>q:U:p''.cXAkM7cb+HR=c&O&eVp__mqM%<96/Ldn<fZZ;qmF)ItBk5IgKpL*aUl.Y`ONWRLPR2mDWX^>d:1[=0U%VGi48"!!NhSO"(k>U$2reqL]l[]_P^CRIgaVj+om%ErMq%;fU"R`_BelSV70C(TWYOWfVi@I&]qJXWmj&'SronU2"]a$n,2b[N2L.=h@q[+bm"pd)$/@G`%d:$Cd'm(7r1,6C0aI1U0Q0c%UbQ%G8?Z>!lE\BKXH=Bn[:8T[C.*Xi*!Zs./9+"Q58>_K"$USXUs*Er"bmJEMl.>gNG<deMn?P^:;mP<="lsJ?YgK<Zk=:o*4J`D+E%n%T!caqJoBmfC>hl%]Sr-+Egr*E(*;@#UfUmPFOt)_D/-"EP:F_4kg[tLD][&l9P[2Q.$lZ[WM-dd.cdI]g)=8]`,-ZSFO,!4Csk],%[nS"noSmnc+7EO0''Fph"YFu"F+Uf8?*!50YCTh4/*+?rdZ8=?q&5]rPUk!q2tIfP7]XJ^=A&4j.c["YE2Z&c(1'tgP.d;('hh9o%I&tVnO6X3Tg/o5"0:)K;)E:B@PB#!U$<QYjV'ceUS[4jKb)rV0`;r6(*On8#,3>/08W@35,LK1PT3<bRrPUQMCF4a$*Iup@BVC+u%Rc.5rCALM+BQ@7I`pR:N>HS>o0T:)<&fK0>0d#N?)HD$-1fprb[HV<-c'he/Ali,"Eslhk6PGuk<e[r!M[s$*15YBdm4_L4<)omL%.U/7Yn5/7#99"]:;5k9h*Q9luCR5EOAVk$Q%D)<[ZiA0#6H6%.eTR1cnB=rD2$(0\Tq9'oR;R9dmbfnWA_73Rl.0%@mDl?&=gPsc%q;Mb7Nf=KTa=a?K04\:h[NiP@-f4E%?=^=TlS>`7LW00gZ)i`"][gP?%lkPklYLpI@9G*0bB@sp7kO$8X0TGq5$B=DS9nu6apYKm%V:E1AX.k.A0@O="-X8X&bQ=*&XF&2cc8@LCe53N/(+jQqX7WZuTe$om`C"C!D%GY2$G49@'j#`NV,.99o4X]\:=)*A!nDJA4;sBZ%eu#&s1i8Nd,qPD[M(Q*EJu1M1Xf:]cV6/GnPPtdBLq.@0-f#r0QZWeL*>:9RSI9PS/*=p;DNZmU\-AB[bCrO^a^Pb4XeEuS[#@q_%eb%>=<Wta1Rb%S%>\!jHfg?fM%6TUC]ECK1+*t-k8CN2u6.%#_<!"2ra0^S!#=&t6X3pPnDkQU69%)?f'u?uofNu?F[i@W\a<\OQ%?(P[jJE,(,Y3W1dLhf!(7`mRKR/:h3S18KGENqR(kp('(Yl&8$'_Y]8]niO8j!,O0cfX5+$gIk?CL-r<<nd%Y20,8;oT@^D\4nF4%f,<[6HiqEmi!:s3:><enNpbMW`uu(*qt7KN^mF"ALSMNP)=,sd_(koe<Z:4L3OFfb47R)WgaJMoJ@^0nASrX82'g-ff@b8OJL#$3%k/=04'<*SuCDSG!m%\)33Qg\[eNOUYn?Q1]QIW8)B37O-Al>T)5c(*PKiSHU1JUrPVOqi9NAo.!*fn9hXNT7!F]fSQ.)F.SQtIC\%=f#dPhfe#2OL.k;@s]m'1(J(j@keoY2Pj0tah3=<f4f;X2rET]m<*QJ'PWA]I$'>nYep3=?5L4U*A2W<c:,[ZFK9_)?UFqE>3=7Y%ReB`_dg"l4K?U:UH=P]094\_)7:*3OSQTkhF&g;:]LTTL&Ebe//?KuIZ2tUu]fiIH8o6e,%F(>ETd196IXDOJf?ar(W`ITpZA&!Y%+j/QAkHWlNb,'aX#t7&$LP!0m'<Om7eJ%%hhl>PAX#3F`R7m.;OS1PL@#f#iJm,=C2I3^iAdrWDV(#Cn=&gF$C,eqrhdKjfBR:r.%b(^gOhk\b:qAC5cg+4'2D7$.3e3^41/-RE%27<CiZl.7gPP:0a@mb-Fa\lsk;'R':TfT\Q=eB?Pa!Bpuf1A[YBamSe=IGu=BHPF%%L9jiWA[k]^epT)R39'r'G5#6%_50hQ="h#lGRY[P[b"di/n"O9^=7-s+)VNXgIPJO6qH\i1iPc%+AlB9STQ$'$V0"V3M8?4LRCaP%LF-E_5[:t)QpJ4"m'k[G&A5$g\du9)UM[)+;MhK9Z%4]3E"!P`j-r71((SN)fENb)1<)&'Fau6mgAiO+UK[sOj4s8]DZbbp)<7+]%=;j/!80[)'F[FPIGU>\tnXYMt*`SO;V,/r^"uU2e2E]tDduk(u8?-sG<ecu9h+RE&<c+X+\#aWmYm"+oHP^e(>,uO!A7bR:?Sg2e%nOf4k*]oZ-`tu9)oEst0=6bP$3`FMJ["b>mXNXFK8KY*dj&Yb>E%,q\ICLjKc.63h_RFY*G-='$%-3`a-@JsKabp%/e^++iF'Y^2%@q0O\AW0j]@r1(^.l`-=Q<!]Qb1<eNU[rSjpJ;:r@d`!JN-?@QO;Dg("c!1U\nDiJ>:5us\Q.oOS]kk?g*i<XOn7#EfK^>_Ul:;a%$#M%u$V=9(-!E<=>CH(.ql5@_pWco2djuli!\3/"O&b*>`^/Lm:tJlp1H)JE<A*o-`I6tt[_Q>U/>Ha`VRE+_ZHZDO^YYpF8q:qh%D'dgcahdq%.ci74]%3aN'suLlJn88TIbKd>ctlqm:0+F4HG,S?6^(6>:ic+^d8ck_lVuul"oriLCH>j7)sH9Yf4t/Mf?gUe($\?s%lXt+/XXk(%.G"oD5@FpoLfQ%F\U(0T'^?0pm\N#"H$=$$\2jrAIakb`rN)Yp1F_t)_e&fA(7JSt':a(phtH*>d**#dXPm+j>nm^P%\ElHi%8AbuK_JMTSue=u\Q72*Y_Hc7UsQ8dc2B1FZoXI.j-4>=D*R%rg3]):Pm+jpqR/!;)pD,&>(Q,P_m/,>KWpWK.O6K[\Xq^N%jVsT<17.QGoW#*+"*:GMB&'D4D-nlcGq[,X9W99r<+V5Z@)3S$nb=6*i1[o2UVh[?<l_\?pba=6Pfk=*+nq-<80quI@$Bn5S]k;/%4PC^_?#$"hb03T3fWR;@UW/()a)'6BE`Hc.7pNsZ2HD0=\b.[8E,$3HE3VI'kp('(n<iKH4YYkH+$>laH?Md8rtG%$2n4iETBA?(%Upm!uFkT#[E3tUianZnA__lDg$BF%RF]-[Yg;;gN'2A=]<=koTj!BEN>icto4IKf(.Us40i"^is0%ZM\53=^BD.@/T2trFQ30aT3%E@H%]I=s0lVDBUY`OnW=(!-Z@m5%Lbb](iFJ,(3r:-Ho\2EfPd[##PEh;HD'Uc"B95uBb?`n9u=DP2Nu5ORCp^,YqrqtA:j]5K;D%+0QaRjS.ohGLq%BnuM^Bro)i4k2pFYn`aK^*In$.f-qr:Mm$./5>eSRj?N6,d%5D?-p?iml$rY_J,U+0rHBahgYVCKZiAMS)YWX0%r*OroDI2/XD(3k-pKtbH>f!Ct[.7:fSksIJ@(tLf3G+dja5s](bK/9:b;&-fs1=gBnK.H)bUp^2Dl$OLJnt]MJp_L^.+jK)PeJc>%Jm:k*7Z#LCAc-`\;FY!Dkf-V*!u47ShXR/mI$gPB\R7(-OU]`42RgP'8u7@@G5Q*t"ns+@aqQ4@3q?:WF\rNfL!-i4N#'r;^e#_u%Is!B5o`jiQ0ih=2!<Mk)<RSZ><*0pkROqb>^g5YKY1So2<btoIU-*s4p1[OV_DGN)G6Ts\k60N"V(T+2)-BhW8;4Iae7B*=<aIHe%8C`'!OA'%?dL5.oaid@YAJJa@R(B5Mg.4o^)D.uB?kQD)fpL9jZ*G:R8B_:)Bu:c,]p^Z*0f9V<A9u[.1T#qcb"Q*j68`RQr+r`Y%T:)7`=_s8n8O[;=Zb/[%Wt%h@V4)L`8T-rf-B8O?"a@#:XJE^D%FOZY1stJg_UYRI`OVn8[`YD@rr0R$rh![mND!'!3eF4t2(fo?%;p1'?<R$nrQKZQMhC@&[bd7XR\u_a)L/=\B`hbaK4&`#c0K_Qj2(mWT?HLBaCglad[CiTJ:e*6W<Co^V<Ut/Y>A@D:?4O;jC0Wgr%#.WRpSdplR,WFa@ht7d&s'FURrLC:E;\U7#1A!'GnuUHb9XmlQXY8HWZcAOSJ:tTmASY7]eO)i^4D2,s*>B"D7l)C_BL3!red>M8%i]15:bDgKJ"5XGOZ40$W=*@&%Xr2!:nEjl>l<<^?CQUM9iI,?fhL9)$X5SHK^h_oeMGLLjB-$W>alHllG9bUJS)i+1GAQ!l\TP-c%>UgY+_L"W=hGCo@b+oU;e]!liF;DEU/KH'VG]"8_/XD!DUFG,('_D)iHY!E=48bFNf:qW2j,V\35%c+SA5:_FT=)"?kg*Cd;[8#/%(ssbFC.`B&X>M)k1W=[aG`dY+]cb(Ud#CWSX>\Cnr`+HOQ.-_EhFc4#EB[rP\+gp]9_dZ(h<"%S]=jNsa"MY-Z@1HeJ3*XIpR9/(%>-eX1%j'3!qNgnLd_CS@r3n%[k0A/s.$/D!0EdukEo_1NVWKQ5hr0OM;]0*3oZ/G8l<BFN0D4ng0dPODJ[aFg-.hjS?OuUe,TFac%?Sp%IXkpe*Q!)E,OD,<TQf]SQ[@`XO61G?W_4lcD`=;L]X7c0\1Ns_8()]lu[R/Z!8H8(<BU4dmrRi=f,(;^#";putmkpUN5>Jis%X#:ka/EENe'*?si/jk]Ciq#)LHE"@h!ebhL+ilk_BcI\dO=#*L+cSFM=+&TnITf\I.GW9W`[bi)XIMZ&B*5/&L6K$I:gOGo614GZ%KA;C[q)M/'R)3,KrbGhH`O#PE^A4R_D#U`f%7LD]C'>S/,\0+USM-`N4>ESP^+eRSd?nUa/o,+Dj(Ti)Pd/q9fq.PgA2joQH\ngI%1YKHs);!EkB<6!##$AQlK?m9i-/itc(ju8pn6[_jSc0p2Ek*LCL)Q@QrjGZ.A^l-1NI(T'39*3q$>2TQ87N1Di\5:c(Dbb$@>=_Y%<`rA_,kYBHfmqeoY\%s1nnRY%Ejn7PjBfdN+#WT;?p]tGI&DSe9ntnA>9SOfWIuDo<2<Z4'r9kh,@,(I.PbS79oJH#](:g*f!K,L%MU)LV*i:fe/!O+%:lr<ffc^#5If:`/5\@^`JSm5K?bUBa_q#=i_o`I"M66+[8@7#$qQ71.[7IDKCMH(hg=3E"AkdCX;SW(12RTp5%E3cneb,l\_R,%[WOF%R(J!;:A=g*"A%_YZg[uGR`g4:^Vq57HO/W)%"GD1.@!fO$h9oCd/9J,:)f">-;=*up!>%BVC$GIkj"hEB[%%<=,]kDunTACde%3*NO4J(a%?XW=?sSbZo'>;;4P[USl%AHut,QrU\fc(JNcjb]u!;cJZJ^XO$c(1h$2[Dc.BC8r;Q38FKAY^-T\%J#jZhA'T!c1JM5jD3Vlf%b+A%5NCI8;,g,W/#6s?=%k2]>'+CgC1Y@&<a;MN.lJ>CHPk=MY#'$'^hWLk*lu$NT0GpRdU5D'npJL4%7IiAXqD<#B^^Lt$ktZ#ic#-BXa_n)>Y/;@#e?YqtOA_KM3QdLcI)ZJr_Iisc&(?un(!<X!=:)gi"1]6<o>eiQa'a)K@&cD?g$"0m%'pr#k+KMTdBGnK$/c)S-!k$+6j1)D$;Jg#kH.,`1.#/SbX*gtM/1o"VPeNqCUY?];MT+u/!jNR3n](h7Fl\1arLR!&C_Xb;oLg^X%cS.7M7Ie;NMLogg!%GpQ29h8Jb-k2#jbCW>oNE*%5tY"_SYTsc\$c(4OoPG&YnuqMPmqu*[Q!;j>F?d@A9LJo@"&iSbWd[%5-A@X%W=DMrFX2AU870?`<tSDi^s1$b.Xq5CGIU"m-qU*fLJ[-`_OFtg'p\UX]O#h7*^%q_g4HLsC(=?Eq`3386=*g3MUmB"+ni,PNDiPf%%Md3g"id4hDoF1*SC\.-dM&OIfXd-L-<a@F3RqnS%]?*;Ym'6HfRpOG]\XqJRpG#bj\TUibC553::7#mhNjR'VcHZ[]UDXh&s+?E%E>8tDX$BLikSCK;W^'B*`h-M#iS>5XZg5*%*60%JRT@AhT?CDt-p;XMM66Y'=tbXRQ^V%R26D;_;Q1ftfefWBNY\$Pa`b!t3PYBf%>:U\9GuO,-qD+JF_TD1G!Lo@TDQ]R0Ki:"s0:@GH`s\0c<d-'JP@91\Q2.=^.i\pZ$oOGq+%>-j;u8T)$7G^,@7=rtq5%O<Vjc7S%PId$rWAS0SD#W\M$:j?;;b_)1To6dmVF>K*$7BW>Zm)rOr!J.Qe%8X?(A/Wtk'R*p<sm!lpDj2P9]8t5Heh1h3&q*Q=)j#*ni3r*%R4D8Y`sWVW7;TCpi_&1ZR^"%ps,:`IU\)d(-FVLP7H%caGH$G,?c-(+'G\8(p/"CQc*:G,NHP_VAYIf'Zr0QM+0`1[eP]tOq4cNI%>0?5I2km`,Xc_P)C.n,O<_u4n%R3K]eiF-ne.gW?D"kLUL$70-<0A#bC*-M,.Ff?Y4J&dOZ_71&$`G7+]@^#G23%[ET4t-^%,9Rg%Rl[PTXj,k"NiZs'=Y"?"#(B_f>0o,n?^l]/3]Tb!bPcfFq1\k1lan?\9`E&9HVIO=h;<)KXZ]9mBFSNQ-LJN^qQUGUoj6oBcR.(7%Oj@&4JTnA_2]D0_Y]V[<Sb$i">PkYZakKSEEpKPRf5BqpgJ(mi^Y<eW\j#+e0rZit1pekB&s<;$REI/%,i&jML]"De2L%fnP#n$\%.4AG$Uc/J.f2in^k16_>hNe3P"t8$f?_;k\E_^7-R<CF?r!iAbeLEjF&$hpU.lq/]OXa[VjeMTZ`Ipenp")V=b+`e*@DiB7/R9r+%`iXC.gC8p3$J)sU"fZ+d8B/cqfqY.&7Bu\tl/(S3lbCLRc#:1r7##%m*`eeuESEp>X!1f41p80t8*:Z./KK*D<p^g<N+HdiE;RcF%KP`]n97kUiWX,j^4%7IdU+Md>jDHr7`9FM5aUppkO"84nkhMoI"l@'LC+a7\oGV+o[+.3O3'\'XrNB8(>:rT/0AuWM\$1=D*,M'8%;l;."Ubf!u#WCM=.E%Ej?>B/MQVLX7j][Yj(?#]s*<irBWh^Aj#pY@Z2-i"B#up<Q=";3<W98"lJuP<0#1GXk`n&J99MerU^L^;u%Q.iGdXeXK/g<Yk_)Ra`gl.;5D4_:,*hM4599__8W7V_HL4gGt\<?sH,4b!+oZ*kD$*ECWgBW>C=L,K_2riN9A_j]0O[^<L.W\Q2Q%)G#eOf%.-.<],=$N&3D#kheQkArdt`[c1Id&O!<oCMKs4MS]QXj.ji`g+"$3YH=7>:+OgG<fDYZQRVBCJOFt+HY$$ZB\E7le?Hj+%cRZD4nkgp0)Y+Z1/\XARBAKW0J$m8]V)'s3bnXO;19Cg<j\Slf3i&Xj6tK@FU9\7NQ?=37XC4P8:K-sDC<!_tgX98MPu$)o07d`]%R.b\@_I#??\UC>J"'L9E.D;=i0HSb]Z[#B`aA,(@^tcBXZb]b#Rc:V&1RtMS4Y`lM>-6;dl:]<837bN>p8jPL\Z'9]_iVW]L-[sl%k-c#B]3=G4]!s*,g9(]tn69Zbo6)XD;EMZp"D2B\lZ0`m3_6s6rP%'U<TV-JbUX-97"<`7@1.I@?r'ER!0(hBQSmfD=iHR7k;p\l%]kr"8OO'npWod#O'D=8[Br[Uq6`Oa7&(0S%V/Fs/B7)N]C-LdcMJ561p5j"cCH6[-1YS"@>A:"(Jt<bDC-.u.F^'3!1T?.XO36>+%]^Kh-p6e*/($&OINLojnZ?ddB,IZ$l#6g)\7F_Ip<FqfLhk-*d*nOW+AP!pOmsG1!R?jj2<qL\^4UVYp=&#22.kmqR2]'_ZQ@J9X%h<oUWi:B.mVdi$IJC3scV&J.?O-<3D7^>O=^jOMn'CEsckOnj!-4GpTo.aA@;sS,r,`_1Tml$b74h3c:p3"$c:\^$DM$S5*7ie5h%c`<b1p"4>k+g/caD9*iuNSMJiU29\hh8Ti8Xn4u78hWZ_M6)(KrpgqnZKHLNrDP$"b]n%2Y^>]^+nOffG?a\7G1X.-419C[om#=\%q+T;4'AM^gp,W<Bn9s4k$n*o8#B=r^"Djt!MS3-08ci0`]Uf.ro+cR8`M\*EcUBX9;3.<DnE9HEB0f'"q9;SM/-IZ[j04i#DG[2H%d-*k#HHu>aSG:G+0jT:,itj-PlrK4qmQan8YE<]aRbkb(<?>npel/6%,]kT5NZHZT7mCFjI`C4235n%=dDfL2AoX]sP?lnO)LBj@%g!m<=O=>+Mc['*^F,jVR62Zrlq)N6!BD(u"j$r`,D%%D]!a=4FG1Urc539q8cC4*'SY*,]=$CuOFTi^j]>#:Gqn(h1rJ6g8/qO&^%Soq\D9a]t).rVP+HG-H(Zt#XeT.\[f?Zl3]9jD?1KGll_HVMKtTEFS;3_@Z70DHFj_bA8/L^T$7kCqDV^W9T-e`j1k>b@XAS0L79%dBKnp-9^8E@:_=C[_IF8@;N4Bb8-X'CdIg<Q7Y#<)B%Gk^$kIIFdVVYgi*'OR/<SprQsO&gu87fiI9P=9=Z.Qg^bFncQ2H">OI81%pLB!UZ,?OeiI:!0^[:JtmOoUK0-0JY%einWqe^g9jo2RIrmKbSl>St)\\IdI57Tiq1\<M":\F@%:YT@`V<)bg`J(EXlP.Sa'fWm.%`Q]D<(HUi_=#P8%g_Q$=WArMWEPA3oH=a7SjP2OpDXM2Kd*ZO?ZFQal?9A4]1B=+)!-;cQk0<t6rOl7T\W3-M*L52+EudEq%RB@h%5jSnEkR9`?$p`S)M\Y(';08M,e9Y\I8(#"n!1(n1/=cf4SH29P!GMAbkdn=&lU"+FoucEgY%pTfm?BZC:=*2o[SB]bkdpCi?'dU`%Y(i?]V+t1Ykdi>i0@P';U[)AZYP$%)8(WH-FC"1q\sc+?iP4[e5hk1SF^=:r\f0ef)1]7R!,[4heTIR\lXEAfou]Tkf<k\l3s-$U%!t[Kq&39p?p@i$%QTD^\#+@RTO?*Kjp@h`r(HT,[G4\tA/9Gu>3riD>V4Ohol'n7Sl7&F87g#"k$9)^i1hkHaBtZiKrDfacK+pA.%64_N"K/@cp[65G(V#tGr5tX:2W<9-eYm=*"l5ORNCp?]tl2X*<<>UZSN&"U+;Jp],='QhkME1rZ<Q&fGkep2E^T07g%jGH=,22Wl%HSL.(:E?W[NN3"M:eb.nHS/XN_%'[K;]jQbPFsss>?l7&kPW_=Meq-TQ@Ushof@3LaAFOlo2[b27A#K*eH5&d&qP0GM>`qPfSc3k%i\n3gr]"`K\3qpUTC\Cq;5RZiUDDT+LM[e_f9=t8\JMrhbbiF?jSh,tgOMO@\S3RkSYFGa(M_'O5DeHUNoYZ7T^N%OHG4VU\N^SY%f$UQFpN+o(065E\>\hI[ES+k`$U)W1S?^^fZo:-c,ko>fgq%^;j=9N(6-q(XS@c9d'5Z.Y`sH[DmbC/g>6V^Wcad+-A)YHOgc>tR%r2suH4bS1]@*]irR1):ii@Jq*`b",4Z!2N&pH5BKT3K4l=en9O*`Kc;`*A[H@&8m60AE/0q)R3>atqFt$A@kuE#fd5$cMdj`%@)'%!>7FY_A5]/""=^e`sH#@VT5kM_hMg^fR?,!<;^nF3^p2-/C-bh?"[PmB+TB#XtqiZ"_q=UCj]k8H=a6837#Sh?#Ot8B./(;XuAN`%:_r-Y$rG`>7].YV#3`V%>NcJlljQ@e/9D*[\`crT$rH:!7^"@b#3a__9'?^\ljQ@e/G'-["3Mrk'l_6?Xc>!c7.$5hTnTqiNGbfT%p`:F,"6;M)g)`0[Y(@@7O?sIUkWim0ghOBgGsdpF?2!sdfCipo?CU*j4*`IKbPgX<M*q-A6Ro(Jb1NU7J!\dCA^L-r>Erp;[Yi\@%<b9kUX%n-m>9?29KR#`ZP3`79qN@6HJ`h5<9M6l0&)b*eL.Na#jj&$3YW<M4mDF=IDfEub:.P61ZLMVuo&^Jf!#=^ao)!7D[c+6H%FTDU#%jCs2Ngs*WEZIPmjVB!,_miX_C$RUSY%]mP0lD`EE2Y$`k0--'fVd_JMb$"tBpQ]H&T:jE$@t?lgH$4UGVh$0^0)E[J)gj?%1!aUq[8K,UL-j%e!jI-^6*\>RpP6rF4:qX/lH%XeB4\/mOgEi<%,RK[^YF7!_a65dlO)4s`5d>Y$u,$h8p,4MZm`D+=tE`c]T@mQ%Y9SnD6YCj;bU7YEmHZL21)jioO%?Ag54nWuf#`09OP0)f,]5*B,<(9OMgSa,7CG,T0Ar`clf^M<+;.,6jbDpI=de5ko-0@.6Q'^(%)_3fm?DH9+Z+o,'2Gr3i!#NXN$%H0U_/rDo$e_K:?7V9M[^W*SL,k8a6`Mt^QR>KJ6V=1LJ$('&WA6.!L^*fVP2Fi)&FD1N"ak.<%rKf,nXa&Z&AVM?A3trD2L:AQ*'pWX4N0nW8)^@4!gI`@C-O-]TZba(+@:$`G;^jhlbENlZj\R&ji)`qelgO&Dfj\eme_'?ECpC8S%%kGoW0dkZ^C5uDC>@M@bD4MHgQBp*:.E^m$F0`c\[TRDVQouW)[`#>@BCg]:kq_tWZaPl2,gq.?HEPFM=ESl`$8\LnRHfHab9r33%dCpAJ/$gB46c:+GcD^8==3)eHctk:iVLhqnT9A!<c3D7BN)poI)rWS92Jk)XgpXB++ID=HRgC8M[QI\WcZXmI<n@Rjl_s4@S9V60%\+oW`rX-hZ.u$&2S!S^q-Zg)dXUS6n67]Ac?5^K#P]^i&EEafc-'G^E)VPO5FaQO,gF=eD/Ldm09f@SOR6O\p:]g56*+*#IZpqO1%9Pg*@lB)!,r)c*@o0=V'@kBMp%*Wcj^4+qsem\8&N02_o+0@6IVF\.heB1TNDMC]UDI"F?!m7"(D:$k5mBYU<XIjDBm*(8e=<I1%%_cSRW5&4M\MfPG)'po/60MLldn(LC=Z>;7gh"<7T9c\q#IFp#R_eJGD\@2%BOIZT]enM<BC$OZuIB"nYPJpr%=OYj+5'Y&7qF4^o%7gp7#@9E3;I^[(s_t[<#2]\<nq].#qc"/Mo+`*l,[7o^Hbu/-=`?;)pWps@raJO]L>0lhSl^7M=.C!gWCsZuhH)6A('utr9#;*s'%NFQI82N34NEMfjJI@-gQh3PL0_Y]SI[rkkZHR&"eHfkrG)9^$F\Rh]HqO1[O5'=ZA@']0TZ[/fPDX1j!6NsZ+NGRmY7Iu?RcrOjX%D97'odF6L-Ai%#G,2,G+A+e>=@3+W@RoNqu\m/t7KR?iAb?W(IBkl.`oQ/I<enOX?E;gRfctaGf<k`;f-jMZ\`6%<$XIu$)[ZYcB%SEecVD4N^sqV71?FZ.<a-;5FpW$gJ@GL\n,Mmc33e]Nj$Y\]@;KUsX?f#_#ojmC4DerdAlH5K]]YFd]IA_^Y'MU\_S9gjJ5/KfY0%/Ig9TDo$5TA:,jOB4F`GFXkl$\\W"GX>);+]M?kfQ@%>5W-+V<AD54QmO@5*NZh>T]c-"]e>P`8cOE]TB8'p:s-9%T_m^EcRYR/'%':_a!jb[FbXer,#PS'q)3#bT@euABiT,XN5:4m:.UZ,Xp,cK?9/4i(bB(lZ89sok\6i/Onb^Oh&pAOEI9uC'!fDgZ?4<'K3J^<-,%e+VQTqf==b'V<WfZQHC^r^kf=nJg+6$kBBS_J$$g]H6G[C1h?i]Rg%P;!\!aGLu9u)t^>iNr.m.]n@o._X=sOo$9o*:U72%dSSRh%VHRX!?G+&Nd`CYL?%7Lu2>cQ$@b^F:K(B&XHuaSK^Qna8WW(!t2.$q93'c$dFqe;i\+uK^>J5ut2O.U[J,ALoT21?h93Cd:CAl-M%J6gQTB)GH1Xn`;/s!?sAB&@Ct2d[4jX&cMEr(Atf?al#9d)`nR43o,'?fHR:h#C?cPcopd*2'Ptj8,4hb*N@MlD:Y<ro2bd=)W!t%ZH=3)Qfn+"H`R0Z,lT1G%spbCi\c`e*VXp*hUlTF>4kLsg0/a?*oN(bq&d!!*Q"FEiV/ign@>[,T4AJu'qq-6pgZ0s?F,^cR]p,+%Ph"]!Z!$hTT_q*Vr#r0;'R%g)nt2-2T5'/G2.<S!L?:A*81tKWeuMXWrA@ejYMEW3!V)f;WTu4VT97?1:);+LrU"Oln%O(W^3dN,%qsKfcP[Zgq<'T%6p&gm3H#icNo^R:o-QbM2;B.suE]<>\G#,a#dA$WV,!K'"bF"*$!=NHG,6GX(+=\GbR<DU#=0(>+8Mh>78TF1Z%RGt61],c'<Ya_SpL`5lFXHb?"V=k]08H!g;j\m!9?6V6VH6dNY.5D\MA3HUtZS*q/aC?NMhC#Ec6jJo@MPk%:\t^M"XFm1]n/=]G%Zn+u,q_;dUF;1(7c1.5&XW!Ks$f*efq^qn^3s`jrai!07p"ROQqn(%,+83IDU0liaknHM[Ee"#a7iMErp:iRM4aHqul1T>qO-cgA%jo4_Iir;aQ#8SP)+VB$.g;o]ok)>gBR^<prVHUJHD$+hWUp+;<0#p0)%etp$.E6^hV6CLdK]K6h&bT&3`2\GHVbLGe"07-)g35"@%$+Vi5V-l&6abq:<\=i2c_<n)GNJeuS(l_]YKL+9F@9#>:%LUMA4Bi%HZ,[2!.r6p78]O#VN2m'k@ikJ+fI4?l1Hs*ZM=n+*^rcN:%JKsu?]<h$d^+/O\o"Y+;]Y3("G0,mfp&t$uF^qWZ<TNsp.K.\Kbq_23DU\r%7('H6@dOP+NUbbM7`6,gF04p.CCATLS(^i\RU=@a%S9]q.L_5#9bM7`PnCb3.pQ^GHra[4d+Salj=0@A4&gjp0akhIem/IUffJ@aMW/J9a%PD.m0`tj%R,$63e3m?^_^nC6D,1T8q5=7B%4go1r/-!]NRHf0C5T\H?a2I/_,o4c#?!j\@ZpRghF"G?JHZZ!IAr(eJnSJ%"q$0.A]uT""Yt2rWiL-D[bA3Oe'Haeu#)CLp7l]"r%>+Y[,%<R""9BE:)7-FAfENX!J\P#7K@SMT]4BjVU9De\`7X0)=:SG,@8jg'kad\cD7^nu_%HtYt4*k2"e%U,!1l+8j--lJ[*%@9)%?8)K/6[TM";%Q&8*lBJ&5upV$Qkd5upj9`h58P!:W3gmXR?M[LhH@7AE4Q++CCdQ@k6k@_%nYYnbddCRf?QV<\kG#ih"W\eJkNd>%=2;Zrr!X^f;4bt4H9^-Tk@_p8K0O-QaP\LRrOB8Tf(c\eSmQVaJ:"%)lc=+-Std7,53iT;f!KH'o.CKha2V:+XBc1Ko<&sTI=!f-%Z.T0%Y4Zp;2NToNQ$641"m;E;6,eQJ%(;EmiC:;8H=]eB?oP6A8%F5[o=Ud:<\RtD&[gWi^<ZF:l^.5a)h#oC8UE!E@sY0rMBQeY%;E3F'O3KV-bQBb63Z%N8HtJ/N)+Ws:SEi#YEi$9^G+`sM$Ko?)FA5m#<Wh,UO19iMjJ/hnT[`PugF;o14MW&6+t'bbLHlj;1Mi'_%Y8W2K[`"QMoe:g8-/4."FoG'<N:%;05.GnJlOgulMWQjXTgq'HQ`8Tt@08X`Rq7k$4M0.ZA&S9D/'jKC)\e9%PD9)8LlXU.mCS'k%bg'ikI.g(?Hc,DslRWr.)jEt_*cYj.e%P>7bAr1'\\Zq#]S7>L$se^6f<]O<#Nm>e3eEs#r]gRHqSP=lKfuB@i7!o*g8-Y\[;p+E%ZNkdF&F(QbX,Uoaf`A4tjoCs@j68#MT5)9A)/HO]H#<m04+@,'qci>Jg/?o1H66gnQif7"ZRcSD/E.60`<JpsfrdL3SCSDJauu%,%ofmf3E,DH)q6g".^Bf>[riWfS3HMJJc"2?.Kg/oH;O8JXT++U[\lN7QQZ:9JJVj%t6^`pRS[H-L(.Nef(9N>%WDPh<]\7cqKWpb+%fg'!KX_tTD>\&?BpH)pr/B)E77uq.`b2*[>D2g7ge<rfh#N%cBW-EJ[.^-aMSIk5F1KEGCeA.ZP>jXl1WPiRd%O4c@QV+=`0S*`o%,au"4cmD6T#Wo5u@AA^P5J!'@[;X:>6G6P=[RHn%:SDG4%U_Hb+X^KB]j1rjooL>5P:%oO@NkH*a1,l_%?GIG]kfmaqqpGeBCYJ?%L5V^n6^JV]StVBMX1YjppQnnOE2J"g=4-<]ZNCuBFXo-;G"H[&k4hKo$Ys!U2?bkSed?35Vi+d!([N6Yr:JZdNW/SKYC1g\Wh7T;%B@b@h'!mijHT9?+n0gJ4$ch^12d+eTGtuZYUIEN8S#QC4#@9XHgCO1m#l\q^Hs9kUnB4TDinGdVPNDbMgDBPr<N0U:/T5CM:"*,:%Umo0jH2N<Hq'_5BUD;6;rFO5gW=9-2q26>'[fFC!YbhV'\=57F+AQMEh"GA>V`;70%3lBj1'=Ar>aTh+"(T23l.]g\q&qiERhs+2%[VNgr_L*,cH'[4r3B)_tT'e..-i9L$n`hc31MWKVZd4UC_WTDCPq5G&:L[T.k,U$sr,$4?g-=0H,NKU0gp3ITj3sg]6He`:4i63*%?JYnRlXVec6M#fIKt_"\6j&MK<u.C`0Fq79^%'a&n7'XT+?R=1@ssXQVp9ZJ>'<ofCg((A`l0fE@BJF2I)+.*[QbH$R.?VoS*Kcs%P+jb<f(R\!7cM[V;`G88"T;2)W\5OiS]./VL9/($S(-pRe7F;1Ga5lnA'5<BB&-LIQdqs;o%>:6HE4Hpls83p@;@qPL`<b@VrK@&%gh-t/k;M%u**+W!5B+j]fTqT.$sq%kKpcE$G$*e%m'M^Qj`.HF"RkT$(--JgB*lFYHTIY5).B!R<p6lEc0t-,DiR`Cfk$W\pKT:+%elL,%1T[Xh_40C5fX[psefg%%8(^i^7HR!'X2@P"ilO(@;,s&'=KjHI'b2c<CG#7gF-4Lp[65j2_=X>_f@-"IW)l,(-Y%?7.9g:_%3cr67qCTnnorE"63:$BGZs#tteahAjoOun>M$D09]&D,*'8L[mlhBXE%W*Y5h/_!<$$q]ZSMojJaETTCJ1cKZP\kcpH^"ohYslgn%!hWn]KocQ+O<sK(H,)Vdf]!l_/)cm>VRBtDA54\X3>2lC&;+1AgC^]1;ff[T<bUai^stoXg4G;D6>?J[Q_-J=P?*1]K=AOB40H&6%@/0bRNlck06hu\-R60ptGP:k/G9OJ.+GPmHBIg?">rLYCj8Lm/7c6I&3[)tL&$G"JHuaF/?9DF'hDj53$b(:9nFRZ8[QS7V)Apok%c0A[.@PWP^_hMY'<4X1K!Oq5J058fq+[7LaF[D!*>7Ir7du3asB*^;+hJ23F`F*c,PC?bW%`d^C2u+35cD+`U;!0_9DPC`1?/]i#%4tl-hV>k)?NsDf1f9XYidr^R'ht-B\4i6C-57Kkf1BT[6%.'I%jWFKTr&/`J[7O/gU6]u*eP,GKQGMAg?u1^cR2Z0qckjGkeV/(G%4ZDW!bNW-:'gSnIeOE`tFKh,;9[B"UA`aib?O-)@5L8Eg>m.M6c!UM@9.9\P35YW0rdPUAY+^0O^YccDEt:E4rC-YS7GP@(^unpL%nFs,Ll_b#'UQ3NIoVP)+iMN7,SKi_kY":enTq+7l9InVsbWTUU4>VZ]MU$)91QIhB:(.D,`+gl91Fe'\WV`_CPn4V\hB5:0d"KnB%XE_.FSGqT.;a):YMp2bQ3>Q:E):N33NT`_:4c$GT/9rc<p=8/FVD)q3/ahQ_F$)e@QMJ,*_?;`cX/Xe>IUmBJ/fSun3AJm"Nf]e<%H]-)'0LC5eqWq<p1)_!K`OL.D[/6B)R`XY^Rn)\fF0o+aO::`qrkJa[V,83R=F55EZAJ*05F(WX=ZN^'+&*3gJSB'N'825&ng!W#%l8!jqa\2eP2.$=<Dd;QCrn@-,IYG^^4]h?9ZPLQi`)$_j+pan";Xo0^Rh1T`0t!n=@gp\[4gd[;hA$N3(QL3mUY:slHgpd3,]/>T%*SA@__)[m*5j/u85NtoaFb!C("ta%bYUk,M'[gBq!-RG(S)Nsr[@_enEc\e?1bB]5h7*Q8D)OcZN#SP:<(UAo*WVG`l_#&rK3d!B%gmQ(I'9>>G4h^s`/Jh02(jAF<pQ%0=Z!0[>(g*er.j==X'=ni&KK2up?@`[AG%J8tJ[#qjW]&qR$?Jj$luQqdeq"-OWYNB.(3)\7%B?iJ[c(h:[_;pa+UsIfM"jWD516"D8H&8Bm,2@K,C3E]1J$L0R5C9eaK\o#T?f:k?b3a0\ImRD\.TDeQMq4q\P!a\&'@t\eFZE.\%*7et_Es(FE`,"jb#_5&"pZ]ROl-XC/kd:f1S.3fN.8'iFr-_dX-eiWuh`lj=n'F`KpV>[qd\$e/pVo\;X@P`kfXcd[X&n6i3lBhJ%@&G6q_tIni)1E"RS^FMf7hrAgJ;k(cS4\B-3-)r<+5tGnn99kbg$@h;GM=RnU!QT-,OZ<*>bnpVE/*a*H_?)IKMU$mq'`,eATs$)%8r,k%2;)_BZ,77Jg&\?)e!qqN'fKp$&6#u`[Y["#3((A+Ls*fIZ\W[V0I'Eng+Ha",8flrE=!d*@VjFL0Zj-2^c`L/QC>96Y8inu%Sg2:!G/a2Ci]8\HL$%TD&a!;rG0MECE=/n.0DEg^QKIsbA/Okc\DZ2rU*6!C3$t210&1OMd67408)82%FUZrqNH"WTSSZ/,a%HNl%H@W.Us#;eK;Y.bMce<a^\*<BXo+B^UJ2hWU',.,5#QrIf69dLtke#*/F^Nc31pC$$gMl[HL3R*M]E*J?#6.Q5C@dt$QdnLoj>llq%*L^[9.r;/<3Q"MUWa#gr74);"-38kpqpBAp,iF3UIUP:aJ`_osG,YdV?iq@U6JVL!oi^&`%FBhg@:]OPdi6l^02sV,pHj8?rB)1l%fd9P5EW%NnnkIgn<#GAOI7V$H0Z$oJ6De^\p?T>&J"5,eJbs,Kipo%bpM:MA@QVWr(4EXBK)&1!2L>q1!t96a2%QNr.I_^kSYqO<%jt;=Aq"F@UP68PPI=\::'TSNJF#s-t8AT)^cGeQD@2jXtJ,\+iF7up@aSIsLg/]nc#H?N.]HbE;]R@N-N^o(CNo=?u&VT=E_gB`c%,&er@9ttE2EVl+J^@S-KPPClM!CteS\Af#*A.3l<!>s^b2!A"En4c:5pL>c`;i:bY.;#EZg5,t!W<Qs":CK!kOd9[RL=SY\B*\P6%FGqsCLLK/PYQT-JNG--%X[`HHAugt60eeB+qJcjU05mP`r+$k))@T"CCpluM`m53f91;#-[H$!mKI&3@'$@cD<s,i"aBYp+#L=C`%Lr,gk^P3"U_U51<D0^eO%1I!;H@F_?6e;a,fd$3'Y::!d'VZmD@n5dIL^"pjC_Xcm4Y5sbkD6N\@tcUG9_n6=QoKj^R:0QQ5WiKr%>!*$^KfrWe7ReZ@1P7dZF3QubjJ^ZHk7KDDrgFC5WX1D2>Ji35gI/6.KiL>[Y0/CJ)afLUSAhX/gK[sN940<lc<Y'l9an;Q[YA87%fQ;2R(YfZfrjg=?KB[+Q!;>RfVRYH!=o`<E/JF;ucZWHfi`l5@o`6e?WO?,FfE<7-S!^p@2:+:W,8k-@S=hqj3!Pj]^%WQHo]Quo%kU,r&em$ZKl8qm&@Kob97ZT5tG:GRI1]ePUclKC]!>\2V(Q?(qQ<<^+d^6SpP'q(djM:BV')7;u46(H!%RNF]RoZ'k:Dua2h=,R2%$bFcYm?oRHF>q7RU,-l]@WMG7ga`5=bmYmQhXCgB@,Qt>_]t\",FDJX)J[(b*&"@D?$_0@Ctr&r_L9M;2D4Y"1Kgh9n0S&13U8V"%rG].=$@mX#0q/u3@4!$5#GIH1\tZd^5ub*m4dth+Up/c8ap#82X0lW618`3ETZ?^An"N8o`A#VXJ`ckYM;0!u(T>D9>B3Cbm^Ucm%*VK*nKXTF_6+@0"l'(,On=Ao4")<%597;+/S:tb%PV"NLd`^e<$6@?DGu(TG#YVo*JG9"Plr?NLT=#)%d)9p(R$^rLMXMQPi(^sM%R<55o#onc++Dp,eb\SCuX?Z_'f<_ULEu$=`'oVhR&<7OYna1X1V5XXHq:=e>EeP#priT3#;[jQ'>,g)J"kK\]d7Vh(2]W_Ds4aSD%7K=itF;gg4@okGZ7?cS;@3tpPgBc*OkdDNe"qIb/"uDbE%sToO't43Hcqg/8Tt[/_V[uY`6O9@YB,MtCQGE@iD9'05#-@7^1edOd%*9Ui?Vu-dl*^lUgg#GFa_Fg%Gr6]H:jU8+o8#DiSH&Ul0V=iKR]+8_=9+Rg:B=GdgY1:@PdXb?0)8dcYk:1Di*#K^O$.-sm1=$Ag%8&rs8<ABgu8+$K*3bn'F>L"kF\?ZS.5t-:H!G7WH^>*dsAn@M=Q1>n->9fV.JEhZJ?sNBNO!@Gd??#>j%UCAjkn--rD/Pe3rcS$`%3enbrKuNZiLMjQ"hl"Sl(P1XA$OGk:(U&Q##M8'Ag'W5Q\26$nCLZh;#WBV+dH%(Y@'eQK0"ZR;4Vh*s?_PNm)SjON+NS`.CjoFr%/*I1?4T'=e52'/q)FBtb<lMUncBYAS>b$6b`TP6%Xtc@=[(&fo8=DhGAVmCSX7>ql'ms'>CYW2#l8+JRr,'pQ$?Z"oN]c3BT+m=f%?Z(e`D-BGm$jhM46n1e>92Kqq:>PO=E5m;&rO;OU1%?pradj\hH#8pQh2_;,L`LdZf6Q^gPN=[#V8TLc$s2-VGD2h?Kf@W::)7fk%Gh3e%*_CtMp[.l:h`WPdK1F93=g=a1e.d*IDOR(9-[a>+ZVT6(IH!MfY;l7&KiH\.qD8"dG]*$ZGIKX`#<N7"m$"GJ#>4t-QGsm!%rU_'EUId!&L1mtc.ij?4VgDjl9uHBTHXOiuIXQBnm>UQ;WG#T)qYc"t[3BW[-Ts3!4'"A\*G5_>=#9qpH[gm25ZrPh#"JDSk<Hh-%qri)Q:g>VpSI5,UmV'!W2pCaIM0@'+cDA@NV;o[D<XFKC=9bQJ3]>K?#5J+97[OJaeBt`Hn,Ra@p`?"/pN]btMm+R-Jen=/I?\64%:od^*HHe4FlrB&7[QU!7gO<A*",I$Ilh;I1M+<V<`OO2<eE]iO:$]?BkS)<i>G-EY,)?Y`!;iB$*?n0XGLLH)YPT_J1]j:NomV4;%A-I$RQ$bF."^@EZ[A.H(:i!ef(Z<Dt=G/i-Nn,OTS*_2WEU2pW0aMuMa8:-C32YA?bcFYQ`9hp+7llK7E`4bOpVj=TA&RqbN^6I&%`bu0fHc12M:0XEqd`"==8e#XRRTL94e0t6<4PS8SJ,S!_)1BtW2".TR)h&F&%_hR<l<I[]q\r:XjR4VXV-UhhrpH*emksT[SI"qJ%dZlR+fQ*=e#Xp!HW%89qjI7iZ&5B+P_Seae\k`Q*\4cc%jEU%leDAmkdkUZ<i'-/31)d<9,hF+*j7>*rW"FD;-dHM>HssmTmu@I#%X5+osXs&'Q_K=9<M#5sAkKmdT!m\`<].j]TCU88V)+TPB2"tF.;N-EqM).?*j6dPSq7N(gkVu6PiY$If*^b6k9E08:3[cg2")QpE%"$7tr.BWdqcqdr1-)Mj>2mE6TLq)B#AO0.sX)lYg:3LP`OQQcAaO_K'0+unGT=R)0-])'N`RqOMAE8ZJ8Mqr_q?ZJMpq\WNH;:gd%MLu5k7Wos-4l1S!\,F0K>#%Sepk)'s4t0M_$VF-aOjA''l:a)[.Q8u)U&A<rAK]c]>s`eK?T[aE4_oeg#/hcGodoNW(\dD7e-UN,%$YPuC-L@#P-?E>'[Yq+uQCKcDhWkTo2$9$G`luk<3d,H%Fm7:EA?-Rs'Ugr@&E9#5S)sD\4R0Wdc+<_(3*_Re,0rf!TOZ)t^uNu\%h+'.>C:Q46,opF.S'[ofh\uIE!UfPIVtP2[3J5F$`"CC`(r@7?GS(+:$U_a\n-9m\@9o*_3.AMih1thm1dqNlfa[,BE@FkEl1dJ,%l3Qtm5(hW%&t%\)f#i4aCe\[[R[P.>m/SKSYh1I7$$jF\'IOsY9F&ao!XaJn65k2"r&;Q'pHc/&]iufdHtnEdo!Sf$G"$-%dk+=$%NlMB-3FoHnHD_okGr[3^REa)\Grb$D^\Sc5<K43Ah=:(8e$!]WOrf.QV":fLALY;KK"`BRP&1?Yjp)i=6dBa!ipY,ed.?gGAFVOD%&l1uYL3unS'6=Whj'U4s/T7F@AKeLq$\u6UJDn#o-iSIUR;<Ff]QSg=[XA0,*WPsBE<fBDdA<JN20WRW`&as2C'W6K#Z"/[s"8+k%?bOD!/Hi*poW$e%!8g,pl2k!]JoU*[KSK2(YU)&GN?'b=bK8)gE;Fhb'(mM0%ij;kW3"N01k:**33Xb]47<oE3#rAW/lht&cJ)Fd%PLmQuI?)CO*`;f=c2u"P4/$%erWA)l$-=mXjp!,cAJkrWPd^=3%Q\Ja#"emY7R0,>YZ2ht%OQ94W93^MkXJ@1)?7O*/QJMh\a36S%,ic3TFR7Z7MB;P2f^8_J2T78bG&sWBQLq_sJke5H5<j'6Ec3R4\Xd:7S$"X2YA`%i\WLX'KANMj=$\E[=#kl&(CK1=p2m5=.0Z2B%#iTE>*;!\BRD-Jgf3Kjm@e@dI?CqpM\XPL0j!KMa@YO(Y6@,`!]X"a.Sq6>rqQu1Q/k(*=&Tck2K+%51^]R%"?21g5K$"MSVQ<>s%OFBeq-P*=0(NOmJ\,f8]3tiLn3V#[QH[58)mP_hmT,l)UcjrRom*eae=/AY1(7kp.r2RH!E(Zs<5cGn=)*2I[2'u"E(Dc2'%bsuP%YM.ACDlHs<'G<;paN;%;^GKmm.th;#W:m%ie1e3aiIJK8Uj2K;UAq4TfI7uN'B/EMm$s></Y!khT(O5ZgR#/]<Q\^1gZnCDpk*&:%.!-bKRBV^r]c6q`'6]*3B?@NFhR"6Rr.K\Ri.(>PkQJesM\gX+%'i&h#TM]mfl[(J#+CXDp?_"imhs?U<`bT+;>@6uf*_AcBs`Qe%K^Wg,:K%Dj``WE&.TdIX#OobeI.j('Th)R1V93W?GM>#lm3T5<NG-9Y`%=]H*.[pfSCEFr]kB_EJ9V^R%lR6U0gM\<2c.WWF!qN%%c6QiG[(gdChLS0_"e)-=cLXW4a<F#lo6c<E`[7Pk5=/Ub/bG-LiK.*o_T<e7KCIpA\#eiL3TM?hLS88-8q#(N;95q4]A?([WYe;d%US!hsY%FZOQRVDp3LT1;O;402eHVXt9\L59P3ppHdQs$<9oZOb!/koI)PA%E&/ZBt&bol:J<:A*5G*#WP80M6hCA>74>6-_B-.uM%JGklQcL5d/Ll=!)14>`:SpJhJr:>fX;%B-#Pq:j_8a5hR=4.U2Z#;.G9<8I&g(<'h#Fo:QIt"c5X/MF'h_?j[Ds_Mo9Hq,%,.Mhi%1jX>4W-WtaQu7559GfK<Tb;:#Y;%)o7bt$`I]7o0f7Ok@5OVT:?V4c*qL5.cb^`smO9r3=%(X>#r`_e*('B<:,6HidjBR9-(GR.W%ZS,'"6U+]RY'+H]S<T!8$$bhjYE>O^Tb=S[:Ptjs'`g^^&$moQ>KN#<Ok!KadHLmbmh?EYL)sejcr-+\A.\G@O,LpNe3I>R=3cRS%]gDMUFTbr3"'0t3YmK60@]3%6hN<*'dI1!YeFt<qf2,u^KN\p6*\k&"?[M90ZVI'fL3nZ]cM5=dH$b3-OaN1r5.N)Sh_(kV,Hc_^%O\hr\/uh$R3u$Z"%>h6['E?QM$"L/j9;6.r^(0([/-1%D_L_5+0j+_p/dCbH7Is<ePlP$%UiH@e?8'(-IJ8TB^[;Kkq?40kf;MSi%(5_S:UllRM?^6NK#aoU7&)JhY=]/gG7i6^E`dlsp!nK#@_j9^KG`APC7GeA2.b>up'3Okpc-h^]),5Y!`M-KZ+YJU*15fa%?;AH!%=l?;Y8.8-hJlN8m"b49B(JY$[DHlDV+m*ZS4cl=.EFAr:'U%c*BQ&=aA0EKX2nM.(+`q&nkCl0S.d**n!*(;B<.[r9GNO:G"N5aT%ET+i"dl",+AS$9a5"i2HT:P00\jJEDf@uUGd,X0+`"3$+V";>=o;m.`*C;$J!;qD7254Ml)73e28#[Yp4V74%9?EbujKWP.[kP!=%[XnW;Upu".d:puU8Me0qP'//HNJ%fO#S#rDA4dZS2DYp;pi.LlM?hi[4M]OCdC,`>m6&i)jQa<r:i2)C@[udoDZH9eG],2&#u6:/%m(6+W$"$_u")6aD&neBBY%r?T]j[#g6#%G!`p?j=MET\2gaf0^31*<d5RN,M".Rep/B^OAgW<I=Q.^Eti@E7G,'ns9,+k8I8.^pO%D$jg.]I^Ds?@jKuN.1sj;8e9)2+c0"V'(Kb<d<F0?-n6a2/_oA23<RN?m'5(TuX<de6lVZPoOkPolfO+@+Xr%!TUG9YK":#0ST,@%RB^BtRbu\/^Q;%Vr43GI?XsGHJHA.G"'aoacs+Md^LVDR#>GIt;?FUSX+cr'&HL7$fC?.%P6OtB"hupi$CQQ14El$J+2&&852upa%$H30&c@OQ73Fi^(jhY+sZ&!*USJ_N0eJ*PQVm5/[7CGps.mf@$?rg!XF(.S@rbl]Dcc$)N5g'@0kEfS8Y>qh.9b0)#A.`Xjij.P3%G:$(UDK)?V7"Y2c3mt%do./a/r4,`]`0Z$<hWj2Mlpu?m#-\igr7-.*FC%SALi?c+fj4s]iWeHBH?H#Lg6m^]Z`]k[Z)ack:r%3>%9-8-gZe5JgZPa!+f2)]4D*.D*B%XB9!8R"i0.;H)LJ'"$"seOOL`hJ!Cu1Hl@9UOVfZOs?A&u"59R%r"U*]UqQ?XbB(-1+V%N#HT%387=jlACD5'#!'*`6LLflN$k5F[gll$[+4m56Nc!4j5KV6OtRG!FDRJmSDmUa,?)lPo#)9'L;,O+fJ>%_K@gm/[oqeSo3,s7l^@Z%o2.[oVQXS8<Q/m:j#LF,]rYR<eDhW,0mjMt;I`BO9JuQGD+aSj!U^4:ZH__W(YQHROZ&7Q+Gssdf,_oH3om*(/.ii\,QN(EF^lZ6%/<&e0#`7cO-jkF['R]@XRtgFBEfkK\Z:_:C[#"'s`74C*BK?]:\Mq;]@&/mA!hF,/T%o5Ff,FV5[4".*%a#]X*%T)nj//e''Oj2r%=pX4b631$Udf<+"*Zg^+hKc'a\3?E)h@ta7=:YJdmBqemmFK9l"WL?e)4G0F`k;O1?os*$k83"UC0S_X;T%$7[bJX$F)E:>2),2E%F+HPCJEgcH70J1m&kLjB!Fk]P5c48/89J1sSqkHBceQs(4@unh6<YL1MoP=CH%!7"UT&+S@.nNVR:2!"MNdDe(OfbGm0K",6,%Nu%@2ABpVX2<V3X^&r$qdICFs:j83+NTLdT"k0(9[.SAMT@ig^&k.1)U>tHAU=ZJZ&C@<U=sn_9\fjh3_$X`8V]P+8@kTQW*E@isn78%+jak]^_pJeMHIB89G+/Q[/`$7;uDDDaWTa6=hN?]U?]]nC-LR,/Qu!!A-HihPlB![YrLK[YBK"5)U`+;f$^ZT#R]3pLs%2#hUY7R%<olE-q`mS:V:53Ra+4$;./K3ej8*$YhWU)9(@m\JTb-aZXRS_+pPQ?m%@Ar*BE-**Z=49$bE\ZnP4%C4+OS>''poejjq/,DcT3/u%#K5]A3pDtWko-*X8XQRcD0,888jX(h+<5;X)nLA/8RtmB`Dm`l-C>Z:B]44<r[eYui>1gc:)J_4DA/o$CiO')ee8\.k#<hb]MaYN%N(5&uTG5&d`KQTrJ\8-:>XD=^8tN[][PB3d<Lt71(uE)W0N]W^WZolS&N1A%1LSTRGLcq,4ckDmg-nB);5PXO@a\q.NJgshpFD;L%!s3B4S:f3uf>E)ZG0MAPdpaI1PNih.c]d</MCF2dd"KKX)]-hQ4%Y3&R1;`B\^;4s$;[t'QqdsL]MQhb>UHbE7s8r@AX#),2gD$N%<TMf<Qc[5O$(3m,8!UV_g$5T]Likq9Ag&rqgZIY)[F:LT-<e,Bs!0YKgRZ2MYc:qC;L[GC93C)7L3:&ANMC(6rQ>>1@k?^(r`J6m%8;TN/,D2AjG8Q(W[fqloY-sjR9$ZXaZ>/V;ROs-Pgr%,9Gg\TB#1KY9W@dTuL+:rJ!JFXIg7+ZL<B8d5&$`ta?iu'?Y(Pll>0/9C%J'b=+BYu5qMco*q#DdY-[Y-F6(]ee1LCH4UD)AIriaRUR$"9_Hj_F?Ni7ZtR%$o+8?>&FWdE16L`2?m?U1cs*U"GAVZF#4/+bg!0%e+l.-&Nb=TQOn!IW;M"apq]5`nZM.+-=-o``-f*PDZ<?\H<1-HU9W3T]"MCi;<'24NJe9D4B$p^@_Nb$1/3B%/p#lVU!%"+_n8+2%$04O!'p.G)Q@,Tt`hr8!nV8l%)+(kiP6b/nRE2HU7c<PGTs`PZFjiWJ+)b&_dq-)Dmi/0p-/i0:`:qSF8hau60\RD^%HGYqn]XX5%JA!oWE$HHg[1pkdq+l_P0h.!W,'O@k2?SKO\\"Kke&\/tDhm3dTncF=7mg,dR71F/FYk*D<CF)>Dqoq,8C3mIJ`Dg^`c&q3pM(G5%/!ahRJ5R]LHs.?_R6&Nj]:ag%AO8bOW=T,0O-__mEC(odea=7]c?f,?C5<N_Z@O/g.mgBYCX&oF4$;i8N.<P#n$>u9lYOP8>Za@@%0L(=qT)_."6BO%5G$G'&*(?015L@hCJSMVg?M4btb2%3=judp>#5XLXh&8P+X2boCDmT?B0Q%?2\l`G-;#NB#ShVl43-'O,@!Y9C%^R8QH+Gp?(-Fn_h&_&!+JXJO[W!5$d(lN<6L8PJ'ncS:Rd_:]Fp(3nS<L8b6JL.E,fq-9!Tqn]i2;>=G"h$T-l/";,G<NYLQ,R&U%1@VE-XER@^mT[*nW$aO7#]+dDbgI4H2S^gGKK:2WiMT9oe#;Zp^kLHo$Qr1n=5.5p/8F-$T*hZ&_-ETK:KA_24BS+o+r6_!k@r1U%JZphaj3WV=@31VB%60+jBU%cc&7]mnrTe(k5unkGVYu?#W)TB`WX=R)2=*C$Y*j,6W:nSNFa^3=+djp!NWuaMNMW_g4?Yha%Q;*q%TaR@V*kass)*C'2M^L]6Ni=1G<EBVa2[0QNkqLAPW@5#lJdTo%+U<7In%u%C\AMIeg'4dl@cr0s#L@XNkIL&ZCABS8@di-+Hn?%'%[N=E0qQa`1`S&k^Q=rK&":6AnN5U`hA3BCfUR.Z\`>cJ>*!uL*A+>3G,s[#-GZA\f'dC)uY+W?3"$a/j<]a:=9P0hCk>&k",r#LX%)K@q$cM&2RO7&Hhd+LM"JcVHo74aVB'7$JR%%a&Ed6N/WS]bD5.,p*Vr.GPg-g6.-gb'mePFY5-XP`6'SMiXXb2;fX/)aP:+o'5C%a(bI2"?'Shg!pbl@0i:^F!`7H5\*3j4;.dOHG3:iY:C:Ah/&F<\9,0#daaY:pO&1&(/e&L,_94%ZQSin6;cUKUef(0:/O'r(g19#%laLQIa_5C<#C0%$Hm:3fd:4u^lTFA=#setW=9Busc(u#oD%kNhd7mY#'>h5&dcp+qR3_/`]P+b7Zg%P[3%L]A]9%D_f"b\mW9O@N%p,CZ$bKu$Le^r1RWTb//F!Ue1Y"cNmfj%:mip]lQ&9Pk5r2TiLfpbr^.)`i[,(6K=-?3$3&ti?i(56EHKB_alL?tBPc'>!M_.*l%%0i#H]C$Q5(A#Rn>PZ81QZn!SOLVb(K;`3M`Rf(X)EN`da$\=0@CJ$8a/G_so@5+sjg#aYU]T#>-hCQi4&:iuO@*I8tVo[^Pa]dLh%4(crDQjBR(bjF[HR7+]J+2?fdg3>oL<OqI[50hAEUKbAp8n!&3i@U76&Ci0#aVfY#-fKtNn-8$DC4Jp71QZWd*$Z.ZQ`!E1aqBP]%;Bn^[T<?7-3lRDJ0P>RbJkbdhG?r:oFI_W):blf@l#LEEg<a5*6aAal8jLdq$8EL(<YP3eJ5)nE\?usKN9f[i9_I$F[j5MKa4d33%dh)hCrGa8\/-0cH_9Hq=mOoBnEU:&p%J_(NlJoTq-C]66"63"J.%m"l_@[H0<B7J*G]b!j;O\ld.2&(XnkIrl.A.f"?qhZ+!`>l5%EL7qAJE!PT`O@\C&Yt>[C=6OUP_60E9i+L&k-)f5'o7ZRN)p*KQ_=5)9t5i</VLYTVd5ZP<sGZ`:pk:.0^HU#r6_1ea2f#l)?LGn%QadsG"W+h`+F/JY130">QG8t>N+,0j.CS[BSS.UUee_d<r[&o@fRl`[6p`Y^,/M%dP6n%G^ReL&"C&ApE-B;&Wr_GIV1'Xp=.gE)%KXB%C=Bq4e<U_^`'5/h!pM`DE>S4]aoj'L1A,[hFcl(oM<M$sbIbVpUM#FU(=%T'@5?U:/)O@g6#X`b-ND%%C7V.Csig'C*_0bSp%^pD=gS'WY@a[Z&0G3?*nrF\gT#678R3U^t[/EZYPfs87EY=5<XVQ&JUgAl\(kn-kD_'WDU`"JuD?%c6r^63m$?TaHl]9l;&a^T.\%/bH`mjC/eC)<"5+"hqf&VcE.EbuP@PW[5@u7[L%c-ZLEoEFklNAD,;]&LIpe\<l2+a]%GC8J#29nKFuq/hjel<Ii3O*?U*,[A=:G%]:(!?bY_GE,`g#\NtKp0R?/F=b%0VT0\sM-DNC"iA=o$9)]H)^8j_/\bA)PU*mI#Q?/d\=T[?gMP]a0ufQ>9_Rq^lb'`pL'4rO/h%\M5G$Ml0hG-e'&KH9O,=Hh0SNg34UN(I(]`A:Eq\&"PSN_A/$+B1-,)aXfZ/#DOal2G'QQ+_:'nbrE]sh7<+GOi_0ukT0cn)#TC3%UVX9GHoQ8!ZZ>gs_`k4h1J"sL(`PA_31;YOq/Q?,dt>:`c@da;/GnXb-`@i]PSe`2%$/nV&U:JoYLANcdYqh/E/_e<&;C0?(W%G<%,\lZecL:Sj>hW!SGr;g5i@9q`U`f[a_ZAGkm;7KRTX$Wm$=H=*(O1I14Z<+n6Hg&`4,a5u"76Xl2bM,&e<(#'"cSg$!:O$"r2O9^%':f3A-&W=Nd>M6:>\q.O`QrJ^c?n#KQQHbD`MO.Ug.s0G/\tm._N!Q,Qq+Ts#:i_+T_V63hu76_.7IK<ehLSp.W@KKeH!fDj@d3_%)_23)W-t4=Y)+Yf'f2qmJ]TZ2DAPYGRrAR`mSA.:`QFI(O7UdH#575=a?/RXk;7H]Dq=c-#EUl0A%Ag[\bAAQ0rk[e2g',MNCnaD%`,u-7p$@%5V)_ASbcFgRj>XB29e'on$%),c_=29;=J%^rh%iKlbUdPFo<:rV7,2MBZgqXI#7MB'$L2k1q3]hm3&)f<a/XCL]ZZ0@%Q?H!5b/[RCEJ%;nnEU:1bhJDsjpf681'7<uG#,N>/Y;siFTTeN0qSs)d)A_hXA+sQ26*.qdhu:ilpT5=0B0I<D)S4Lqe@0O`Oi"6%psV4H6cFI79=8o!jKWeUe+6=n*i_jDAo!ENlR:#N2`)@UU@+)CX7Y^A4$g2.mWBb`Z\^sf2a]<mpscOB^Wf]:2n(8qO"u8?n\aA9%"eV-V7@DrD]XFK[-;8f)b,J?@'SQg@#O*gO8Te?K">7W-B`NNFc*,$4?^Q-RWc)=oHBQN9Ki0R!^qbYSqq!UaSP(pXJhlDRNf$c4%V)YcaF+IpLQe)RQ6c_sCje761$1`u^1nbhMA]$HEL'GpN)f#c9CkUrI:B3?":mROBb0eb1[3m][8_#<6R:+L/-<:c(r\?_aiS@sO%i=Qrm0`nU\)0s&oR$irBiY$/1%:L@m?c3c7$^HA`%:Nh#A@=3A"F3<EMG'HPlSK/jrjW2:dIMGp@LO(\VJRY#GLpfO8+$W7-J%&Z%_7F01H4J:L\;YXr5h+.FJm<7AegIdMq1/i*YjR9+gMDH0KbfKUZi,H/3%d/#m?#$&2:<uM#lHN5Ad5d37O0P?56;fP'ZG5MeA+Sq%dVeqOr9hL]lmQ'qhl>K4H9VN2))c7X?"fG==>TJ7`];_O[/.3Sj!`a*_Ek*@LlM\LRl>l251k!c`(N],%8ISfVW2JY7ceJm3,43l%dnZ'hZ;oHn7HF4h=80hq1X%Wp=u.f&%u?uaMQ^2p@sW?Ep<[SYdoAkt4>MZ'<[#(bP1UQQD<ok!`m4u^r=D%\7=!J:#mY(g$6?is%F1FA5YnhVs'&_[Q!\qSs-gc_*PgaTM4O*BF/0'('G)EKB$%8IHI<<%G%Qs,k7&Lppgc(jhc'Wl&:>GbO+S$3%*sVsR&'`S*kr:/b%ok$@XjL7\+^kFRD(!@4'RPYQ&lW\C_mNL`_=Up$I3mYc83,ma#$Y3=sMH);1qJ,t7l;puT>;u7a@'jf'Wki4pZ4)IEYah\\=rta-%=fAsme3IZj`pGf65ofnKdAE3k;]#_d\=*\Vf+mZFj;XP&e71(!jZ"8X1XLG%(nGY>>;NnTE9_Jee8kB*gj#PQ39"hNf=o.7:!X4i%HnDp9Cj+E5@8TYPT*:8)nggpl=3M_WPd0HE8GnPZrX>>'f<KI6kZMrr=rjjtqiCO^2R5XV>ISHY(1non+4FAm0^1#+9Ur>iE%_l4%D/rM>+t5>"B:M8Oj5dRc0(XIQosoq1E3!<o.sH+md#l]n(?FVaJag@p[];c;kk.$<\I8A&"R;p+M%e_tmen:N`=Ae*)q]!Vg7Xf.%';r>'_0>V>BQl,@&op!XHY`2$nZ[Fthf&dT3+oOLP@rB#!is1i:rDV/]RHdT?(G%V?+9H76p;UDFU858Jq>?g=;R6u5/b&1F36:D%;BFD?Y6D6drRH#EeKrM^lV)Oj(EC+OSr4#ZhpO"#22gtU,:*$X]M-DXJikq$C]nD:>lhCM$XU:p(XlK/12gRT?&-&5NT%GgEH#Ar%1:a8XeCZ4H4"efBBuF2pBc0kPo3cTQe<KHhna!pJYRYY6$6O:lWoGaD)HR8u73FX7X\ia"3]Af4JE8LRR:OF.MfuV:MR*?(Vo?jK%kX6Ij\4Hoi(r,jY!"d^tVgD5(\\rR.B4qu7+>tl2%SI3N1i1tl@i?lRr_lj+m:&_ZMPlq_ddqGcCXfL0`CUlG?G&o@Ur61\6,T>R%_I*I+p$\ra"0nf*+2UY<p1nE4fP7=ilL!G],;Sc7]T0$TYPVRo=_du%)EKe@plT9/VgX_3GI2hg'eQW0CcAl($7'Kn7XAkk_=)Cm%3G^e:_AO/GcrNJkmF]<,_F/74\*\BIQ)b&l(j+]pduqSETUPRd)[k<o;C8qLd^;5j1C:q@nXb\uAjnApQHtGr/HOA`3t)U"bEbpA%G$7(WROOU9@ugXjd'?"$6ZB%qaOBI`ru)8a\ktE(-.Ob!YP^2<>JQ.2inKu\mm\gbm;*q$EK(U:d_hjX)qZ$QEh"nnNMWDe.FuRn%5j%$SkRj7m:H`/ud/[:KU'H=d4=@/r>T\U1Zo).Qf\PWGi:SjS(WN?24\MB^&Ft"4ar5</%m"7$!gi<@8F/-UJe?h&BPbT(7NM%+%[rqq::'$a5Y#5I_ag\-?qF%"50_L4.(4&s8dE?tBforf@%t(,7Ei"D-M8=d-JuK[O+E*1G0:ptj0dgH@p1oo5QmsfD$mS@L<gStf%^Ya-]Lu@A_*0:gFCNO3<gofF:>L/en9Jf8*;9YH!^dT+?`&u8U6beZp;dX.kr!pBrGZqlBdq-;6[i$Stc,VZL:<gq#T5lf*!)(Zs%\F?#>6Y[Y>k9eF=%OQ1^dKb#32VG_a_K+iWp'iK[GUL^Oid='rUM=?o'"J_JBZ-W8i4+jmRV2E,&k$RumasI/QH;,L/rlWK.H)Z6%C4!BeJMl=$pMAOB9S^O9BTeOGbf=/UktU#oH0CU?Kuo^!3st_F\'[3fpfS(pe&6%FRbM@03f&t.6c,gsBTc[Q70@i2$DTpik`49"%6fJHh82p_j*@k#!6b%*G:1["aYV7-e`uuDc;D@<V[T61W)c.U9Yc?Kb8,Y9MW^\A`&uAo%b&XkI.(`>ID5fn^$_*D9$3-UEm#khl%iu/UD>%Tc$)@)84/[;spMFu!ZU6E]Uk@d$Urr"Fk3).s+E4%d!>kn-+WqmQ*?0:]eZ-J(`6ECYp7=hCSIJ)p6IHdO;(dkc-O:YN,%HZBaDFhjMa?P1D3:q0TRU(stY+`'.iTIR8K@[O'FNsuk;#Y-,+>V>ZT\UpRt'OH\-(\uu*P=rYe`EAOgMGZPNasZB6C&#dV#WQO1%mD.&&!:F]0LMp&l[QTO)]q9q'$/+*f1,W6%=G-Rd5/8rpR`*_2%QO)V)LpL-Qkq64JAD]fHXaL`1%#Lt%U/A3[#Ia:^T!6^[tPY:%$6lGr=_KQZX_J+hA8VcS4Rq39q]_9&a2V.CM@PWe5PO(0UgW1A1lPR$UOK5i("l:ZY0pE;rSpKgT?R_MT(JtQ"kl7s$QGaQE(J`q%ZWNK;QF^S0829U7Z\k^tq*oZ5rE54:&*iY[qm6-D$FZ1XU@:%=D*o^rTSYTH+DAc0,hA!9Z0IWVBr%IQNWgp;\Dj;P`Su.7,5Z$O%ocYjJAtjPh?o/MOLERqgC5?KXaq8C1S](*E7%eM4<u$&u(@`m4??@Z(]YY]MOC?I9p9lT!45`H5C@U$QLS;s^"ukts6.LbgcpJYr%5*=-L]4.gl.GUY%D=MW/"\54eZd6_M?P2_G#FduA#;1bQa*h:1C<#Et2#K>]=GV)Br@KkkIL=6Gh_N<>Cn5DOW%rI69u.1kpe7e4%=baijJ='?[&=B0d!5m<m#)$A@d9.K;!A61snMW'=.ZB"&$Z+Y(BV/jcL%4QWqseMb9qBj9b#Ij^_Neu!eUh]q77,bp"hC+qV_V]X%DXKV+qKPl%?t2]Yi"XZpH;QYB#WL.l=Y_TWX>N(q5[b;9e[Wl2ZY=7nRrG*qY0o$'/1U(IX#+;3nkY<nM&%e*qsdN#OL(^EB,0c#%/+oqsPdA&Wn@/V)/Y.L[E@DCsgJsrrpC:!!''t1SOqb^>DBZ01:`dW%.tE1C`u[>-b<do"NC@'S?_#7iTK)&;kU.KtOH2,$7QN*u%_01b+'MO.`QOTB,cLZVD$9E4c&15]PUWGGE2IBTMpgR(-p6CK5R\kW^%ctZ`$tHp+#iT6hUI4eL[=LVVKAE&]Bi3A.CcNkD>LLo6%bF+*SHSBT[*Rg!r..S(>)DfGF58tdE6_*:>S9W,n34Dr<4n,*I<%TagRi)a`4bC3kFgS\hkae=ggT\QL"I"_6V0?Wkl`>sEcJfdH%f`uP#rPe"@s,9]ZYD9.gZbLe2o<u?5AG1<!8TcP<pW$0@T4W30Ud%:Zqbg1YnY,G#=@/ci?!);G*,8EAKecdXm$&_Z;1P]*\(NX(%-;6e)G,Tpa^ecpcQ#9-]qgP:9B<dL3]K5S_0i&=iI!4<?nLT*;LU=.$3Jk3-o()N&E3r_!rpURHWE1<MA^-8$UpC?d_/BcYng"JV%L=Iu@DFIV!o8s3o45PKb'RJZb!(M\%l5;iR0T7?uYbY7id8blF782?e6^d6(WnfK-Q)!K.T.d>0BbK^o5j)$-1PKhUN$4q2,gPD#%.kB&89`=k)T,/PO9XGX(S:'RK__8jK^.ndXX[lJ$-c$qcN!nSV)%;+GN<>6%!jIeL(Dk,Z6DsnF'>h#bN_b1>/.f8ep-@8W\3$sF%h$@L[H*^TX$:9\#-f>J5ire[(HG>.6*UB`gb<ed1JY@ir<;)5__2@:n'5h5F[qr::KT4^u=GmBlcl-+`Jsd1.No[UP/ZmRJ*47!!%p9B0jo'Zjd^`#I,a/!\.,CEHq-BKXkABt`<>9:+,$Pp"4PW'8]N5'8MBm[4+kNPi!0q7R_fP&[;EHjBR"t*>olp;;S9U<Eqga6j]%f0!J=CDYdu8N5-M(E@K?SSfYA5$F63I+A]&8X."8gmrFu_?6];[XiBtHD"jd;-jlOBD)_25fiI8a<QQq_t`C>c:[ME\Ch,*U_um9%opA\Nl]Zq&F!>cC%8\XE(>381Bt'd"+Pt1l=/kr)O='*F6s&Nb1@p^6967.).c,ma"Mpa0B<E`q'?/DhXQgl_nirI52'h]]:/_HK%QbAcT-@iiB#79?oU?YJTi_;BoQ`B7i#cT`/"/l9sNsrBb=[@M/Kub0\KLI]G'1`3.jdVPXh8+GWE8Qk51gLN)_7<"BOjD>/iW[X/%,4KbW'$G_6ZRLPr2/a*E+]d$:O>!Qs3lK`Tn@D-2;?Jr)9"_1C9$13ZrAsU(E^YIC+HGru?Y!R1o3"mZmY^=MDUE3pbEKCJr4IUC%$&*8.Oj^6"YmJO[OY9n3<E.X&"iNHTiKeK_$;dY&$>6/u;Fm9[<A]:f0I@qg\T\g-^cJ8s.>UsU5g*Djrn<a.#%rdqIM6l:ct0af%<Yq0B^:^Z8<#\@oZk2Vnn^]FW7.RL@R'3i8`84^Qb,?Ek3M`usWifG>EcE\9"6M"Pl66r(b84u@/_.;Tb,JN:<N3;Q<7`8obZAn3%3J1hS#\Mmr@RJFlpqlnoVI-&g%"HQSSjd>G[7)WeL;/l<kW;)qZ\cNOR,pV;>PsMi[_c=Ym#DqMg9oeQ5/hGJ24?4W=uM<+HP`K*%3F`H_QL@b3\qjL"@gBUW`6nJ/)jg%t`:"4N9aPKJ#^9asEO(Rk&2R.cnCl/hbr^[>Fr%,X;8p/<7Aa4jClLrt5\X1"Zh+8Q-bNdb%-^@Wr,VIpKG?.IK`A2eh*,(LXhgMBD'6O_VSZZ.NUo`A0OBB?M'cNeQEMp2PT!7oW:rZ&DJrTG/GR@tYl!$fL=:8'f6Xhp'I,oG<%^TJ]D]aBO,O'_j;NS,[0K$r]L*!-u\5ukbNA[GY\>[&SOYaSU4'E-fDZ8U-u1!]7o=hUtDM$'eI*&ni:87^8O_Ak-X'2J,4V+j13%M,E6GKa0>c$eu[qf^S'(A:V=.:G1/(>/;R&QGP-@><CXW6?./hjE5sjBHW5PZ3B@pGJki=)6jNtEE(/u.5,=XNu5cJQE14rA5l`j%cT&D6TsorU_QMufT3$149e@VGT\,Nc1+M[q)9jJes/$?d.t(ZD9W"Cn<_[uFin,nqZ7?URdTi8Dj%K_iTuV!a%5_5$?,X=\7d)6]%$[:p<pR9](R.hDp_frQ$JnQ#"p*M2Nm7Mo<G7E*!_\rI[H(U\)1$_hiF/UFIC&a_c_8"S,`J%=GGkTH-;Q-Ss-hB#eegi"-Z]sNL%>BL]9f+hT`o2IlP(C\(u@"kh9aO9\^-f!`93+k^t:K1c!X4,cc[EmdUT/hk^FVj$nZ`"<)^bmJtO=P#b_foQS:S``8'Tk\S?"pn$%-MDWoUsB9>^iQ03KRI\$"I2iEERa;tV&YGr>"L<_-m:^dWo11h-[!3E6LS?_`]<u"+YjhMl7jgZYm0b,UXa?E(_3;`F1Fu#)F7*U%.ruTDpOi)0%lbD@$3i(C-[HsMT;L]!+`!eLa?d-mqf03XW-"%UdHRuZ@ej<FT3%0H3Eb;GS1^qL*'+BD0.0b4b]bn/]t>3i7uObl%pG?"r7akL&[+%R1jjo&83J:-Y]:tTK>HLd9]%daIYVGSIZ7nb](A6WP*VJ,&4GQBpAlR,3U4IJ&[s'ega$mkmVF[2i9Zr$@OJ;li%)dAC2S.2Q>@HR&eO)gAkdNq+Q;,W@<mRNE`p>`X)J=H<>i6tAm8;IdDLsnoS?0o]N2ZN01ScH12Dcn#2Yc.+8-f,e@EPa;V^o%$P%o1LGHL2dq`KY<Q;oSPX^<@2M($11B.R]]hR9;J#TQH9>%$![Y2[ik$.](mTb=m==,c!`9r8nKLF!Bb:bb[FbB`J%J@;_hfY<IJ/$%ST9;R-pSPD/l`U/6]iOM^fC6LRL/nCG5\3HEE/7,X2KEJ."e[3_bK7^/@&/V$,WfA#%e\,HsLm#/Oj).\jlEjpRtNa/T/l]DGaZ\%rD79f'%hjg+O`!H2NJ8Z.9i9$M)KX)G8Adu!Rqs%V(#k_>t.6U4i27UZP;\k4h%qdHG()=3J$,l!raMn/ULF]\i4p&Hb6@/X(Mf<%9$\7*:P%L@B,.1W/#sR>HsRkNU[k)Y9i6YoXg6]fQ(#AKAh`T'f29I$g[6P7gHa&$U"W3]o&*"F&8e[d(t>BG+T:V3:$B@-6t-UW%('3euMY4ZM#@p0N`7"B`>Ag!TWBUcE)SYESMd\*g&oTl$a4%BmlbBl?XJ?i#=X6:^66+&VpDC[Xgd"lN_Vl&q\g9%&plk8aRQ-Ki%Pppq%ME9#Uojho`l/aQ%nE?BU,2dJEZfmQTBXAu;qUKh(<F"iAL@E"[B<GQ]pGpf+7Au%aXd>gOd"PWC@&nN1.0kUMhaNik]a:Lb%-2^G$hTn0]KXZ&k@7fS+>7r$#diE#q$IGBF!`:OTlM!lkZ'p)[WODuZ9WIX2:2S`2MW].;h0=)H9fC>uqkMT=OTt\D!o!e`.kMp1%j&aYgU[+sX8hdHf5udb@WPbB8Y$Y*i^:*lXX_eFQZPa96`[dBJ"kL#c$su.GA8T=4e%>mskmoUiN!r1`>e$K&X8M;3TiON"@fn7k%;\eAthWi6qEmO%_E2p8k__N((3A_NAY4>:GK.p:\7O&aX21JK/VI#,6p8kWN5:_OFF]a$-gncICRehkPn\&/nDHAEq*oViLLj?N(%;^R^m87C1N->Kba;u<#^ECu->WM:uFe&!gO_Fo4g7?r^@L8oK48,fI]!'pf&:=Y>*.Um1fVS@;K.4=_0#gXB.De(cA8f("J15rtc%6`+BSn:0X[A4!5O;9ZKi!,b_pZfZcEN3uT6'193VK@K%[J;%rP[roZ>?9dGW]lT><<$MV=$1VU*_aqlT",7@VW`9%6,Sh34I6J^p%)S$f3Qi%XD"lCLcLH4f4>eH^%:f/h[q)\8bf9W+KX=H0Gb6QHB4?;n;pPcNkXgb>Z:At,*je4oM?5g-B/#sRMXBMZ8,@YWo.UQi^%a#W1#<PYB>Z1A8N[JCO+jU[0HCY'u\)+*&ij`ar4<kA_:r<WGAa!`G:<5_(>[A2)WS7G[1W\@U3`$V!m+9"jWcc:<5Td&X#8ouq.%c4F%+.BZ`1F3^+h:/7p-DA[g-+t?7lP2dH-g`L3[G$,RIJG#SA;p=XT70Uf*:TiK'S5m"sMJL][OC+E?iK#Z0<9(1pHY/DZgol69%/in]t\@#%u(]Dn>:Kc(8F5sIA.n[._+0N@0S"bi9f31U#WICCTf!3&[&Z_r`=?:"5P!4.o/=]o4"Z&s]HUJVm<mg!]`[frhOtGBk%*f9ZC(!CX6f?5YrPJ`(5.NXClZrjs<I9sKC&>6;aTaQU_KsL*%qYG%YEmsrL6Q3&>9YT)3,hCbhU"q=t88bH]<!-`&C/g4eb0uah%[<<j3H1"S;X907pC-/=6FR_IGT3r6c.Z9CsLdL\,`%;t2db[36))=q+Ks\dZ?T<6`)hhL5Ylh)sHE)f=2='81=h;&SZ]*:V2Y@<n%<L.k3?JfF$k<paB<]eK'<?0$?f$.,O64]OE&CQQp%n#bac-ZHTW`3bl[+9M/V1(R1NafRWHgDk<4]njVgqW1/\K^lT=0)iL1WE8d%FgQ'XiT;Wk(:"PC%N`\")WYu8(U4q?Y(]]h3VrJpQ<k3S_K]U&ZPJ:.WP#iWT\<[?N,osOT+n>3f<QVK4<p!?K;2ri8?*Gq`>_fP%'JW)hd)T1SX5i=UW?&JGJ6;t,J4@MAGH'8I_Cg"pc,4&0WXU"nq[G)\$r7sH:YA&ZjklcE(ggJoL4oqq7`a+AbCh:5c"PmOroIN=%r=,Q3X<']t_C5D0`Z2Qo58raJ,)Ur&SZW>7Oql.u@2<`G<4GDl#,,Z163Mda3UBLA]I0IQVZ=;*1,^bG$I7DS5VF1PS'=\KHR'\B%frj&b2(WoK+8-uo$?-"6_iTMWE+0ZU%0KJFqBC?MRIU1Ks(.6tZIE5gPQ=X[b5Uq9dM'e;]pqE<#Z=(nmMWsDk`dj]Up3Gmd"MkE%P<`<?G"g9m<)/GA''I;R_;[Ho;+t7hB.(?N:J:Ca.XjBoM%;_n:f"Vs7Aj9?^pSD>RDae,%K3rZPDX9bU_&fcidp1u+W3/?eEA*B%do$tu4n8r]3cUu_WeC.f&6^A&ojmu3's^cG`sA=M`@2.<>r@;Y?0cZbBR[1i&rDP2?`T;G$fPiQ?PjM`[qpd;<n.^=cn`O\X'^jG%P,-GR^StkSMe%*0J),@5N>9tn:Q4"\Me:Qa\&qpXp*s5k'5fj&3p@^q43(*%oT';M<8kaZUpVdpOtb,Jr3\A-nn<e0QPd&PBN+M&%j=Y!Ui6kD.02<d&gP&+@>T?McbcSd1C68Mna')Y%<TV!]c.c<B\"1%,Q.j7C+?=MIdWnO'o#(Ib<pGR$!-qY56P>No:tnUmAk"g"%qfKfY@+U`D/[L?mhLq<DQmsYh1F=p/6!0q"I/'lA@=2oqR/MmkPU?8*`qj+QqMbahmcpf=@3?po#<Dt"bci^De5?.[9nf>R1h6iO%cK)T.<5J-rH^ouQL!jR-L03u],402+.SIDOj;2r^;fPG!NNh50.(TM_i]N2-F\UAY94\1Nnsie"K[/.(<3l=qpDTAK@bpu,?Ro%j%p!IK5iYCGDY**S?,$Gh)Eq>;#\Esk;ZpjqHGCHI!_ITlp`g(sYQK#(`ffM$QFG\70JI^i&BRpMZ`W$/NT:4sC&#qs8.*SVO&C38!%Nh'h3/W`Q&r%?%/C3oKM9pQ./MT8CpG!]H"ANq#$UVp0'>*a-:l-:h$.i!'H'/_H3>FC'C:5/lK?#^iiKXsglb,]on8R^;r5]qSS%noYS3P1<6uKJkd2oMg"PnGL+dP]'NjPspY";d.`uA7h#3<RWk.ULgdmS)sG1F0j<^.6_NCig:d=&=.a0]0@/KAZP+P#hjD,2g6&G%jVe.K&/4(RJD^kj[*KE1#\GBYL1nFubKTprhLKUfl9Jc@&/uDuGe.XNQW(E+?Og]^bL%K=A^_G.X@k8L0?(=qO]EQOnQF-'MBcX<%%"q3jcY4f\$:mL"*"qTY^:,DU)I!YSS+(KpW^T;m!XZBZ;@ZY8W1Tqk^24(".PU%*`drX3"9I8rC*UGnH-o1'=\nBtOS4k5;H7f]%ob:hh7ed)#-UK)Z^4>`cWd#_KaB.,\7Vc)!neql^N)lEJ@V7jL+bDNSbE=>J=<loh*n31+-:?pS0,i`I?m<W$1-RVlJ/uC\<\HBg%>4#_(n1T0f*4pe5r@hCbd:^TbAu'g>hO5,$FKRgYb4T;Kh`rm+^VL[8l8'F!,oV"DmNTr//&*]J;mb#R(!Z#GpD8tX64F8jJ7<9&%b*a;7Mn8#$kd'b2/uY5XIZPuA3U$ka"^&>o3flYXW&ppg<FqT-,_o/'\(_/+8"3nL7O8lD*H*^,(:e4iIpcYW0q=8gf=JA5gS%hC%QTt#m7Q(QUhI[N%1i]A^aMQ^Z*5jFl`nlB<3)@;Hfe/uN1.(8,A_ehJ(AfqPR.kABm)sUPrO8UgJhf;L3Up,:9!G=oPQk]=pMUMJ%j"<Aa1%"OX);S\0KTCg_N,Pp+Y8m;8;0o6aooQWJFG0jeLc=(59=#2pR>l77f#V''")[U*@<f`#:/sZJ7<E?)WI\gf;`8Yrh1Bt5%Q0B$_o/\-,O,Q6&TG4CQ)tg)T`Y8$LlaWhM6pp9:B`-**\F,*!7Wm_'-QTu,+KLb6h0'h?S9=2&3omrU_/%+%<++"T'fW;a/W*8a%`5Dp:'q]eE7\7DT*KuuAmH5Tu2&1=5I[DpK(5BP&WR*Xo)gj/>>TM$Whh2ED+\.^_dPY>@T4Yje>!V.^1o!_3Mjs_@K\Hlk:5K@\%LC=%AC:cbK6[>:S'TGnG&'m3,%i6;`[3JXbX#'/B/@0O.)(>eimLTj7`?fJdia+]Y5`U?aGP3tm<VqH>:0YSGU[pQf4KM`W??Ds*%aj1VQR@JKV/md_#/hgc+c2F,r<5hJOhd-g>_Qu>gSooMiqaKVUa;Mgi:D['@!2la9-C2\Q&tFph@+u=1bE)C9$f$h$6O6AH7+b:k%WsZRnCt=8.f"ZFMKM,BH=..V'U_4[t3:'T@r<]Ws@1\5Z%X[M`U'B<On:5eZS[qB'%-_k++DN'Zf(a?i&NV49A8f\?Y+uh$12gg`%LSfeTS0QI\3AgraN_l3/-jJmXK[5Qc>'M8ejcB.Q"36[?&X&@APL<#d:F_8,3Cor,?GNmM8PbJ(Snsk&<60234#="N)B42R0-)/J%0r[,j#dOPhGcCn>:h1h['nF,P.0u?#728!u";K_$M\fP:XHG'K5UZY.(fB`(N$f3eaQ$ac+I.]c3BP>_:@40[\_O9D^_Fn,hhHFM%XB_>m'qCc6rM<jCl>HYB75DglDfIJ:9Xg?;,ZQ"h<f7qu<]fM7iPF-B,#Z:SkiJf-EJ7$,%(n]lr5\\PZ+m.ud/VMshDCT)%`TBt%*ml(2]0%<riT#>2B\hITU>0e,r"J'D[tDUWFa;S?+g'oN7"9(7ZqdJhPiMZ\XoCfeXcYCq)^s%oXqFJ<Z]7o!Q8:c^GD-.Xj)#`O%Hg!TUO]TG#6Dn?).tI/+lIB1N2gHl`d"TqsD&:sJ*6as9PE,25KQi^RfJ=M>oNC@R6<PeABT6Pb%&XcTq:7A-\HUmrc2/m,KZ&5j%X'\4`JCLRtPd`tH2hUp%IUA`V+(FurpN&)@"%q3.99%k?S7G&gdAiY_VP9h4>_J^pZOuH&hM'M_q-OLB77.?H^=OG(c)qKVp91V&%q5Bd1XAng)DNGf#0g8!g*H.2d%m"WYg9V8YX)LZ>DWOeR*B=3DHCBXKSl]7PN\1a7Ah?!SR?$7_9u]^!nQPEF5hN$h'7sZ01't\K%m0Z[.iitB#Y&'kZgiP4>>rA9W.d_>-R:9o27E0jCXhj8Ah\/,$EeQ(bhe;iRV!<EdVY8pl:-Csgjq8Jm%bE+Z``=rdS9AoUARKM1%Uf'*S(5)6Z`ZV<umneup_ce=OR(1fF%3I8I<m?:K9&l+op,W>:mA8o?Le1?&P_2k0H-32!5Z5Fm&b/G9N@`B8fU<Zfa.%nXh:T4D%$*7<m$Dd7ohg&KBWN&)?/(-gLhRA&7Z.=i2nEfWO\3buPVQ,D!F\"AGO/C'HjEahh+lu`hDC&o^3D1NW:p3%W6_C/dqJ(u4M-hOn%HNdAsZ&BIY#W4)8L6-*Rog80$Z]jlNl<=1X\"H"Uc@,-]f1NXi?Q0P^XUDO5YEC*lU$*c(UlfI'37`9i5>44O3G1T^6eJ41P*b^H%!uGu,&HhL20R)_@;V[QaEeu<F>W(;C)rXsl_Bc6S/Gb$eR**<&DUn@tY=2H(9#<7+Y[r<_*t@AR5\S5$m6FmHU9&Md<,-SDAZ3"0%rG#pr(9<T<^lKcoP1LkIrVs!2Xu>j@bYs3D8(ED,/oGBLqe&l9B@!=GPrHl!5Ye4C@9-CFQ_F?]*iPrOr'I1'/$YFo^EtN(&SiS>%l<.VO&/2ZMZl"Lgg_qj7s.Q4J%,$UG*Z]?A6@!$o24d&hO>X;)4-8O#;lP-QF1^%(p7jNW[[seaPne`Gfld^W_25Pe+NmE-Y;E(B%8lTlK1QR=:U/!in&+AH9lrM"p;R5?V#TWdYfk"+T3FG^t]SuY3LZtlFros#M?C/QXJ;4Bq;k1]SKRLTnbHGPU8ER+&W9t>Y7#*L5%<ce:4AL.).3WI$=d[3O8mR(tMe1/5s=1@>H[rWGt$epUonL)6r$[8k$=[2]N,ie3AI(cu)&)BV_H!b`d?)'ECfjSS?.[>&\(VO&V%8`Lh/o'sH]%uht>F,:lMjs(L/[hO.sC*&ql1-;kJm'Ya,Eq\1NP`075MHO&i?H1\HB(&@S>L==1!7Cf]:n]!"]8LZf_sfT/g$9=2%;hRV&m9A*c:B;4EWc2)V38)5"k!3aR&UlVRZ(_D5C$_\%idauZUFaZiM.@u>Ura[0eYsra#B=9VR$`$BRBJ/UTd%@%X1#5mAHr$N%Yt_\XAY$ehQ*/dV+HbMdnA89Kr*#o9*gr!W5X[0Ylp+HO?IBV^Fj\o]db7L8i1c*f\6.?O<DV`ZbE#.ZM4r:I;4NQ^q?rd<K][Xi%+DIk%Wt%lgXg/G]#hLjO(t*MoQ$df]L\(aCcWA5$pFYY(SV=^OmI*7#LH!^IAe>b*Y`0%THY;@6H-26&biAf9IIUl%@+7nAS&L[*%Q=g_h%3&t/68]7Nn&E<fKr%>SbB!]\Z$p*8YX12oiIdUn(6YHU,t9bH*fsG/Tc3Vl"(M2<*/"-LppucKmY2"%Nr'S8'@02Lq0<Km%Go?dfC@f"/o0MnU[9S<b7tJYkC4:]N`h<k1LX0WJZ.8S>?%>`t-"q\9O=Sf_ERDQg-r/n0\Q^.+!So=5&WW]/rflNX87`6ATN54Z%BF;@+VVG!8ocT7JV6EG7an7QH(Qlj!3*=4c06Bf.YYJaj_2A;:-=1e(Z(@@@TQ9@I`Bf<nIhs:_#2RN2Z$haD-BJ6lX?tU>cu@>5%-6?XS8&Bq!rIVs,bj?Q9LR0B&Y^m4+B..16SiMMk=oE2f(hNsA3`oGl<&)b)V,ZPB!5:7u/,Nusnrc,oXB@5PL"B8RB[e/QN;b;`%@K7hscOt1RMYu@1Y]f&OafHLST(,+<VPnl0a,t5#o5uC$/WJnhMUoEem`.Tg7J33<iON/tZi#@Y\F-OrOfqqS:kl)ZPGO/JQkKAO%?8P^-B1SV\?!2PF$f>':'/+6j@^#%s1q8mqn<<%3.^d[SATsP7#Vj5lYH-%)'ToR`X%IH(B6.!k-iga5gr4cZL*F#hS2R!hIXV^m%oaHjW,BQu2;%d-H[``q5W_,G6DYo*S\("6S8]N!.isI"K+P[?K$VpsOUu,<V+ouo5;a8n;\b"uam%GG2+YpF!A.Um^YPj17G?$<\%=&?D&WT9tIAtN7X?(da\hsEWIaB$tbUmbGYFl>-okI"eaeDiO$4A`(,P'*o=m:fZ8kn;/&oOIj[I2e]:NA?WY3(G41g$BA=^'e``%h&5E^1knui>_q$1K\SD>cGWcH>_HQJR,(N[`n/iB:qp]+it,5*G'LIhFUjlX5)^Men;m='@+<Y]:0>ffXgh/aQV*PE$Y5cOS^lpp%*B]`VmD?ck>]foqH1%caRFhKNrNA@D41jsYX,?WJ5dbW;G.^(92*$7L6<@Rje0-0@;oB%Y=Eu[+CqtkuoE0$4S%_bos%j\_]REJ9%MLU8edtJ'lRW.kGX7D7rF@Aen/nr8n6U`@7c7flV\[E#_VD5#F.[n(1ai_(OLN/3Tg!bkUH^UREXFQ`%Sk-il<Efg%[,6Hm1/m0+%8dWm_#LR_In)4D:9r0_[!$#NNFB,ti7N*_>IZrcs>_Q=N,<1@X0g9O,aT@(kgDI7$9#f&IV]$$*@QE?%Y@Y;DcZsb(S<5;fm"[I;%XBc$@!+oL/[7P7PjG;6u>cm-Yis2.fp;+5kd#taZ==*WNim!&h#2]pe.BCB=73UN)..e1LGaF#/A#kjI;E_SBNH\bJ6O'sI`ICe@%=`Q39MjSUlc6l<l'<X[p#/JgAB$^@QmB8$b1H318;24A1-1?b-WLlqum2Bc\BRTZfACUcJDFEST`@HX-II.hH;\Tk%cYd>(45<d\%S&^_6UC6r#/?U_O030N!lA#fc=I,fSGkV$Q,+L3bk*32'IW@R@f"`WrNJ0U`?%]P7Qt0V>q'tNh"mL@S(e<@IH0H9hN7C^[kpV.O%_rDpX1bKK\gI=s(hjS!>giE8>-55g!ba0Y-XD,)RC,@JUVoQ#efB)57\F9c!jn/q"j@nJ1XZ=5'(hP"QUNopYYDdA5[X2?%dOR7Y%`l(c_Rqe\4CF7![<%8.=m804i.CR:K\,F\7hm:Nj,Zo0[Phd2.j[._JhUPThr7(-/aWS<IdD*K<@bTFkM#&L;UG5(bIF"^WM+CCR%7r\RbHj*@Gj*fC(-^^krRW-b.UHfPd"B=jMcm5.qDDVO<O:V#:^B`Bi.3!*l6E-%=le?V^'gc1!Z20VN@Qkq=hV#Ds&CrQ?=>+u1%6F-!HeIO)-^0"<-N"iiT<d#ulKUD)A\!\OL_^W8P:Zgl83'`$61k=)JXan])#r!$%B^BSkpaR[[8u[7:=$7sXUBcQD[p=PLg"&m.%X/B:lcTY#=YJiM+a&&TEh6f_j]:$EW8mW"oo2)rZ&ReG'+A9s.gjKktbV[4'a,b`_j;\/DI.15j7OHWh4MJ!#Xq("!Aje=;3O7Z'%=!nL;e07]1+5L/M[3.SjZ%LG;mhgY:!t6U*_"m!I3l%>(2W<nrNTYM;KC[<0[@0K-hPJ\/VMfd^.7nVtjgV],qJP$2'TX_/Wn%DP%rOJNi[UZ5Ub*cC4(<95-`h_^ngrZh)r$_^7^GU=3NnE$UEfY-#W3:A<$SHMjGeP+!`.RERA?'\o8U/sg=nSm!5GZ;0WP;2;o1?3W%p1,=RE^102KWT]a>^UGO:l,H)TJ)YP\r*SIAcJS/e-P5;hpK^':PbuNcAT9T`%(K+lr^<u0EacjoB8iZGi;C6a0UuCISsFm"jCFH%45JE!809SF'P(IeMI2tZKnd&d*\I/K?@21^l.XaTUMCb/iS?QrS&!3hOFEXQa$(bUTWJ!@#0-1D,i5^dhh2!/T)p,t<kBgY$S@Q:%j^d\jRu+oXnoqkH=9%j+?2r*_q<L9EX8hffs6'FU5Q:Q[r1F#,J,3pds4)Vo?iTl8IM)V3J+qR0rqk%An;k>qo[cV2C\_mt8\b8J%?iK<cs86['s8C^PqtZ<QmeN4Lit;5s^U@MLqd9BZs."Q:a%,uEs!R8WNO-ck)?OTE@3/&=nPsCm3=CLGj\9&,kGNfX?M-P\'"uE%%r^SfQ'%t>GI%hF$B$VYWAo<jTM9hG5A7(;l!9H/:Ihtk\Z6rCiJPH:%2a(R>5st.jdg=`;?:Ik%X36i;iocIi3e8([rHR3*ZTcT6%?A!aKB\_7H2KTs!Lo*05_(@fp9UW-9K\q]`cc"/#"&c8a"BjrCO^ASTiS0(G/i!(^%$)kN5A'\c?G"BPRMScV[ep(<i`RcFU;I!q%h=tFdWGDG%,g1RXTu1-hq,*C>@R;fmLM#ef8S0[,7[e3dnL+J9L^Spu7O$QU&Y,PCCRIPjPtA`;,6d4g\'[A:-XHTrk)ut,/'0%6%d/Sdo&@a`pliZ7u86DufRO-HZ@mZWn>GqN1ei&?f+5W7YcK5BYjTdP)hfS5GkG4nPp$%rlHqnLo1*]SOKGR2+oNifRIJ7-<d^OCL%BStLV)Lhasp*VN#Z9d:7204XU-'_`>DtsYd'<t!bim/r,YW,&OSd"p\&)rqb*BQD:HC_[Ug#L+(is6n$gR"Z&!i52XPFE8DZ;Q&b%/RF]-3;WcLWi%Q(h/=>/TbGL_DT,a7GL[;DeEn+W^ciknNBA(JC\+7kMNemdYc%@b1O(ALH$JqhPD+4b<M#f$/3FH]`^9$_=a45:%RUEGp&tW>YY&u0$YAfgg8t&n-Ua,3tP?SPc"iCWDCU[&g^V,^,A[Y/@KpqIWcLZFcA-eIZhe/rR)i$=SB:TX<(r@$;-CHF?;INa5%St^/V!$o9mK\:8)ig2Je'S^+^:<[$gm)K@&ILHm[)6Qec]Pll<^)PP)]tX"a`)C3;XNG:^j/0K[*j._:FcTuD?aj2]Kk]?hXQa-X%;?j^c-gtIN0OW4m;m%SI<7Yer,qbK/H6!&'6Id0^Cd'"K9cP852Qk3jD_(n\o8_)<F[qb=`.1)i<U/t\pTn@q9Q8'*kLM$JNLL/#%XUDW1BLJZ/E$&4+]Y`P:1_:MOBGWsVPNGV@lHo@?8g#):Y\@FUFo(tDM$L'VfK]E.FjG3T<e/LQb)flM^]atSoAqDCX1O5(B1\.M%_Ad9uLr/JbqQ4,&_rn7Jf)Rm[QuM7KZ;IN@29hag"eR*#%-^$O<HQK,XP`a0b*YUpTlFN#XjAJ8N[(inEQ"P[fFZimb>L-#<Y6KN%J)3.KJG$2qpI:V]>3X5rs3R"\SBsMRm2VS&M._W5ZqQFD4\fV`@m),=:aCkASkK6%A/2\Z?JbBq52:%O-0jfD\F5L=iO2<]],3AP%D<""H6.mLdEu,#+"58Mu^O*CR=15iLm;\9hSJn2N9ZUg3$+o9K#Y<^U2MHEn$!EtX`17XB*,ce5U^c#Xl?ODc&"V]2H-q7ISYp_a%(\,Y*&=30@HPs&DQZ6(,-9;)ONfNG<jo"hnCjk%?G-0Z`LD1.QE?aAq!4"!Fg\f5//Kte(GVnbO-L566-R[$e`WG&0ZV'SNDt_VY%ZUAi30'D1/:?8/p:aJQWb1J("'oE1`Q3fE$-Ni<q5,ncI2g[NCm2Lu=GV38?5?T6XO^HBA92N]EBFDpPY=%670ZK8r.pS\\K@T)Y%KZLJ5687sj@%M#bTnkMp545'4J6K"+S7)ir^@pKdhnDj*Vjbs.PmU6K2%r`abJ:o]E#^>t0i0if50)4UKBpCm4CZ,'?@20#]Cskg%]JVsUB3J61)+Fl$cWA&["`bE!"'F0n`X]_F5M;O>nQKj6F2LLPR(e&*ZsfqO$k:8kB,Ao=j?=l'**qYlAt4i(AEFH?inRh`n!`7;%ng-Y<3[2iKA9[>Z+Dg?V%MaCfVr[3Sp]p/Bg>QRn"h52$o2j:4$jrE^0V'\Q^F,)m$u.1I$C[O'H>$@g1pM%SgAQ&'U(oI3m(P(d%Jt$9GcT3g,r3lIlrZceeN+g*p:=pD!bi6_QGl>/85YbK-%XmCmYR<$]k9]r^e!icC#NA.cH]scKiqMi)SZE!19Zt'M"n-(H.E+@8%\Xsqn8a[tP?2Sq3M@Z7uV6Ut_Y]+he8UVIiBm7D?DatY$+&ZRr9J"t/$/]T.r=UjMWTAh'>LV-9o?fdY_0.<0Kf*"oM(mE:U':j@%C8,5'JX0:H(2s3Z-;8bhkHeYn?3*:<<61;Hh<&%(=2tTml(9!gM&pgfihB9B0Yo5No<N)K\#g.-=R@TUo;`^MK.c4^fK_t*9j"TB%#JEB5o^e%=/.Gk!?`N:kr-oO+ih3\pn)D%5&Ie?[l:mhWUg:'`"BD1>m1SSAHX36=XKH43khn*65oDLG=I\@64a:cip6M4>9h*+$%Fo!J,W+WlhGHYr!bhJ3Up&HflR=gTaj!MH_Df'EiV@'p$/fLTu3qT#P#qu%Pii"IL'I":>Kd=>(51!m[K1Wm)5qq8tE1!aVGL4qO%S=ZigE@%PCO@aH>S7DpZHU,:SBiJ^&S[;oJRRs*G0+BVL2341$duj=YRD$e?QW/!E*q)abMDZXHTW+p7$*K!X2(;+V7DTNKk0(tj%//!Vq<iXdCT\YA_]Np6o4#I+b)4jKH'#.3/XcIUZE>C>ce#>\j,"7cGY=F</36&\N+CDV5^NuD_*?8OP0e(_rA;'E#[)F\h\?)5i%2moPrICFB'KU[7VT-NXZb$H%_OMWnT9t)jCj'o4r(kit4r>o>*ea4uCO8"VF8T'@25]ie%XTW*;>Qd&U:uDH8e2tT",@eRr$[Aq]%#ck_KbN.AO\$#\'&gq8ME&/Cr80qs(VC#^tb?.b`1RqoK!$LdbmU9h_Xc$'sdoT:uh&b7L+f))H<IGW3akP_ckI"EATRl98kP(G;%A:(rG.n,eu&t_>0Z+]H>PG4$qGsXI^@]#b3(GZu7(oG]qJf8$f]Op17Vh0B'\P/M!/gL17ot'4;MBPL6WC49SQO6dIZ]g0?;g4qc%:9Zp'J6n"M`l@N3%SgDlN<,1_@=GMcG%`=/H*0W$\f*7r4MP7X4]rVKEiH.6jh66d-m20>.?8h>ZHpM2?WjIWBM^*V\p\:Ygh]\Q%LUZ<]8dEnbE#Qp9ftO$Jp96)I)-"hmhW5:IrY,j\23:TGPG:U]G2S-6qVhE:!M,f7)k&J[Sh=N@XD]FZ4;*i-EETo/BH/LT$*/mP%e!BK=%le;%$9%aR59X?CalZ*u%q?`DG5rDT<R'5hV]5Hq%_#?f0k'-eE`%'Ln5!ZPSu&uY,%p%LU=,FeS:0ch&O;TbVsG*Te1dj&%;3TC'dBJ9t3!k\B8o;G<@Et7Q+)E(F.6jB@%q3>kB5.@Zp>Edp+d-B]<>*:<'FDo*:(cmH##%7Aha1bTjHB7*1h)0KB90lH%4iAZ%Loe;`J50h%O/Ma)2s2R,6QT1CK'ZXV7,3lQgVAmEm=+8Qc]O3>bmDYi6@.p/S>[!jiXBq[S9hIs.`Ch1Bl*!>R1<d1XUg.p#NBGN%4nqD"M673*nYu^U'2S0O0FQ6]]hm?,KW5:9%lR8;!-9]DBG&QOh#;.$IV@;m3q!(^IASLT!7JgQr6>ET2>VLiK`b-\-ATu,4hCIQ%flkSsJ*k&9flIZ8k->^-o)(C`e#W`FC^ZO*f^/%tM0MRQHe$)p-EH0^poMhW"[9bh*q6+$\h<l6cVKRRr!'%)of@f]"$H1QPI??N%&nr*J0*j_Chk0:q8[ijHPE5C:d:a3tiQDN+&4Dbc\fH2A6o5`K>qFpuA#8,okAX-t(@H.FdOL&$4>T&cj:K2-[P*I$\+`hc8;,;n%h\@MYEU"7%n>V?I5WY;>.l1jD=Lc!Afu[l"-G*6F4u*e7+=IifOjaK2IdPbG\3e_^;gJZb8Ms^+@j[!KY/b;49)8D\$el:I94qSd%lg(&dqO^ju[o[V_;;JZ$*L]?Z[r[JOY8_V3L)*OeWCOI>JeIOFOjG)\82S6uB6Q;];kk[p.XYM:4IIS4CuN#_-G("'/=Rli!VDr!%KA4?ZP]IP4@07X%p>3+7;&<-MRK1`EGJ[%6%#:T4HSh0=?)_nJ7kXG#O[RY9FVQ_,c@h\g_l#66*/3*P'i<1-]T-$.(>/qan6:DG%4kVl^adY6=>8Hr!!hA#gOFcB7+JZ6?KOlN`<<4=o$?1;$5)0:pM93VGD1)RD]F"2L>[9H0VJAqSY7-3>0\rC3)_$,!`+p^T/6lcb%lJ/\!'EFnJnPWf#k@TBX^jJJ_!bC->f@knq)NDR9"\=b6)M?Et1#s:pQB,5F$+Z/"J_1:MFnj4&G2-,W2*WREcY^NgCHDYEc]QCn%%+W[eI_m+@;\76[;<Z-/_2@<oM&[ojrK2.eF:?`GXtTs1.4c;(K]aBG]Kg)q309/KLd"T,jF-i%NEBa>jQq[O`6/:(f-]u,'gbII%=[7eRd9.`dKjG*7KEu==C%=q]NM0:g6X4FMaA1_K`L!]n'>eCG@KtVrm50]iW]08m`u*,dB-W]i4W[Aj6!aHc%OPdGP,$/j2j+`p%3sVVDVKApnn1'DmRQKCL"O2p$&kVho2!,65ID3.rAM,jC"K.P`"/.R(b@!LD7B:h!B!SJ1@\;N]`#+J"/^c#;Bg9-ZY&Ko\Q;9@V%51rhZ'r.m^F!`![$Db'+]TeRME&0HEWD8#C0aS8p0:=S0CJ_n(O3`VJ>E2YD2a;9rUY#n:\fYXU=nem+/fMOM`k%/19jbMDkU.^2%D:LB]7L@M.X]EN`EGeI9#WFf*_UIrf)tF,DAtTI(m]$!?MnQ8)bK\]B068fkFJ6osmQUP5ciD8UDFKiRI4uo61D;"X5.)a?470tY%o3C,4UTd7^l^AA+Y8s&,eD#d5fMOo!"/*rt$jAjmgb=7b[6-?o^jr2J9G1AcFr/gT0nbhMR\D)_PA2S!$Tj%6^#D:b"8(+2@%STZ%6-3A?R44q'8Ln"!^+$\Gp[^M8oe\5/pAQ;<&\cF[_;e$&FKA@Pf`5d%\2GCPV@2',=/%#2_e6Hr^D@>]7Oa#7YdPbrq45aHE,l$8%!UHcU0i>Dr"i5+^37COrG((@B^WJW[Ip79./"%%gVUgB@rh@E!ojCjuLs"YD`hlD<j+]j5":\r,PR<g)f-Pf_5=OW,7_q6$Q(T%^%&O]=\Aa0oW%WtZuSm]b6<(treCW3,g_R[a/K'8oiOY;li**m15=fR7&Af:q`dCfjrXegBjTd8+/>\H+]GU38R",)U"_br2l!8I\a%:.lh"1or7++F\7a(jqRE:b=31o2PGI?O0lr%R6Jd-I1-!4UrJ7Z\+D_@Y(fAEp"4i$kEY;lgItH:Ho_B4#A^]5NG=".,4_"dI,.&%H9J^m.eFn:"tNZ]=1PE:cJC`_'JH\G!O>l5cg,8\q9FG9mpQTDm5+r[[]Xr49`uWAW[u\BW\']^Z3.&fB5M7l^3Sg)_S3RDru^sK%KJA?/l1,Y[+#N#o`We_?<om0_gB\,=`q"W\he+/k+J[+3akt>AqQ2_`A9N1)?tQY+gn",lU$Sk^X?>KenUc$Kn9`F&Jh"%#ip7;D%QNPi*mO/2Cdo'maWIftp=26HL%U7h)Q&&0%?oUfe"-,C'0Yj^ioo"J+](#R<!?TAqE(^+9:4J6;,W^@mF-$\5#7]BH-g3k<N]pHS%1;SNX_5U([So./;Jc_QSV/,\9L6Tn)8h"n`aUX`U!P[-88_?D"@kT.8=qWdHbaN,j@PuL,c#dEA/$[VtWk8TLHDSK&<C/$!3PCML%Ba:f[^q=&TElg*)`EQ9R[('16B")u9"I/d]rU#i>B04ui16Ie"E*L+pepH%Y'PeJbZhI'l+qS=)5n7@#$tq278&aiNb6$>dQMTir%E_b$%Ku58FNJ5'5Un+:J%`BAqA3p/TIA>k3gkGSi=1blFDBaZt4]sX-J`.C4)eD&B]T0^D-7:=lCg*[Wbe_0G!NBO+2@/68_CeTq%]Z#3u^RNtm@K7Jt@05"aWse.=@ugNC1hc4"RE.B`39@7:Ug84e+sqiWNU!-2:X-,%Eaic^NuCd_OirT=QkD6DiLol^iR4NIg;INc%!@,DN:/j6^f+k&`c[%,67Zl7?h99i9lWE*pj8/p\`84l<6qrktp5:c&Pf39Wl'<MrE`j:PQY$X"*O'opB4tS-:,(KPfgiMjb16L,%Kj@6kNUJ3WpC(u5%UHZN>Jss5[l5]Yk9pp.;&KSu#Aq<P_I,pq)oP@8Bfa.P.)9=h][X#j>bu.EaDO[^AacWSR3FCbNN[,2kq)@*%%CX1iiNQL)eKo,@;NQ\eBY\)<QiYeBJN.a:Hinmn_T%69h%V#5S9IDIDL7K+!S3g/iR6Y28ccsP(Z=Sb*&cg".]e"9#A4[O<%h#Z%G#mTbS'"#4=,2@'2AS>1AGCnZOqc@o(kAg!nZ"':O12*gN&-_@*`mLp5Y16Y#F)O"07fmU[CJRuA7R>4Y:8;737u(==oA-$8t]V!%&\fuT(UE-2!5[cZGLTM\/Q^2i>8NG9"i):^KkY:j?mB=mb=_7ACK-I]ac4b-#W;``4pZl"8'7?kiRs[ZOT\g&cD7nXeigZC>m$G)%J3@?jYFL9"!53Oc%td$j/B'TM;0+a`;`T`4$m1u8H5gFB2KBqR?oofNZnD>VMld'#8.K%fJLJGtj8s5c!:3&B$R7G6j^j+4'aZmK%j_Y4i\cC[1Z0edGOdNsahDi='A;@c:\217;%QF=T0lb1A%YUY>>XNm!"<l!PI]Zg8V&NVp8s<#RNl-a""ghj!NDl#>-u.[j*EO%n%#c9E]_m3.d,.?,Hao(q)`TiZtF[tI@flW(&6R/km,6bdtL``h0e67tpMsEe\-7DY7EXR8cc=tY!JUa;HTL&2"8<2?@DIL8K$M<Hq%InW2JT#]!='cJ51aoZXIPH*q#[5T#j]-ELU7hX_5gd.89+s)`NZcc?^'(js"?2M\J@F>X-crkKbTKB_q#uR6:<4Z&j\eGE\(MVQ+%bZ$3X/m3Jb?oE:sWmk<4?-rZm/nHt=#N?'QXQ>D(Xf[mG%n.G1h](\\roT6!huV9,38]`&dL8X%_mYKGp;o+c8Om'b/&S<(VB]%L%LndRAXU>m9O`@QQ3RMBl9mTc]<+3[0BmP\Z`L'>^D(,@+<RM$9XjV-'(k(Gq+<dDHL$c5<<W4/>+%sA?8eBp#&OF(T=#YGt3cor$%n-#$gFd&h"Ql`H@,S>A02UQbrX1dMO;^,C?%+WSCak?q5[t'Ab8t#EJm@`]:dUn,h/@iZ$#D9+Y_)Nar6t1;o7&+C1qoYSseEt_Z%.YXCCpqj-o$M7aY+EYT>!/?rXFq.@1'$+iK5(X8@D$frc"(WS53`2Um!"kMQ<U&[NMg%)!$:?+h$L7cZh=CGRkB@K%J99]X$S1mk%8Hom)m[7@/4t"q&p/&H0AXF\TIhBh!#bV34L&iP1,]31PDH)-!+G";[#RnTP^[I,D^hY9BRk1Y<=7\K)Va3(cW'5\Mi=g*$`bcYh%Q&.sEeJ<sU/6ELI[`3!RIc<7fk&N4(5,tF-!q4QAdK#O7l_#q"XlRoV`(R.PO36?/NeZ21XI?XTU^,kQ:le6-Db[<k>knkVGcm^)%Jh2.^,O'aJ&RB<9YuZ'`W]N0@1'.EL<e(9569TKd1bLOM;Ks>.6.tRN96s-oRdA40U$H#8)O%ZgV)YrT8`:R;n*B5<6`FT!#(/>W%W[M#ho!J7r9Zh$6D0oNr8/V$XOltu7dH6<I#hdus=]*ELFi,T=lpI$VjXJ/#6E+l,O6iX@)kjoEXR)e7lt.=i:`p6s:Qkee($gqm%fYp76duTt"[$_X*9V&U_BPEa1Q@<2f[mh%u9<oP@IR(<qhXW#dra!NiUB=jY('D]!`bI0i;UR@*g$mLd8nVRB.d.BU)pO!J!:fM&%e4ruj)*s@";mW*Xg[9t]^c6P6aJKt^o`+t)i.Plf:m0k&1@=sH%]J)]`,.57]^8^4"E)S;pea<8ZOe/8mT.M:KO'5>"]X;6jpiCk%X*!&ufL[[RFY3@q-BkO]4K2:u"&NAsjn.C0AjL5Kkl?Me/$20]J_N3J"b)NNf)S]D?RX0n_)qp1S$9LbkU!ufe]S`b)UC8fZ"1f^%p'm)o]]A26p(T&F%N":nDsHe^"$76-3k/BD.r=h%Yp^5sbOD4lZN)gq=`X#g]-QQ+2D,aW+pT5m2D%qgG0&Sp5ZpVR&ZC.&@MOoO%oqojrmi*KE_:i4HrpK+\7Z40*MdA6Vb/LtY"-!:V"uD$>;+rjh;F]auZ6Q7$LH&l7rZn$c$><V'M5JZ]?fgqOYpW>JBi+j<G-3#2%dNB)%]oqJO,*e5j&3-K=-af__U(D:c*i6<9;/N;Md1p+<Fc`9Ri>l>VAt3k"@"?+L_RPPuF0H5*EC1b6&KY*q&VB%qBrn!Z%['*7%[J]:G,/$9aAF=u#PK7o9eOGRhJ8du#1[Yst+mX^S4c5P\P&8eiXI@QgZZT)BmS/c&^bo#STeitcM]R&m(etrcK=,QtXaP2!(naqa%7LoaR(5I0O,p9V!2iMCk5?a%Z0'UlE`=ekg34V.B.sakV&&K>6*R$7K"XOl*'o`tF/.`t*^#g'&K4m9X#f/?sb3B(28?s%IQ:^<`%)*:h0Un7p@L\,7k*?m[WMf]*W'4_8)YdOT2,Ia4XXXMoTE6/-ZAfds#B2-3sB!SP096aapgQn[.`B6g57`M34-):WUF@\gB(LTD6%3j<Fj&.(a]/G,gMRo>>ZeiQg$OaGa8FB,m?AL//9O7@cAnf049_QY%k3WQ]BO^K12ciFWQ5hHN\(eftGK27%U<"*S&Si!$@AOR#b%O<ugZ@,6,_@i)M7ZQ)AZ>.11aWaVMsgV\;Jg#qN;6B7)p%e7b4PKE(ef%[X_fV7t!+I#s/H?rVFHWNl5L_pVbKF?O[9+*1J)g'RW%UbET`M)_NcMG@d7F)m_SM5D=7J1`KU2a35EDEJuC^6iq7-Fr3u^'c51(RT3o)W>"c]*)1[U/U"3Eimn0&3C'L,UK6HbSLmD.H*nf%O&E-KKqPC-9"&o*#CIFDp:JTi3CNM@Bj?A.+A;2?*Pd3iD;2Qs!Ei\rDO;ra:nrW>1b_YQcOq#C:+ZSZ>!*_'q>k70n0ClGYs=*`%BJ!P@V*(a^;c$j9RQ.9`4a>kHoB8N+",&)%$^Q4)V/dsuX?jVM3<XT^EF:IQbi)+(O,2aM:7t["@?5(E8F]q.]1el1'5b#]39S):%jg*h_ZQ56iI(6s&'uYYJ7T'?K.:WqrIF("<eV&"W=f/mnX.t=""0Rm]=<H7?*l&6GGe(OT1T-tAos37k%>]2@-0Y)hK0V"-!6L+>%R6*[".\Q4$P",R-+u)B3+7@4+&\t[sXUFnGO1j>l%[9cDfGg'ljgfA"r<Jl"iG$iBBoH7S(43BmPoRcN$*scnLh&@>h?e?`$Q;IZ%=`;Lh^arsuRXRX9.bJ.Spj@D0WtcdMKD/BUSr>)@oS)9a=Bc,5AIOrL5Wi_qJ8r"N/2MeapaUl,<K?b/R.n]^<6Lq)m2`J@K447D%P9I13/V+0!"Gl;airc,KS[LN?$Dqht,g1@c69<c(3"l*D>ohqCS1[W\;"AU(!jmm(!P(Gq]_WB]hCM>I$uW',_sk1kGJKG)'Q<RW%o)dhk?o6b,'0q/%#aJGQJTp6&+KA>8StMGSoia+5]G^O\-]ge/ZZQgqPJH'GdqGg'W%:%:I>$_,HOM\ggpDmO>&>VD<aj9ecoL!O%CPbAB&Io5R[IgJ6H;8gGeH/rsbOcP]ouq<,c)[8JPuf85(8=mF^)Y`3.ea9DOK$WhRnjbC>H9_S><P7Y44bYVj&<@2:eKCg/QKgh%2V,)&0!c;t/=._SG6-F>_<Q(F,Ae.!6nLP79FF[d>`gV"W-rZJAg);\I\Z\+WGR9G^McdOmrtpV13/MG;AV&tfqM$N:pFfZL`,OU%im;O8R\Ie?aDm[LkD`Z*g=%X(.R,pZ>P86RSrGJ@F+Gmt6]**2hf3RKDrtg/4j3n$GX@Fb-6(tqXKTiFoXuF=HLmJ"#<ca,E2rRH%<_954\h9Rt9-Rg\KH5k+1e'Eto]hAu/RR+o1Qhq*6eRVs>A*3oKU1+1O>eMjhGAZ<91H.n7$+fnJ^,RH7F2;0Y['<RA.ga>KK5Mo%jYU/g%>2W"?D&MgDQlWn1Y$[2F"0+DgR<E;90k-;NHhC/8@3(mjCKQ-E1LJh:!.WO5[/+f"*sN:R7KCn"Vtt^&dE#0*,RqGRUsS.%!BF"*OOI\u3t4uo!UC:g.ain%a1<-%_Fk;Q:c,GrSBA*ACB(]cnUjfD#-Q.8TH1N\O:=[rcAiB&o9,fcH@\TRC'TG%";n=#)H0qM%,U@[>Nuc5o9^U*KAjCqNFeIg0fm&Hh^&eXZQ+W*MD,R<,/htpf@I7B!915`(a#VtNc$&(<U2'(o=90GTH#`fqhhmL[Yf>E3<g9I,%!@;#]]g3?Y+b!IcU$De@@s><_Di#A<EH#,-(B`J]_A;qU>knT_?S8Z7D&(<!`L;/6r$,VMgq4#KM5KZ5eLlg2.t4X'H)m<K$MYhR%N(AXlI0cE5SlpG]5%uPRX]BQng.>0*(9iL!0aI?ioMeEqfLH0sn0Fe/-)%U3,9jUc9.+G5gOrN@P'M$:Zs"N0T*-bsG/n"u47bOR%P1kr@/AMt0nRuYnR)sYs$'%mTL_pibfbfg^VE+``e7ek+AIl!O__SMr$%?PW17/9D>$6WTS!)&>TG@cs0I_\kNZiBI0d%!t]5FXR%-=_.^T\J[VirVI?\X&)Q&un#;F%pt&%!huZ+=.i+\A>eCN`b((R^l,-P@Q,?Wo?iJb6TcFSt.UrF2k-qlQg;.*le(`Kjp=Z3d8>S%_'hU9Lkca0Lc&su'mY@\';WX9jV&eiH\`A)eA!=1:P4$%_`Mu`$f_Z:"qW!1,C-k2Ecj[+[7_:75-+j0K3VEF\hUQ#,2p,?ppDG5%P&6o8(]f^Loqh$a/QHh0b(WK%VhE8'"8'Os)mCPYKLgA2)Q*Yg;XRdb7g>otX"Pu2,T+L3R6FejOKi5k'AFhcV(.\<<HE*j(30O@%Tt5nN32]RTq0fDP!=<e"=j'sso!q)l#VcFa;YIZYXAi5*Q;2`patL:E'h=Q%Tja-)Cq(KSqO6-&gX1R`443GRAP*lhmk'AD>n:73%^&_Z<&oQ$j<tl54ZCm;TcX,"*V.NJ0K%jQAFpBDrTS^SRd2T*@T7u>D<P(:eX+cHbfZP%`Ec:,Q7g`54Tqg,Pb<0q2+<"UY,ET?A%3b_CBVC=W;oH0Xk=ojr7;3(^E9"Yql$Dg/Y1:\I;/NstI.WS`=R_uHPS5GXHJg$;+*Sh8)gl)[tf_Nh\p#(OJ=c@hd\-B2ZP8n)^%!I1O^[#gMNbn$EIo3u::8??qi3UYONFjR?][)@)h*<J:/6$+n;,tZNJcIL18gCC3b>bKLIZ`AW[Nj=NE2mcuDUmuU$)-D?T+a.A4%iLt_$6'sb?"#O#,R6cP*Bc<[HTrmb,&(7.06q;dMKIKf#8k2RN8?W8p%rHGT+7g(R2hm$`lKa:'EA4eaZ:6L.!6dG@#8[3?PgQD2%*OJQ^c\&I#J&XmD%@tm>dQNhe2M/?`P]eZYWqoq<.bXak_4p!?fLV]_Y(@rl\dfl+8Qo8]AQGb'!A9NN9agGDW-9[Eh]hR2!US27%d)_G)L[R@pehJi[U[oNIR1l4YWEY*JO8'4-HH;1"`+:WLE)EqQ&SiB,Y#)/Kq]7eKM_gYY#U'<^)!tN:6S,o:[9gBr4OBj^C-PZP%r0N:+Zn.dYTcub5PI"6Y_MZ%^00Sruc_8sZ6_1Jgi/L,g;t2uZRa>?AT(NI"&YNrd_c=#Sp(]>mQ3U4u9\M@,Qt]\31-UA=8/S!M%,u&P%B)nt+0#1B$TW]Wj"Z44e3BA_QQD2HNe"]Ic-(u2bjOjk_0,.Y$js=4HQ"W3W_u]Mh_Q\!XWDu(TCiHdnEME&&CJ*!G>TjkB%gi%1TbJ$6U3!g&T@SHQTOC1JqSUo/#VHc$&r6Z)Jk$9$0.B%f&j",0\A(#Sj!$Xpj9CVW\F%53\*dS'$C1H'!6r`(V9XB[[H?toS%<^F!42#%9kq7b4Z0+876:?#'mJh"/X5KOOuaTJVPQXgRbEoVu4b-<!5(b-3-M@G<0Zf*`5%N8]j+tQjDq$nsJd>F#2F79g.4CA:"%Y>F)Xi(DYa^q0Un&1qBZ^q.UV6!]Rc(kX6tY;.q,&[h6Wcob3T!T<Uk-sn#]U&&O6o#[K"6P[L1),*OE@?:=TA.Ptt$!\Ej+os_.%s%b#$(4,%g!:.GsYWRLmCES&MFcA6;a9h-I@,KoQ(5e6AZX[NY]TY[[).E[hE\$\9oTgMn0hI"n7"?hO1VAikE*5SmQ/H5\kQ<nX%0fgiH6pgtG-7=J-NiVY<0(b)YB[B*t@kSW0:[$.`j00Dc!-iPn&C,,)K`qgKHF4Gj=E\3CB#gZ6KUhuF(`G/.Bs1$Fa!4K=Eu!Y:%mKAkBC\kc"rP;O91hH;N)IWOOAP066-UB@/iWb.L+ZDG%@D.4/=sJ'`"f;&+'s57cEDjsCYcst:_<WqLEi<GXhdk7,,?^)K)OF\?%U"V7Y;eGujfRdCH%d?"RZncKSY)E>N&CMUX(%CRm'L1m-ic]J6TKj,q*N:`-@cIf-LRNJ5Q3I>hF!?-dA!D2VTo.T`d'CuG!>Ds)%RUdnlSafJI[0[#oJLue>53\WOm4(#!G-!5\;!Cf`1DCn:^4M7^1"L:D+;)DsGaME?*^T*4oY!Gq-'P"p(+!aXFMLFs[=0Y=@,VPQ%mF;t5`iJ'F!<,D2dgdrX8\0+a<Y_cZ`ok70cI%aKI>5)G,-)qA-8`u]JnP?.e3oMZX<9TY)o8+CML6\E]3FQ1a8/O@=!.;Ld<W%0%M"d2,@S*@\(A,>`&Q[s#rRc2n-tpd767m]n0F'\Hn9S@CSt$3$\l-d%Vj'5;mT^@(Gt)&0I03!m0X45/a$dq:j,ZP>"S-ANTVq*J%%0Y3bfHBLCeNhLV^/HYhS^BXJGCZ`JS/:+(%08I[A99<`13DYSE#)WS,[quC`DJAho)REY7<,g/pt&Ea^AE9BfR&^]d?mSS=dlJB%=5ocr1%'R_q+atH9..nom?sUo!i4ja\Ji)>U<%%m'e2.28Q?;h;(,Sd/aQ(L;nNEE&HPk>o^#K0`'moMjB=l]'@#fTFjGpY`=epJ%9/L:l_]rpG[Ub%M4X-qtQ/D]G5[V[]0]SNTf3)g\<4VcB'T49NXH6.*hQEjAN4>lMoMiifa9r54.I#nNE/Gh,S7n!>#-dqc_g!r'%?u][!F1\oC"Zoccfn0`)_@5uqNeCR@+kcT!n<oNfXB.KAHp8*CYqC/f?YEW5eo6J/ct3;5G3@u^Od@Z"O<4[EluPWIkj7dYlsma+%4mihkp,MV3ih[LI!K_*5gSikhoSa7\2KN/d)MTD8mmJI:YirEJC`MtS+_[Y`3l_@m#UER#79>Ga;O2rgm/l[FZZQF*"+K,3?i[P(%M7@*\N9(8@'VrI)I2PpDS&s8$M%*lbH[&$h0r\8RFfH[d9k%bbh$kjs3*N0JY(@PId3hCs*Z?CfP7[?Sc0M50LGE,7V1EMoDAE:A%XuD6#_Xlq0Ts<2CNE%H0#?W%R:RP*n['5;IC+:MB.Drl^ZqUud[`SB*o8f)a*UqLEZus?$Q=*MhRT"9f>Z6M1;F4U)X-q\ZFb1E=%'AclP663u:?K->.GlmJiS:@Rmk)^A3A\`ggW07l+!KkIgD($k_c$7?Q6nVPJTa&.j8>WH_cni6/W<h%%oup9c8*-U;n23J8,c$_1%,<MuUO3/bs`CJp_e9f_/hEWINSY>@78!Sb.UWbWXH@1n!!;$=9@>CDCTK]7\*m[tpkb)e[Z;H8i,n4WYn-]2.%T(+9cp;Sp72usD%$Z$3n258^X)4]6_hgLft@!OON-?F<+njaH=ZSq$j)XK9g.UCdedIOQ3c7U&k`9H>-6LiooEm>h[aM:n#mHi"G#FOrho%m"tJ-sKi%?%CII*u?>UVB,F#m8h7LV5^pH4m#%e/"7"rKSq\7O(>uD>S6o/CMfMFLD*ptqukRASLrNRr;0m`^)BZ$CRrlJW3r@:)q[#o!O_V!%ae0^Q^,L(,i#Z(!2o=!XPQ8K,"f[6bE*3cRYb3G0MkA@G]jI-n!YB[.d@:e)[]Q@$QEsnNa?_:A@"oTN<u?B.4bt+=Et/2gcl;C[%P8rdh]jVA8I\u4A5MEE-Y\cE"#fQch*1a(G76)Qj@Y06GE0Ck60gNphi'g^eJKijG%DZ`\O(\7(enD2gRPNH$-V!nlK%2+3AMO7k%>6(JcW-DEC&;Pok<)7[3iJ\oV(`*Xf,GAHkEREFIc=.L)(CdPeU6"h<HF"e-MT!N*&#9UWqDuhoV^*u"8o0#ZB4_9g:oH3tF\38p%0nQgD!U;3S^P[V&V#t2Xok+$cqP$YIKSutl8.pEU$B93T@>3b.gJMsW%(tB(?kaJrd^GT6&SeTY#C7s1QE!Ubq`'h\A*!O,F4(@0%*NN*e(I:cd<<WLM$2]U2HIXRUf$Zfh9pSHM/QS5>`).eE$q;;'iUN?FXiGYIpVX1bb\9G\r^!.Y;+iRPL]UC,5bimLH=nBc3"[(&%pf1a<jR=57<s5!#k(1s"?e=55i6Y^:@H_[)K`^^PVEd*U1nm?S)mH_;*UL/mQO'9g&ATpXpF'*/_I.L41sXt*)rgiFl-,]=ps83"%`*hXL%-2"9TpIT:Vq!,EZ"l/(?.-rVXsQ"rNF(nX#C;*O'Sc/L<a\?NO[Ri4#;njj6s*E[_C8.;#%03^UG3fC+fPY;A$*8+7-KU-%X2TM/6.:^bW[m0g'Um1[4#f3Zd]9L3(t%V-F<0^:C9''D65m;"7aO\'$4iG"!A8Rsk*5hA%<-oma39((R"WJ+*UW?lES3WnD_R-m%+e/t#S4L3m@!2_Bg3$FLYq`k_3XD)S0SOQQ=ECUD7g(8_pboPp.9e30+m9M(/aZjoS3I-*oJi*2@+p1A`>1c8,D%CK'b$c)M8.7L%:a#0f&r0_/-]ohm(8hlP#aq2_3c-DF@qUAl[]A'/PRE&\+JMf=ao#cWeNmIP!*p-d=SI9&1$!.>+[@h!:aV.YerYkWTTAXV]k#,=%19rH-\S[.Cc8JuXcd]qV>7\a3c;Nu-XVtFIG-m5FMn:j_P,)/UQO4n'&l&SK8/'K%!hRR?-*Vui5u(mCR<KO?U3b^.&<sc'@\Tb1%%'k`m-&Wj1Vm(qQ$V37R>f6#qZJIH>&qN%Mg\Lmd@3=tCS.0:J`?(sCOMH(/L8"pL=?DI77*D)-WfYU_\nbJ+<L4pH\;Hr$jKNX7%.KC/^bRhOk%3U@Y+s7o*1r63T@WtYX]kR=X.PN7_g,E+U#^_qYRP9:53f$foM[p[J'fl4cY:K9f'A[PaZ<J4MVaA<b>Qi(5Bh[W9%.i9jM;/Qr5*J>Tr4=aZDKKm[d>^1]*+:C[K+B+JPm^<O)eq-th6?-0C3TRVP#Iu.]!DCVhc\L>;;/$5&R&f*^%66Ca147]NFk-)S%/bg+-B9c)$7I>%,g*rYR6(Z*M@)9_K6$UDpcGEu&7RL:%nAZ"`1)n`MQ"uX-Pmq-:b^h:]BK4#K"$tqdWf\S8JFIQ\>=7`%FqQB-%SZSqZ+I9H<C4?J_^VS,:jc4p8),;p5I#u_A7F($]^RZ5\'l.XPXU],Z<3UaVQN\`W`2Xf#CF'a`@s2;4Ka?;%/)^4g3&tfC?j?UN%>EIp3Q-?CA&TSam<F#_'<N[!aZ"2Z+`=k03%7'tY\8:h0k&=9**/9BNi@A(:?l'RKQ@n1Bo[DG16]@qYZpJmEb/@H.1D*Z\3\s"!%17s1\+_km`d-@]YcT#>">__7jGAYl]R>)JO,JFZS4E-Ac-9XpnCG?t?(qWaomGST$WWJ:/oE%3<XTN3DHRr"Y^rcd14V&"Fj.J#b%\WEhC%e*3@BN6@FPR!>I`j@q8C@M+6pBNs2,d[rHY=3k;$b`mBY6T.#dAdY\Wi0ba*hP58/f/CCDDke8R`48Gi2'NUP"8HT'6Laf%m1qVT\bQG4R0,SheQ>KcK"JgZkK4eFVN6g-B@d:sr^@Gi>N1s>(X.qB01HBgb.s_dF=`,U9HO^lFh.(C6+<fVfEg%nKU%:h`_fau%d0UAHqi+<M[fo_M7-GYq(q>TsZrG1@*.[5QgW>>l2/q6Z@c58G9Ft3qnaes'8AWeROi<7u+/&.;8I2^R6rHr[:u[1^hI>oO#3JXT%G7n;J%N'kLksci2<o/qm[d(=JUA'V1Q?h_k"(DYRM:R5X^5qc=E2Z*Wa]nrhcH4^9b(Eu0@'D;\Ip.rt'8m;(=uI4Sc&%4:4kCJI%-]uVI1LH*\-<b:BWAdGf6a[4`dY'(nD!"o8U6:3^i!H>r6#F;:+d)jM;=ic\PY`4)[0s;jKW)D#CbHBthAe:o:e.gVHs8`B"W"/H%@H;WpX0P:^2>hZZO53qN6D"n%1_OU;B=)NWi$%9@lH5FIRY5:NnNDN^LY/A+]iJXMPGG#&:h`=e<K=L[#>(GMjg%9oKW`4h@bW#.%od"2C<iBR;i5]*;d(Gn\QE<e'`R`=*Fi[Lt_e>(-KN-0_V,2`U"R:UsLr3)0g;ZbE<NfVnji_Dg\>gr)<OCu[D&`.*V+15&UgJh<%-OLDGoGd+rHKpB17NFh74sV]`HU0_ICft`]DutXY:t99jWZJB8:.%[=^E=N^GQi0h:"<C;:?k)m3_k4dlZ74I*%-9qpX)n7C_f0C%Fu01V<N)!O$YWEEi_ruEQSN0M6!6>e\p!$A]Qmaf78?RR=N\XCW76qlJs=e,V7/<`;,D,%7dK"30AcTEa>>mL1YC+=ER@*pHDW!C%3R*8Bl/rZ;(/EE9>lAa'I5eSP%46,=`lqX;.H`">7UAAHqu!aCU8]/)eStAD/S;(KV%=j>;YrH$eu,W102>B8_QLO<.G]oP;X1Y?%5*CHeMQN!DfX8d&87pc%"[GeO(->3,X41256)b!Q>%BDY;/I=])'W<Rm2Q[MKj\HAchd\b)K>YS'VogC-YUK,PA;FJid<ghNE(W[%dRKOO<QJ%tT$Cd]e7l@t6lgOEqe?27HrC86(]N2Qg;_Xp=e`;T447.`J5V`<1G-[ND(uZh%B``/+s)f$aYLX(+AV(n!#$@&A9-$j%^e9dk.[jg\8d>C-r:D[pFmZ-[Ej2eZ!qHc`]ekV4PfHgrDtP$I5\7e^!X()(,*orO0M.&[V(k).MH,0(hr\Bhi-\(cVsUL&LBmQ:%>kTRV=$7BaY>f9>`A]UIF!.?D<d9h:-oaiO%BSe,7j)f,,G.a8<9AkJmOT2AFh10\BkK2JQ:5Js>ULYO.+1i,%^TUL:df]&&,0>O%I,tPJ90r;!ip4G4Za3f`D"Qb'J_7f[oTf\s[@+!DRIY;WZ%LGBj5CI=lDCA4fs6>>7/biIf9jTB-+SW'"6Ie$ih4D"37u$R'Ipj8%<0`]`LVZK5,e>7Y23s^b?s)n6\125ZrL,$/8<HJ[((,H\r31?NiCbKUc63FO`4==KJ3KXsVAUHrMuh_>eLqg*%T#XJ8KE*hFtISK%=BI!S@"h=6%a(e=YV%Y;2]ej<N%%u@EGgUHf*rK)>a82p(#";7K9Bg5YTdl*<iuo,!"^uPDN/8l#1,f:)KBD)*+:URUUK^d6EQQm%Y@uMrj^l5?maOakN1Ps]p+#?26Q_O=:0A5!6<I+@*qbhh.g>>HKGAP#)7bCTR"qVfZ.r<i:><s\ac1T!l8=c`ceKD+HDW*Pd4oa)%+XZ>$AuaWc+3[?32AUFYV&h5a6\#t+%MS719*Qf/lqj"Rg>c==+L7CPk^[r7<<MOVYZO$%M@.R.Ct#A!`C:EN"`FFLFerWT=;1<T%F75GNEnOHQ<FB%0J><4BXV<7!jY-s5'm^KOVSq^29_6e(o;m`W:6,`o6MI,ac1FT/"6K$qL2:rX:6nJf\&0lOcP6c)Aj_ImBKP!Y%J=pF1;"aO;$\E\I\80b`^S>6aE-</fJ67B.I%k^@YRK=rZ0:O+d\cMZH!Fd'E0<Y&2*W&8,;?L16bZQsY@NEq9q&6g\AlkrV?V6i%p7cmK'h4g6.2A]'(l:D_6\+m:<GQU^"kR(-1OW.Rn"i%EeH*r+9BNYpSM?=Z!5#'\onL/jGb!_n#@[=l/s<="FP/O+=/!4+Aj<`#%(b;-MHL7nO2-3Ie0Q.k2IP"W_bZ6)PjkL;5oq!BlTsKI*M?A@rUo1f-4Z)\04^@WV[Q>=bL^ojpIW2*j%;hAVPP9J;>1B5K8SDEs%@pt/Lfjl6Q"Ke/HQ5*IA8%u!:%S/Ab/&N?Zj[,6>>C>)C#`6+-[P@E=ijff"62c?[li:auNh[B^Pch7m!&WSf*<V+/pbG[B'Vlil%FAh+#/k[L4+JFFe%;R/s($BC5A%\!dIl]:""(t4oa"_Aq3(R"P0&UcPL$H7XqS/`tj=:gZ%X.m%51(@Mn0HAjRHtEqlSNF>KDEWZ%e9JD310,SC<ReIb7'C,Gi&at?ZIR^).cIp_Sg9n'UWrbsR3!iuGUY%1,7*dOJ^u^1r^WUaZBC*diimHs<+ijK@Hn*>!E`6$&?=7.%p-M>Dj-o&F<anDgnn?4qY(]h@Fom$sR65n"#,(pg1?I3+NS'3.WaN7&br)&5'r,Yd-Y/I,ED>-2'HhsNVN_Y:j:aACZ?d[mK30VB%-O:)cQnqH"fBOV%;lGmd'J(6g">2U6\GCSn&!D6f!O.o&::UOWgG1g1Dj?-)Wsm)"du>=`?a7*;X6+^TZ/p2',%^2CSD65.e/e?_%fi0->";.`B`\%%a,0S)#p=_H]7KZc<*Deb:L],Gl7@E`K9(P[:h(pngd+2rAEqsf*eE'LPEJk5]E\d$\[&c]>VjQ,Pb*j@#40)lD%)oQG%p'F^m2@3?#^;YbjXQ5t;![K@kN+q_\j)1*i9*adEd#fmJN;E4gVuTT%Dr>9/Yd]$jPsp&(8moO*H1?6N`%"K6L>%3OQmi[;%qZ<2eWA=uK6:LMNG^;Va&DP8#ZjO`^A@T=Q?:!)lGt^gDOg<>;jr\_R=XGPjenYt*KPe)"pPn:JgYLXD<^@dsf!Gi+@-(eojL'h)%/bs[?@q<f)O"-Q.aAU,bH+7.-IV)ntA>gs0,57CH7^R((!U)Afkq<?:\Z\SP'ni3+/(N2YW)h4LLBNTgA>Q^P.2m$WW\@UsJC7-<%!MqY0KeL\G6Z6N]E!'`MXCY@J3?eP<#n)#$+2)'n/]=i\g]e@<kB\*`=giIDM1$0+&=(D&E!=^<iJ<E3!])4r4dK;N1`hO>PoN@9%<O?;X>`@#P1hZYrHRL&_JK23SqWG#QK[rL&;kgTF)o69,`V,U+okcE264\AE5^pfHE7R<5K,Gr%2?,YhRfTE.a%CO!?q%%4l^'q*%L&8<aG`e]Y%E"V"9nuhTDJX33\U>Bkn'+1r&&3hpbc(](bG?8R)etjAR&g'DV1ol`Gm#.@MC@u70])tj>>=f_L%7AG-A-\mTs(@+%Si(GI"'gMLK+5-;OFL$^`IKbMUb]08e1.;n""T6Z8n>M%aDl"N,m=aCJlS8c`ISaT4"VD$)u7^+^iZuh"AZb`OX4^e?%OmR.\_UG%=9).pi66t-h`E6h9K2<[c(kOT'ILd2h3UI*![V<AIt\phj+58dIs3FHI9E'[M#41q8oLDj98X<sjUR`4(B(Q5;#3$[=tCtuZNOdi%3?VU->uD](6IuZ)8L`7/,N)8f&m[gl]2W9,E0?sf&Y.Y<=D(S6aB-$[T+V(<@0GFP%7<4*=2lKc^OS`+/9/lS'h;j-b`ZfO@Ff=)%'uWie?Qui_<:$Wj6f:q&D7+@[O-u(M8irZG:ra^P#qHFMAFsj(2Q=J1S.pX<Yp(qgdZd%nUk+4cQokT"W1uI9.2^=#1-6:55V:Z"%nNt7SoH8QZhd1,,'d0t.2R#c?U.gU9!WcL"XYHZYElf=UhT3i;AB!Jcoh$e^)5PXoDWr9JQ?qN<%_9/NFBpRk%U6)4b(bEh/f,Fa%@/':*DZHgjGbHQ"Td^Ddnj\up$!Wg"7pFJ^!urFC3/qV]!>+Y"`-nY:N=KPOT*;Of6X`#H<p;WC7o`#dL*:!*NM-g"h#ut;=@44)%-`YnGl=jClDA)]r)b-=Q"6rBCFh)[a1Tu/V;JHW+:.ne9IU+l&bH`sm=ub/([NkpS/;5[n`LK?[NF!^si@\3DW3c+)H31[;as4j[%`l:,q]TFI%D=W%+7!)#cI&a[WPB5r(.I3n.%QkN4Y6_!_!u6U2\g38W\.o%STd6*_._DZ@?gW+Q[3RZu*ib<u2L#AaR/PC1_`a1D%RC&tap/(3Tl3p:&ac#.oh,74b>U9/T3aLU*#."o];9=1^#+"UJ3EQ;._2tYW!=#De2:e\3;jUdsnp=G>2GsXaF*5TjAG#73/ZJQV%8DKntMXcgO(-:@m]Ed%ON1Xp44u%@Q-l-CO\'[fu-EA0?QC:'14R_U+0jUfSPe8Qi7FqmtW@mG1OMW>I*7'u4js2r/dQo>YRZV)O%Z3HNV[#tN2+s`BRXGF'M<H?1#kXr^t%Md[>/L0tjWQsA:B?UdBnnEm\U;tu>8O,U\6u=%ekp6lnQ^gNY>m=3&8I"1PZ>s\/V$]?Q%Ot!o_1(G9?Lr7c@3YZ^uoe<f2U2k9`pVRK:*LHpb@I,-17S*j%Nb!:j\Rlj'Xs&G74h!%+DH_rCRI\2qpC>f[-:<n%O\d_d>J^QE%&XYcsh;or;U64r[1*`W<@.i*-hQqp9"mAG)P0+4k(c4O43_@X%l+g<LN*qu*Yn)7kggIke(\kiV`h(X1(1;e;U@42$hC9$a[;8,9%;8=q4NXiM2_Xcr")2p3#aibo*_PA0iVA88HSXkNI(NS?kF[dO+`[FGNBJAtjKNJ=+kE$O`ki/m"==t4UA4#nmd)^@l3ZLq`d3q8@%X/WN)$@'%_6Eh,/clo26/q=cD@6mDVU."G-H>p$el*JmAEg(JW`h5ucLHJOU1/)WQ//VFq$<V+Wd"!s3<@Bn!gfZ%%!H]=$6,X*q%\)ldkg;)2L"""0R6^C'T6B_._Y[4MeUBY.>GeK9%-da>1((e'adbR[ST;*XXTb53c"51j&h'']H6ONlW;7\b3V$Q=^*ahH*8n%%P%!2`o+>kqO;-[`eS,J_Z@]F+Q+%jCWQEF;ck8_BEW)j1G'3EIX@j;BYa8uI%Ygt%Q_YkC`<^KSmOir]BD?;m-2-rfH)WQTmDO#&U-%f)kgSG/jF31%oqTq/TXU!VH$j$C@j>2B*@4!'/dBV^6;LS*2f*K3hR#[a&;M0Q24>+P(a:VB%2LLCj4"-BV,MOMi#s4*C_mN-DT!%3k5.*ho"hoLie*.5rg_h3X^/oKRqS$@fU^[4!q3Sehhh4.Dk/d&U6A(6Zs1N4U6,or$/Hi4=JsVNb]7O98%\L>]2X`VJt%JP`)P=%;_;fuZ1^H'Q"D"7"J%=U"*lAS-aAjlha+?NjYBj[/LM^!_@ud%UTB#a'-@V/.<-Mp5_3;RkFgb`Jt-RkU[Prj%/g=hTNN2a!jeI.%EsCVk([/^Bd7GK5it5i9Qc.;(&&n'(1<tNg2i8[;S^OU#4AbTj.%mmOR[JlP@R3=]BLs$l+,BV&K@^S5ZQ=dO''0-/qTsr49/V<T%(""PBB-?+^)8h6p1`*1*iG0ALPs"#^p*I,#2FlV@`j:kjh(WeoB.h:G#V"PuLV6\r>:uYG5,5sJ&KWlUo,EEQK[^i!'noo!b^;(4%V7_Cj9b,465]RHtOA%GC,@R*O2o0(i!%XTa:GHReln:gr7b8PA/G=n@N!_<>=t+oEFU(ZMbOf,"$tON1$Is.OQtAXdO3DT#Sm#KE%+I*OQFh/FYA`4S_g/2)$^2RnqnN,Qe#,Oj.,'P[H3APMkbAfuM?l$Ka4jOmPYk<&()>DO8YW$c2:Jk$Hg9_>^,ae28=QhRdQG44r%-[6Ms;7!nJog0k(])86L6Q/)IKI^\6R)F`d*QFM<$:0kIW,d&#KKb7?%VN<$:StQ)Y7(J;?m/.F1#b7`#l9DtM7i(.AUSLMP_lXc%Ck`\q!Lfuom-FL?,RD!u6adSb:>`*oTWC>6F2V'\@IQRah\9XtPB2k?N*T\$\%O*k2,-NkcNs\_5radJntX,5EY=D\D\+5ahur>%%%b`OL#>'arq0Rt'_KCWq)ULP8OZ9U%Ftj&@-?uT"_oW?saa,C.,/TG;\r3b:lm\,bCSc@#"f-jS`:@4GM(2L%=S%X$6.87C)!Vo8%7So++!X;DX&:p:hm%Gu8qkg/BU!tPD%6-J:(\2Hl,%ioul!/G"C0$0%<U?3\Y%1s=>M8[tWT?ei&2V>t*XLo6AlD#t2S_>;9$'BZ%5nc]_+:9`?N\>5c<\ND#k9FLK(W]EflpB#r7SP6[2L9G2>(![_fsf:27W;2&Kbc_r*U[,K!0J-ikk7SK#bJn]CnV(8a_StKi5D@:%0^:_D=t"Mm8D'?V4?$FS0r.^G2C\MI$W.'jBr$uII/h</c&*oZ0u2-%Mp1`Gj_!HWU5L5Un1K0^]j#5$hCRnI\r30;6`E\kAZF.b%E#o"oJ?sJN])c#7!/QH@OuOlbKP%%eg,AU0c$#4fWN84^pA6CJ[a8=-Z^`FNN@A%j#.$X6.[O]*qOLLU5DJ";kpjtKdch1:Y,+I>%e^fsO1n5#lo@K=dPR78\,Qt-1Nbf4"P)qoIY-('](NR:+-M'im(]"o#2[Pkmd"c?;'-i2m&Yj`#ltsX/,?(N(V0AKu/Bd3O:c8)c%Kbku!'TRKkkjp5B=Y#^2MQhUdYOs%4!eZ`.%8W-C.Yq3j\Efq<dRL&iG2pdK:1oJcr777ZkW)W.O2JC"@bs.;9!0A(9Mk/Z&=$4D%&G@NR&q]]:O>$qT%1=&d!4Q0?PYRl:Q_K&PM9)qu&o+VgbUb:GJ[m0#Y]4!m^5#h;I7$r9"ullmX+'4;ouJLW,SCfp.tucKlmEkj%Y8uq(&Nd@p/O&<C/0@LWm]8NtM_.W-AZ;Ka&IJuH@dZsfjscZrI\4Q:.iOtUp^q@[k>_6Y"Ib33,hDTZGHgXb^/K9&i/B7/M$l'k%Ugu1s7g=18\mM>i:eZF:N0"n7E13rTCBmPX/hL!LB35pR9g1lT=1fMSH=/hWaR$8cX"*F%0&H9TCT4DVA`B.(@P6]QcE:X8%LZDG%l""Ml3m;nj8-_^Pmia(=[NJYVHj)9HPl6PU/8upK#n(:Jn`msQ_at8ke7Sq:Z=t`t.U'nkls"A5.-i;SFMg"_A2f)u:-slB7qS'.%4S;6-+JFR"T#g'AYA:p1g32Ic+_@(,nBnp/[pqk?+I5_3n^8Ifgo^?J!kof)QUG=Kjmm@ACf#_s<U-(4=Kcb?M!^GUj8r6\"`T(!%%Qt(Z__ei*CYOQi<q%[jXir7IM=IR$+]?V?5i,aB0fDc2&1X]?(<"0;[W:i4_6D$RK142,V(!er&g`U./e(Rg5j^#BR&!0(8nUO]%0BOQ43+_5kXer+]++fn\AKO;L3)NoBLlb?/LJ]\ajj4Pl,4`9J\h;C%1\W+Iq%bO>M02d4RUTo,/B1fr#5.$+pP>&4gX[f\\&T5M%PqPC,b/'XF`[[S`j%W`(C8Q]!o[0f%-#h%<E!IJL^KEIM<kIm@qp;;C%dk*E*Gp)FC*]tI"Q_A:QI1$&()^5#8[OJJ78;l>BH-%l%@3]-e"Kt7SfLK?BG19'I$\@)%]6YO!r_&]%VakY1$TWA7]CfKGnFD:[<#:.48to?6P)0ckEp=AIe9@?;9:&`%I%UdYi$D`q1"q12%2ZbRC:&?7!HC6?/J$Nek^=*d%g<WHX]3\?M;m441X7R@dX#FOFRAj?>$3f54U1P,6$IA4!;e#Ae)*N=92X/?n4gt#b*#$OA.jmq;%V-K--8%gZ&PR&T,>nd[aArns6k9)[;,\`HE\h(dj`0#)s$`'JaVh>-Kid`1g<Wg3>eR;s+&\!e"ms&i=r,Oh1gJ0nQ;(EBgMT69T%7u^WFDGI]PN%Le6oi>,%$tA/_*)&/2)RNhMF4^\ii%4=!qV7cAe"G0OCti]2&Tn(\$INlM:Cdb)`3<8-O3]6,`j@mUYma6e^d54s%U=rIRLm:1P-)cq9U*]\57=Z*&M?#uaP6N8/8RbK_Xr^%@45d!o8YB_<'Ts3)]9$;U6aL*2@R7+?aF#5h$//OfNI.BRe_n2@63e-h%YTfXc$q^qVB6b&1RPT.-[C&%)N=oE9#KY5185:LQ"[Vr4BiBZ.'@[@H:F*kG6:QXsWbSWe)7bQg;i-^_S\>j0m$U`mpL2Io.1:mZ%4@O):F+*)r<j=[.([@M[U+49jmY8l>,C8467^td3*7m#;FjcQOl_psJU(r`)d%f=g\6cm9LEG(@7kK?.<lCrU0k-TQY[YU(Sl+6U%KcN$cF02[l`XKDN7!*ggT[Y,5p@oP'T8>ob&KTla_Q_lLIM/]imi+t$i!U/dl;l]/UGqQ'?+f1R*kgT([=K']_l/kUWfO7.?,lN,%;2o7Sp,&X\NTt&ToX@\'DcA5lTg=]RS,]Do4/s+#d%SMPm4lS-Pn$$YmuLWV/$+P(Mdt6p)*)kA*mnJQq20g>ab%/:Vk!=AEog`e%aYas$ZYbsb4_f8'g?9dTI(;8MqT>.CfL+l5bI@#!H[GCF?WIA#FbXo/@T4"DTsK^B2l!t2\CS#R_]%(F7eO2)3o6f!33#!!/"*1/%ka:KnWoK+T_]rpf$4V>])^!Vb=6]LTp;!WgYenOr[BL]41Y=Tg=8Xm95`0f*LgL_jDl?M%l6rN\7H<[a1QXS#Pm\k1g]\#5*!!V>%AS-Z\5kqK?'d^jV%eTTbT38N-c6;9q5U?K-"-/Hlja;uET,d)6mj"KIhl;]7kT[NC"e14AqkT#d'RVRV+q47N)Ek!`D(&]dhXW4<%Ft"S7Rt72>H3%=)=jCMk)1AL112+&IZC5W!2,A<9p?(Y;A]3ZBHsX6^+2pMH-%L\%,N$C]f-^r?qd^#iMX&'t0:4U(cY4sGmhMol%^IN=\\=u3*'9$**,F1fA>0:9q9O&S#@2s^E)9tt&DlQL)[lB/fphH_L'[EY4U`LQb@ojMn)Mp[uWS%If<)m0j+VdaI$,skR3:%.^%b#km*l),Qs@&44?[9]+9-M)8>f#@.[6q(A0.K0Ka'iL<#li99O..aHQoY:`Ui".3=$nN_uqkkQ*e#ABCKbsl@+"Z>YZM4kqUD8sV%+@d/>aarYdq*8lbJq?448W`3[].JOrW::X)l:?=7n8i5T!(6D_9,oH7D(=;8UlJldRZT9*28SKUag%!T0s@Vje_62AkX!<[-ar.E%&DqTF0eQG(*(MX9SN_+uf.1UHF^U*&$PI,W8oF0>O&/O-:95MoQM>)t6AZ#/5kCPo2$m8!6CS]=_E*s07,i-LO-kWo=h^4:nn%D[%$e^X5MF"dh;`GUu!=:ZkjJ&MfKO244fe)#^Q<<cA#JjC@lH#A=;8cR+UriA:\s:l[?.'0<[RVJF@H\/ip7^L#o9uQmkbQb4\@e6m%G'n<'0-"fDEfM,k.uqg#UNPo?*^-`/*U_t^_!$J,HF\u@7&*i7MX,-O.NH&Wa7%XMX*Ea&4aOq'ZEdUa-<X^dhZR@A@?s=o.mdV^%Qg=c'+G#+k??>#dKIqR5&B^[]Bp-&][RlAWd;fJ6LA!lGFBt4q)EKadGV+b<eP?B4f.(:(-F^)/0;El0Hl&s<Z(npXll9,IAun%#%7Sfc+;eu#Y)`nF/S=APOm+>aZinP$0k>m;]kXlVp<,88'g4r#`e#8`:`e"gG&m.a_e\Ne%,&/X(F!uU=<L]H.NX2f>R3T`*_)X6M%&</,7UMAAI8lj4r=7FG5"VSE8@/l?@0&VkpKH5nE8p#BZQ.6!C24QouUKf0VS?i_2I=:n"!-TSY4m+%k@2;66&bp_T()n9ml]m^7%_P%X"pb1oWomi\fA-nCFCJ"por^>@QKp3;MWc*M^AZ8%Z=d.KoUQSN41M)K-G<sh^FJtH(_DO7Rmt_+FGH[>>/^hq;hEdC67c<lc%C+u2dWtnX/O>1e5M#J;S3C;iaP&e9Y`3S&LQXgVT1DZ]"3j=%alTS;J'&e!o-]HGFUd4GU."@j&.iDQE>IG24?\F;QM@;Yf2:Yf'%JJQioIHLffp54aPI6"`>\]8e6K;jS8c<^Kkd6,4/:SC`JD4NMbTLH]Y__a`/gqk@.7J'boGdU/jZpN@`eI0DTa;*FkQtACZ_lcg[%7lB<]*I<FR4g(98C@Nf3rakD'e;dXBF,\g#UR'-6eKZ'*;8dDo1/4QG+Xag\*`@&LR9F7HCJA3//(WhQ!a`._8,(!d%N=5Aj#_=(%&!-2RdBd9R'NoS<N1Ne>kLbYJ0*$,SoNO'9#sfc7,f#SjnZ$R4-g*-Xh6tK69sM'X<ldGCS)]Gg;b@A#Sc[IVp;4pnd/ZR=btN^2%AIee(9s9i$;,=:V7YsKK/4fpD]o`t#qBriM\R_KA<Qu[JOk(q:!j9'N:dp(K4dr*K'i=sgU.3!H(:q<?8CF_od@].@N3Rp1/KKL2%6cQN"rJDN>N%,.XJEkRAalm[L`2(8/1d)Fpio+9b_JDfL.go!*B;7];D+QF%qHDQ#+m@N`"$I6DFHlAG-^1k+D!DptU=iJrL?>to%7SCAq-tbn-$7OSjBcb@Pi"KQu23h3SOO3B0nRRDhV5U)nb@GZcdc"rb461GtPD`<QTRAX&5EJ]_Z,mS.[M<p]ngg.Y(B\ed)1L^I%a>H-Q;9V\SaZkKKSkLK7O]*sn;$r)sMfL9:QFKUI?R;7^U2K7aX'nLjmSTPuMGnL!-n0Hj?Ua'b<)8H>pEkY5'bb/RX67"7r41E0%4c15@bQ5c$[e&V?Qhl>n^/\5N=UpV)deB%T6nQ(`E+h6I)#.:MOE>'qDhq/,;\J@0;Tb9S/8a+P(6J*IMaPK'L0r%hL,Ih%0d6f-%[Nb?5dMKUeW-"bNMD00no63[Q9p%nVM@*8U"W`8dFT=o.@q;ou&?u[j<@@VO7:>'fjapB^2%G>JLJi'`;&W[bEZN+U%nBfZKf;M@%$>`h;Q;Jk]##UpJc\^-XjZW0tA."O*DhOpg[A<Q<os:teN2%4+N519Y/Ml=d+r2"5JeXC\TbdQB@R]\t)c]%WBE3\c1ti4u,ikDL%N#I^NY5"]CPtbi00NB3OZO-876*DL_f;=32S=$O]5BgCCCg1(h0H3Sh(>DT;>(;9uDrGAY4pW:#"sr';n_&JjS3YXC9SjNiiVIj1%,Lm37d]FEAD0V:[C[(e?Z14iV%O`%HK0r(M\%mMMX-C%jGoftl7htSLjo%'tq51ngcW?D16Oh#W4`B>N3AGlW>#6&.*pKDpqIuMf%lR[7fb?j`=%Jd;k],IIX4/[I?!i/>GNlDg*9JXV7m=8%\S(b]Oc"^J>1csn[,JOUf0dWkmh2A.lhtJ_Ni8@,j&JA4`;u&"s+3Q;@%joY[<aL.QAT5^agd"JP7mjs:$\E"dp![0*!X<j'FOqg$/K$_]%_`4A'0N)ZsIk-5#;l?8<-kR8bMMum4",$T0AYD-s]EqJS'Kn_(%eN(d&05fPJprZFpMOHTTbAr,#_M)5J9lkD15q?/fhM<k,ldZVEW!0`P3^KXm<'!$*J!g7&;>DEHgLR;'Y).Qa"ApB)9#\-0D[m\"%>BQu5e[We]f<UF,Kk<+4&SdtN^/gj\(CdCW^g%,&?h^5GI)?.'5e\6\oCJFt/ba5KZd!oE<^.@$n5:Vqp/o@rF`S'f&\QP6a\tn2%:rPU*NEe0+Glk$,Tnt%d;q1.GW!b[8!`VnZ<_44)PuK(i:^8Ttps]RN(G^YE/T4Amdt36Ie6W.sTis1n\kA]JWeO5gE_.!n(Ln&m%0kDTN'm!A4K"<Oh)F+>'oc!>0F\1-laXoWV#L!&C_!8B+&uYddR,$Dafr#T-7s'0MEKDRrEY.l_ka1'^Fq^99#%!F(Jkqn!"(17d%eVD(3WKK_Y^s#4=TK[)q]d\Pi.p/f/^e1j;KcZJ30PG:]">9X^@H.K++(CHP&n6.OU6Ij>!BF[^<lMW_dKD"oPDJc`DmCkF<:MqJ%k#s\^/tcHI$-:Rn5cB$Dei$m@IlRlk.YKX@o,dK3i1+s96HseFJ#!dL-_[fdfln0AW]I^\5@4;a_CJ>SYQ;POW5N@+fU-c05TX1D%6!r$U<tFWA5bgnLbI&/KYdlF0"?b4KO:lS2X0s7Z^,1V7F2unl+IQ3PVO<7qA0%US_c=_1H?%/)e&#<)0om@*b<S\(;I$=nVWVed%`;#(.X)[B(jKMrMU0FmqeMM8R5A15f2h*RoVR4lPO3:n1;!Q?i\\4uW&$bH$PC$TPcY^.9\omSo(D!gfZL8q@I[)t8k-/a)"Cpn?%AsNI^VYU?UkdGPYi`Th^p'KtkSV@9hA^X,..o[h*X)Sl@#Vug44Yf=`]0*DZ1;,HB1[P?kV[le_V,#!'.^q5.-()u0._;<EBA[nO%E!4*>OesYa)kkc0A61T)<(a^-ddP'5jMOi1%]D`7@h&l0A*-?r6jar'q*HrF4Drf+mF#e"@NO=q./7dDF,Mnp.EIV<U[m8E'URd$%i6dtYJMj(I&#/?t-ds3=RtU\H!riCXR7!]@5iIQm_Y<Pu35\J`@eR5F1N:mQ2/iNrY?][2FasL+96>]mXnd)$H3O2*pS)htQI5f]%pf50Om8Z[\f[5qBG#FJC\8?/pJW_0A/^<h$-o3ji4?s^S!W_04BKH&0m9BhOFZo#/&V3D0Yk,(K@$.FVk-F64NPn\iK5>(cNUVLN%A?t[0VS=AJjVSu([4QE([/Lao?t9tSFR1.RaKC@jI?E>Ef-gB`KbL,_SD0&2M$ABm9+%B\1ekn0[a)\TgisQ;=XZdH5FIkXGlNYP%%l8K;kc9T#cK_0%=C!H13+o'Haq>U6e`bWM.dA#:NF][8n'd;S^$^O3;"U'"+f6cuN&L$LrB1tr6+:;6P8M95>UsUlip@,>e*Rm>%TTKHCTSUd>jCh?SD5,<BRV_*Uf=M/-VKHjnU$AI)'\2<&R1lmBJI[9m$[,)6\YBnh)h`5cZaub?GB%`2A>LaZR1F;.\fOhYb"M1Y%$9g3UF%+U4K7_^-CGd'@,)MQkEE:t9(05.*"XC0Ukd)0PPuSs4b?!1?<J?=2T;rtWS(;^WhZ,JSPd\rGIJ'bqoqa70@QTq=>8R7S%2o]W?B#\$]`OVtMNi4?YqYAT2n+:`JC%R=AbBjrdJf'8RRU:r1?,0uS\ifW]-[L9MChelbb0V[9=])!XKWMF2$B)k;3>&]h=%=^f%d6q=jJa4<=k^2C0E(bjKEX*&g2]ke*L,Lu/@a+SI)Err;>.ao1N#7,uU,4l)+c/Jm7\Qg&O?-JC]G(._U@_&V9paf-GmEgj#$S(a%F7TGCcp9(eZ9k&=/8j9t,uZWu@MmaH1ce::,Adem+GD[)Ip(;H63\Qa"6-F4&r\l84Gj?e39:(i6kC_(LBp?5A-0\S\]VV6h0<q.%Mbo:\Em@MuJSu222[J$8rE`$&8.*ENJH-Xm*/[;E$rKR'=NJ#jE:o-qQ3)'kLl78SlWD;-F@O(0X$dX/Tm6'3Ydq3;i[CtBXOQ>U%-FeAs=XP?%Vne*jO'Kl98$HK3]$#:/V_:IE\SgE#MK:FMPUbNeZ1tUba[h%Ue@,Z-<H&RC#YJLM6KW=/oJg!!bVn+KX\\:ebK4Y8%l;:.Hk2t*:\V%kP-&\d(MeVTf(g*dL$e<%[Y$8Lib9:!u&LB<?BgYu6<2cVrPoLJ\;@9+PP3ir/9"iMI)Gsj$gIRO>Lm^Ut[BTeH%%ek5r.<*48,TkZC%T=P4$;+GMM,BR8;2KXNlC_YjdZmGhYqgpF:e_*[La3EFF)>I[Ws1JK5ne4Q+B6Z9;(cU(@ISg7p.?na0f:<n%.YRmqkJb>k433M&=H0<oQ4lrN7Lk7B7@SJA5"8H_EiiO]-7^l>\O45W6qJE[Gh^X72*AMd0k5O\2;#lk@:+OT9X55;"6XM#gPUPa%qR&30dqR4'$dJ>2\SgPm/6KTtEiq]eouT/;gakqIG]PW'XSTBdN)aB<3jHk<75:^?#E">XDIF#SE<TN!b,s2qT^L7/2f@bmXL^C<%6#^-l-mio`"fWK$_5B)P$uOCW2fht=e]o%AjD;KR@IK:eacJ`W-sR9P&e[(\\a#lNN9e$\LP1CE-mr#ueQC3POFW>#`'qmdJsu_\%X@EhCSM/[2^h],q]%(<mB^*\F3DT?[XrLn0Fj=l.H#5!fB+$SbPGk^9dJ&a6c'0K2>;\qTR%b8_?E,sC>a:g[d-=d!`b5Lf2:F#_%EA3CgfW;b3e't8q#HN4A%g4LdMd">ZcQ:$0!t2fk$@$_XEsu,%5$M[D$X_26BOs[!:pHu#7XT(]`E<Lb"!64Y_j+AEQmK/1Kf;([%^KL=s0CsQmRo.f8iK?/=m<CWg<_9i[Sai:)%VJX!*kTbOc$-ZC7W"9J3Pg'm'/USj!/@@5E8YMQ\H>PHV2@SkY&;]%)PgQ\.iOBi%7HX%;W`R_"7UJG?%KXu=MLi'SW+%2O_$$9mj1h?u+L"hXcM93Bn5hLYU_>Fm'gn0dDT+u[K7gY6URKR-R49n*a0eS=gk\BMn/H,s%#e5oabZoh#*`^t4_oRe]X_+K<]q+;FmG+j!!1*cfXE-q?-!jJ9R0^g#ZK5@u>Z)hbHL1apV\r=%oI*`M=\A#l`>.3<?A8V]57QF`%7&M)CX+@j.[$2ID?.Dc_m6D^OGO-!#3%\l7<(<k'Yn,*X=pM'2D<a1/3'&AK2lLso@Q'B0m9M7!;ATBSaJI>,o!0cNr8M`?bY82k%lQD1e!X,P.daF7&dp!-LqKti4[[=EB3qS\>4&Ai;cJk"(UV+2a/5XrajofPs'G\(Wq(!_c5F@T!C$@oDiOX*rb\Ein,CNX,pm>DW%28<0)a[M#hg"ACR.81@SCC=0CbT"r@?gtoXoGk?7WC[u77kV,;c7-X";\E;b,Wk[u&=Gppdh&<"aCGpN</;G3OSA#LZqTM?MY-u5%PONGQ,fj0Q9>MKT&Wp(G%Q8HE2/eNgS!5tTpKGm7GdPEm)MI$:bu3@.*@R5cc^"Vi-U^hR3FN^iE^PKd*'M@>cEDk`TNA6`qT>sE%FBtq'bHPnaMSKj!!kF#0\6)rMlTU^MK#<(5fNN8O8pKotMS5S6[!.IeR?>DY6]4t_H>2i]m#(N';,i&cf?cOrV?erJ]$RZ_)I\+\%l^dQ@?;'79r!remQk>/]B7"7.EKtc]:<ZtoVRtlXbY+t.&tnZdBc<TPs7UqWVfc27d#4+\nC"()Q[cZQ0g".Dh`]^Y5+9^p](YP7%]!>'F.5!"Bp=bKrB=%Q3B5:T:gtC?94[4==Ho@\,Dm*Fc>2C7u*t/KFVE1th?<?=]i'8[Y6In>UnC^q`Pe!,(7-;D+!R)[e*e&&B%Gp7ATC!A=q./B5RAnN2B0T>")\HLVY'iUuap'Jle2NDV'p4?%3!H]jKB]3.s)bW"=1$i(m4`$hm+KC!TF63CT)%j"'$:PaZ)?kA&%;[2?c"K'+2AY_ecJJ)?al3+L^j&T-k7U&b3^6E3k:lfGZ:32DjVNTBHo%"T7''\jgn7fBY68JlB>ZVOk<;S*ZCPN:kAaCGhohg?q%c:u,]ESCcU7`=D88_h6I-/iMdK\drbJ8)D8g17#s&A$ABpKc;`cEB.jfceo=HK_pD:#DAfZ42\ci+S?%[^]9OO@FVed,#\1i7&qK%"r(BdNFKh',DFeK[7mB_U0/[.,fL)cOi<;89%ft38?8.n&l!/(0[;K#^LpgBXr<:"6kO+thXm(BbEAc19$-_=BQ`fX$`'CJ8e#$&%dZqc+RD;%]bVBTOWq;^@[2$nWP_Dk-G*Zn.>^laqC!*d<CXbp6EBmh9%9AH-;PZCJMX!k%)4aZ#65DPaZN\i^H/r;4bK9B,fbgci%?o'b.-7A^87fX$:p0'<Je-a)>a%7539jj5BM=FkIL=Tst*>shDH`]h2"-?D\'Y_&,/CcLQi-^HA%^,=G\<<",hkS1&LQJT2GMe4p%&p/JC7<3cV32!ghIDFiR?`)%0)4jsC>2n<+auiHl#XpAu/;K[tbLL7U3U$49Y*l\Z\u]0_)YFm&%8t_N3p7"]*j"cY=Tk9aIC4;&%>6Kbt<V>*n"$[Ll.+rd0q1<i7cZ?#S@<7B)I@*bl1!sU%%E8[\O-3;TDAJqp':_2L%8pOE7&8Qi3Ag+4:g=Psai^tH$6.o#XE4*r%"9+0/FgcOY`_7>)D<MYsCo<FIQIOLDVP-sg1([GW';@F!;0EU@(-,A0;Sbsj_UrTSR3PDh!0M>+,n:HL3Y?scFb"6$)8YN7J=)bJ%:kp"2+jNXig8ed9;G0"+8u2b.UZQ`t3%bgnW$>GANeJk`/TcEqY=k]1drA]$kD?DUMK0m%*[q?(PDBO_)00"[5'4=-i"No/DNL[f%H3Q=.]69l/7$u@i=B;aS?R<h=)HE8VI=6DoR?><.gOpt7e4Y#42?@pHj[n)@?!U'FqRQm:g273Br:/+R7h:><cA$5ff1!pG9`9`>%Im0h?SHfD__a!TSq0BPuG3R/hhXQf/RQ7!8N[E)LZaK\:^$4nNMuU44J)$P6*:,nZ9hq;KmqU%da2\EDefGkSmB*d3-YGBX>/%\Y%Id'J\r5$3W@`>&:g1^A[SmB6>XQmQ<J,e-B_/sPh:.oH7Mrc&M=FB^4I<-5&J@>HnnCd7P%H$IH>jLeKe&hU:gA:;lo><$2EYgD)%_=mlU79ssNe9p`<oHcklStF9)6]Zk=DRA3<Er1i'c6os__#aMqm`B#>oQ7[Ql3Z7"r9V>SrmRdc8$lgX^@SL14.*,:c6iEA);X>p%mW7f-HFgQZh-_9tO*50b)fMoc[p:\sH=-7r=Rhf7eR#AOiP-B2g[Mu)d/P<iO3TGgem(&]J)JG]\G41`]'L@3B52N&:Ab^-rQ/Ui%i5&_0lTq]nrn%(6O6)RU+$3^1_e,hHXUf`_r54Hmjg@<V:DWiKNVlTO?aF@)TASeIXZ^k[fMhD2s1R,*^WqfmHH$AC*'"FP`&H7:%$I.F0_uF<IOI1ljmD^'J=8*5$k)(>-SSp%!QKtfdhgSCD0!?0e)%+u=*AlZiJ=qD`9_W#rE^MIlhg2*[_HAmGh=!LRorYcF<;uV4%e_CTMWuGs<!8[**5e9Va)GPO;XrLR?7gAZG+$716AJk*8ZbIPT:G:Q!jQQC=NqbgC"o6='ros&_R*dmla+#."3iKnS2?jWef.!0D%fK;>[3Bf[]gYP.3P[XR=F'9d95br>icu3T]CL]STF>hg#EUf+X9MY>+X2bY3o_JL>MUj^>Xke4UR@T?8E;6npMk<sQ$,_ZCT08_4%*Y5jU*rV4MY&D)KWo42#Yr?beICaTCmF']'l\)?tiRrF0Fg?2Po@)s[?`-Egp\%.*F,^F1<klf72;8N-0.Z_pe#0+m1KnjPQKRCZ%E+Nf]'BANA@+\9,-i5:/a-W&L[$^,6W7q`1J%U8S0R_X(F_`oW:+*r+*ZjYidMo>:8<0=6Srpsph>$d/D!fBk7qX3Mk$[.j#.*^l%`Uq"bnGM_[pLi4RAY3(nQ&e%T5UrYXo:=7V4clUg6UT^32O6j6JR;^eDK-Cjc[!KrQ#F-[rr;uT?O&+NoYo7V]DM6bn5]4[CJPJ$%cW>S.@IK^,T?l(`B#i50e'leEVm#q+h=Z;:p2I=HIt"t<i;^oWp3QW)ZYWoDNGnUl<if9#<q)`l<r^oUCA72':'iGX`mCNAVX&P7%]itC#=g%f%mf/1%^$A^IGk[YeWW.D@Itd?_#"scd452ZXU#f='p\$iDEh[U,YAuiZNr72=oP!\8Y[@2"j^Sjij"&e:A[Y5Bs4_#_%_HSQ);MbCW^0>B+k)p)7XkIFfTh;!X3t.G4dU@+0*.CV[`ufqY?EC[1`k2WG[<N?kqUr;ha!YY`Sko'?s)7/6h*69BS$&;%cd$3.%Xkn1.m9]Il27fo5:M7:Xf=LnMaTMZjc'-9KN!,h?PJ,*)L!G>WSfF9HoJbRiPCk*O'.TT(2SW""B8a(Ya0Yg?p@p#Z.FYG7;[g=L%,%"iEgA;D.a4&jsfg"d<8?`%+\9-d!?`(Hu1^O'_s)uN'G^Mb(o%N]Wm-sd`IsV*\ImIH%mr2b9SW:Y'rBu*W^Zk'o\mP'^Bio>n%?E?0Oce86Ds8CNN=bQ;A[?KMH@/\>/Wt56q.ben?h:qtPn)"&QJ+iZpq:Yf6[sRtTr9jA>r9V2UHbA'&H2X2np>ijL_IP>PVl+0k%_\7o;:]D/obLa#XIO?4(e$,MaocO3m@-?S'jQQ7#na(5:"LYuu:3UPE#3O%Sec'<!FT*Y;K/"iG_ARg*kL/VMJMI(Bn+^l%s%VYb%f#-NTVdKAsi/HEnc\Xl<fIYPjJW?WmP,Dc02#=,Pl*K&bb(&^+S3>OiH>pNHFS9lh2]nS4DB>G::Zk5m\iVp>md)#ILhG27#LhM8%YBeo_4crqZ6_DYIVp`2HqpS&"DGPH%Nb;jMIC7l.MlQU4;a.4RniPW.^YAJHaQ_i_Af(L-T<NtIM/F<Bi5VI*CG5AAZqI!\$?`Sq%QfAi%3URWp3:63baF,<5T>mUQkl)`Dg]_#Sf4('GkJ3Mbo6$-ZPL;0BTLGjL^WAJI]Di5La?SimAFc"??/Vtl<\)tpM&aS4j)5Tr%pmk`tUSLS4c$[oS\ps>'$rhS7?IMcBZ'DNWIj:K2n+;o#\lR[n^#13kf*+tGB>rtB-TfdG?Fq^oZ[4k(phutN^#I!.2BVt6c]S!L%*F2rC34do1Y8[F(^?WI^=Q&qbGcB%*?bB@8C#ru%s!FB2\,<9+1IM-Lb`Ktn-R\-IDb#0HDmOp2TBQ:Vm_8klLe-N\j2?YY`[iV<%s0,"sk-W9\&,`AQREMU9FBQ")G?O0#qR6SFrNf86DhmIjI,7#WS=b4:*I!S<%o3]%\6GK]Gs[`s)nj_bIP;b*B@W)'g%+RY?:hPP%Bti_^ahdW9Cs%BTnDob]9[G<I4rjQJH8adp`qT*o^,is7.)#7\[sFBL.OR`uQ&n!(Y5J*?=LqL"o$+m6NpkaF#h=+[6dCu^S'Lu/%j.C,t+)3_6LK:uIPT,AW_L?H"SlTm@dbf6sN.O8``m[dG;O5(8:/9)YGP@/Y[7*`d=-krGNn'ktc)8UocR3k1Nqs8mU8QVt/<*t0%oZpi()X(O7:pU,sZg$2APM,3;ht`>r:\Idp$0`7N;joG+Dse,P_tgNBb9-+ipWcQ/kY:p;pgC[_@$?>RPOkR.bW;A]!SQAu+70$=%ItS-/rpU*%(O)JnTDrL%Du,do-@>MbRfCR/e"a848=ETR,e%kR<,HpTE&sJYCHj<2kNLfYc$I+L#ME>a*kqW!D/Xa32KX#O[WfIZ%k^3mmYt-hR3]XK)7h=.rT25H)ZG/UeZG4`cH'bq,POm8Zo7JgB1uIMQDIR@)G.`<$eg>nNB_HPXZ\Pe\L4+>Nc!8fRcK*U!&]'cG%POG77G+VhlCjg`:5CDKIq^*ZIi,*K-r3*$,r-e8$mFgRiamoApe/"\UiR>oTiIaj@P3tFMe0*H"f@G1.Y@2o^fSHpsc\>3_gpo8n%;La`pim)W1MZ.X5NLR&p-jY+fOrd,B:^4B(f7SK4(tPQSCQmTQl-"gjgqNEg1#$!+*j#t$"9(@E0Bm8_4nU[Ke)A(-n,FlQP*'*k%B-5E4^TX3"cdn]X^V3TYbJ1'<(d4%R*?7;[jF:_GPtL3M(ckuhg/kTVJ18O^nh1dY,3q#EQ[He(rhpU`]@loKdOuC9;")-[]smY*%PqAr,#C#N8`T?p)cl_T_pZJij0FC[+=_).[qW+KM=O"C\UbqQ@=6g=l3a9Y:kD-r0Yr+P2&FCA7Ri0Q7'Xlu89on-*fX\BpZg$^r%p?QhfnanJICNoOHcR)H]&,+?K.O8]KFlBd[mA&q!q8q@9jQP8Wc-h7)POfH%^\G#k6GYgQLh1Q$7l)"m3BQ;*4f6\lj0OG?PCrg4%&LEBJmpuI0L]S:b@o75!s*0_3]=)^.G.dNf1*!_Y7;#m)EDW%D-oa@R&FK#Wpoi/AUZqLf&_u#SDBFt_E\o2Z4BH02Ue37uOajiq%hn;!1hL0Bk5&?EK5<-3Xl2EB*ak:e'#q<U+&9KsjBeb"q[83]ucg>9Hq=8K^f8s@Hc.ju?T:_Y_cbK66eWBX8PKCr9L8Xp(k6D_,%?MXNt)C&Zc-F;samU,2qgDa=+C0fA-:t2*W:M+rh_`'U,NtOPe(TqMZk(i[qT>"c5!lH"k@b]R8f,Rd9%]`gFC&fo(=q0DdD/B8Y%eOimWXgl^&-a_RXG,E#L%i4lUYYpptVmcGV"Z>)#__&an#],@goXVstrpk\b7dunTiNsSBl]FUtf)OEB&<(Pi)]Q-:7/h>]AWN\n%+&1%8c*DE'4#rs.EQWd_hi>/d`]BZ=]N)GBs87*sC]o(L`D^c.6gJtVMbiP)4MCLp]*J3\_`&afmk;R;GrE=b.@u!`Z<nF)H-s9Q%l(@@M].lEn[f>FdCjLEfjOrLMlbh9Giq3$1e*F@=B@$8D?D7%Uj0Q)P_td#-[siXFG(&i;n9D-ag_F[$B#>XHH!8bbo_chqg&0En%)r'WMK<e=o3Z2*`fr*N6YfY;bfn@"u(H+<noYDkeWuK=WAuF7Y8$ln%?IJ-'q9c@iiprm<)dP(oVlOH<p[J$`g854j)uh6P)_B@l%_nWof4gM*HnR.R*QB(Ni)**+/-l95S"lGC[:!`#lb%lsMn;4eqBk7N@h<HX@fB8/(*nj_sfkfVbi>ZU7jg2pl/)'A3+-E-p%\p:s%0(%^r]X[(>rlKkT4?hF]IS#1@='$[`IX>$E%HF"CJO9mdqqrb]3BDb@F?ut`o2@_-Y1u14*M6$W5(7U'D=`!K2>5V0msk+O_l"5Z%j[FImFT:9Nfc8_i*B>WFZ!h!7pZN;QQp*Z[ji1rR-a2=63_WnSFa]Xk_V&-_r<ePM;3,S;>tS`n](j4=o8Zb?0A7BC=B7)HO:P!N%UKB4apcCu1m9nI<q>)Qjm+CJa4Zg0f2][3*39/0s-e!=De68?,7=IPOP<E)2#=ks[KTj*9odL:*)NISIa_Yj%XD4L@<W036UL/I`%pOE'e6qT_HEp$N3H9Nnge5:ej<=S[5M8u9j33'AM^?Vf)XZ.f+RpOOQg*g35kp6G2GKQ21DT-prp2fENEgOBGF1&SV4]N;?Fj-']%0C<SLg%#G=Xk9@Nh<*n\-c9sah1'T)\bNb1L:dV[:_<7F4`\I*I(cc?jRgRng#;"DUP5./S&L;.r0pR\MsmCrKA#pU'hW4lHZu^G%06go?Bfc*SK?<OMg<a[)qXJBo]U]j72`5tD>il<['ed@3X-;SmrOKX3Q4#qMg%>a)VmcD$pZAu;7]eYV!I_Ygh6.X0j6?!R_<tY`%\:qK<ma:8fl[3Ae[XV\VL"5WNI&2J;aiij5gKcLV^7el5Q?0**K_e_$=1R_ngb)gnJu6HV5,3Y35*pZ`X01mLUaLM5rbrbt->O/G%]96eCC&lcEA2mceO.K[NA9,"Z("TF5>3r>c&E<uKYDl`.rS#Y=0oX`XO4`ruSa\T6_>N$,`u"QcC/^VVDN^!mWAaIfg;[H6H='qe%O(q`cZ`;PcZN4fZ#<*5"f8VH%c#KYi<T\[BdeZ<<=-2$NEjV`>[>WgRnfu;J,*H=4&N`Q#J)h@LFaq4VnZ%&Y]+5srl@_gj=.=2D%qpHpcD`0fBdcQfB?(1eqZS'#hS#0K3^+f"/n^X_T+).>WWkl"LoM]LJqI9J8\C6Hj\C7D0Cc[O@FF)/r4"b>@qY:9+FFMQn4+?bj%E,no>rlUo):C`/6Q&'GYKMs&5!n]`kf.mjI[^PEg4?bchV(oa"LHa>XbFbeGQDlE7[@lhdO3HR0j3BjNFlUm3`ujKK29bG/5qFX4%+5DA;gT.ftI.+2,PHV.FCYue>IcpFk_o([+5!/VY^$S$h]COP8roEq?TAo#Uh2Q?cHi*CFhuC(\i8'smhYQm<m!La/ht<W(bHC0f%BU[DPT=:CtC]8GQjq$)$\UEetam&3A:]-2FQZ(d:q83W#m[`0Zp<dM7[r6E<8"9DE]t_1%rVBaEQ6*H?p\"$g['b>Xh=SsIB3RTM%J#E0UrS#9Mn]pC=a,eN;?[Y/QEPB-:rTVKe59IQ2je^.):Rc],7Q^KGlCXq,55Y&cNQ7O?^KCH]]%t!UhnJbmqto.:SmFXo\omE2%q=^'apRY^&b`fI5duX7L\"8'KA\)r%qr"N!TAFjB[eW%6j6!6!V`2).h9I[_Dgh-+QdX26jO;?qT)EUjr7d^UCjitjnK72#kF_d]%nS%l\,8nC#PJ-Q\Qi!DY>i!**)a:m>q7QUpk,jWdm@.2Gr;#&B=)W#kp%e=Do_b9S^UX$Xo:*A(P8Ek0qcE5Mh0CVKG0Q"<RdL.>%Vg%lb\@6\Fi:7+kXj=/!GJ:?RkfmIJr,:K,H1-$*l#OH4`V6i#Ncs;@]_^K_2fGM0n(uepl,Mu:G%7uXZ+Kkl?"Z=gDV[DQ@[OUr%ehhg.2LFo\Dr-iihq*;QhNdbLdlRg!_4eNXf/o=;Dgm*"NA'a,lbhuV>sA6G^@?[+4T==)XY9C^IFg]/j*U4frM.QR$b[Y>H%S<&%\+.Z:fb)KXqfcAZ*S5FJI^-B2\F8>MFR-s-eskED\GFI/SeC8u5B&:2jO3/PaWEb8ptr9h^O8cTmFIVJ5EY)tfC&V`Sb]Jfa2?@(%Wk&!*qff7>XUh#:Vu;#=hQ<8o5QCNarfT1tTtgJKJj*aZFQ]5)i;580GNHMne7dR@/H"JPerMrD>LV%3](f"tH$A<=f$@F,T&08'%Qb/I'>CX3tT7$XkXcKo>I"12HoA-a4#CkJ+FQ9WELTeIT^An%hiAZ,@h#6N9&'f$LAC\sWdiVn\cLSgEfgkgF?QX2LI<9[okB#j1%o(LW.hmiKYHm.eNdcJ)*\uT2nl+Xa<I=!l!rd"8+VdFng?RU^.=WBW^44gXl3UVB!SBCXDYNHqt,Ti>`\odc1eb@@mCi:?(43bJ.%mdQ8JRsjParV5IKp<CWjJ)#9rn*GFI.Mog02=L>0?d8R8ZH'jCp<3.-NQ$0(J(RQ+YIo/Op?(uAn=.$cRTo5s9kUeJc1Ji!2f0Zm%*B"cs+)_"$cgbb^[JnW5mF4q7DghP)R`O?P&"4U=Eqmbrr?(HT]"Rq3?>eOG:\M4UpC=t#_fOlXI!Ffs^@u4'4.biPpW]7i*l%7%%_AFn2*_%lt^\-QDbL>EITA?4TVJVp=qrRA=BG]Fj%f^_>m),#O53_sF2nM:-bfJ%i:QM,cm[ro;3\AsuIGj"3j5Z3C>MYg`qrZkA%P97M5bNmWXn(mm'*Zk1E]AX`FLVI0PH0<)O+867(*rU2!lc+DJa1Kd9e$hMu)im3HIWkUH`ue*cn)hs1\odc(:TsVp$i1&.=3JMK%m2t6b_fPd!o2B^SYdF-"TY,F7lOQ2783d%2FJF-]4I()6TA958:E'hIIIO@tO:LDGQhb<ts1WsOl)e`>m!lG5q!jj*WnYQO:X8FC%FnFTrq_!Y*msafW8%;CPH#r<97Q[_IIf&I#p%@ctT5WPT^%9_DYHN?r^V'P;g3WU?(:W_FrRIYR07S5MCUV!ih9oYkLV)m*q=_hr%[nhbg^A#gtjSmcKo(esTlgQOqDERhA$b!82na3sSf:I.iG<UHHMB,UHDJm4;pM"sKrE_]>inLqsIr)h`r+#U^rb_85i?'G.8Tr/R%_#Lhtr$1mPBfZ+gqf=tqeCc2IrT&%r[nZbc-Mf/cP4c?\E:*ar>P*tnIZus+IK2L9lA$V?o(2X[nqTs3\B2G>[JuJ_q'k+i4b!),%r'SK;0gCEenXl;3k$S&3r'NEiA5e6$:K]^QpMS7Ujo_t`p4_?JfmEX[J$qSoi8fS5aA]N%DL'.s2Q4U@\GQqGrThWhfd+X$I:1NB%KAYOkG+6ZNk25`UWS2dA*QZhcKAW'^<i5GMrF('P9A?sHJ,?GY8Y35!ho-A4[!XS-_j;pNq<,G0hg+6>Xg(A@K<)_:]Z]4'%EcVR%.B'+k)\Xg(6lo?Ojl0LZVTC<'XR,#Jg\5RP]Pe<4:FU@oD$sl_=&s*MCqkpGkH[`=D4]19rRE6iI+W3)5:H!;kE@FtlMEa!kM'P[%gL&,+(-h^%F&T'UHp,)^EOKf3c/RkQH-6#*dl)C#<9Hm<qZ15cMf7PoX.HWn>F+CDd"\p3!]T8>D/hk-Y?rm'5Dpl`_=Q,s;*3'H%5/)MnG'<]?`hW.KJ"49WNsA&;oLf&DnEqIaT_E=d5JA,,HZstmUjMg+Xkh7H_a.54T'j6.oUc"X=a."jXLh9r`4#q6q<cKXSac0_%o;f:=;7HFMd+-%4M)s9u[C5qg2jK8/`[;5\.U-:kM-h3DVJg@s]hn=?m4[>-EbB1V@-@FSXmh<WH:kdEc-H#P\:*E/XcKV)]s7+L%f8ks7hhSsA^5K>D5'h>Jep@2Qf"J,&KK4[3YjG#sX``",-Ej?/cBDnYN(r3?]/02aQ*,=RYQl9MZLQl5\%g[DdS1gCF<TLr@^*'k%)buG8h@[a+m,\#IpTK&8`T.i&&pa%O9F:"Ld@g?lh`SOJc/.R@?2RL-51gJgNXV@\5Mb&MqT!Ft>G(h.QS,=%iBI*UCNB(+QXj(.%fY6YU6i9gJIH-@FCsqo6VSeqBpl;>OMhW6rVHrT-45774IWsVt`p87/G+j'UWjXL%QI=sR:I!NYqUt,.)uC/[]q_&d/Fh<kn_8uH%oiEp"^\kXm(%M+]([;$QI5\/][a;1Kh#(m`b0s.hD`"pEJ)fGcdgrp\DqFTfokaTo%qL6=f)B^&n]@,)rFsnJ=+=AA[Q07`d)Hl=%\nWXGn[6'827;9=:qm4\kEkY>QOV<VR!u>$fLC3h[t"8ErI4(XcIX_l0J?_?JWc;nm+^p:*us(srEGdCn)![%<u/A!k1mU(G=*I`%d<p:b0CSnegj:dOLfX)kG95,gRs4T:&";IaFSGRg>1cu!qs&14IIiZ+s#?C1ci7B[s'>1Eh;A#-XhALs'h-^YpjK:qruiFK7#6!N%3e/=Z8H8nt%A$B.2@6$<"?AU54S*!1qp^%t<Sc1e)t]\h0,j97?!YKn?E:fTn`8$-a0*'qfC",b<8[`8_T/95\8q#>4070'fd$<,%h!R!rfF-lFQat\\C4`s3^:aBacLSpbf?I1'IS27ODgssWrU%e!S'[;TmML<0rp0+(rjGhkk(DR#bN5o\N^"L?]>2r];E?deBYM(R%iT3,T>G#2MI-Fd[s-N%H?M!RaO'gHI3E`k"<T"+2q<OgAc[PiNdUuX"4FB,(HgC!g^[?LCnRkql*ejD.r4_ch]CNf1_e=46]8%K`%qdsJd\7;^,s5:^@<>0lY@cuUNq=rY:hVt`RcZ1ncT<HE:rpN@(TBpLR]2]18NI.C3)Afm/.WtaTX.?8D4t`Jbq<ljO[-]5.lcO[M%NkB5`PO8:n)XHc@mlA'?09.#kp%3-l=ZO6.\USYlD_*Yl7o#ISm#C=<0;nL^9tksqq*TYY52UX7rRlhhopj&aJ"1EMc/%XVIWkDI%hp1O4=9#EI`gs"L>l4EA`F2uh:LNM3O'b*,Z8[9CJ:2A:1WdtT7p@&DZ3@CYp$/rqp#*h+,E(9fo[T_W>=(WZ`c"QLeA5cVYP];D%-[*"h^OEJ:E;eP[GIP;5Ej8N09Af[?I,\7lD,ng5B5`7n'5S9lp+DljH+R?G?_3l.;]@8]-g/3lE<(Id8**X0n(4uaDW9Gg-ek2U%1V607q`f8=rqb^HofrH0$!!LOhsT?)I!2]&#?GC:rVVB8:S7#]XQ%pD&+fO^?iIA*piH&6ro]X2QbI`kq>&n-K<p&'K$;6&OeFnY%#A6:#IfJ@sB><2NG^'#o>Qp2?GQ-ip^ZtZ\%q0k"=^0Z#G*_CLB:WudbU@p[mb4_""m^3tr9htX`Ckt>8,5\>HHG:[^=iPYkIYZ4%oOOSQ5MZ8)b1GN5fmRmG/kfWTj#_IfZAGnPeg()]R/QNrZ]-c55<JfAO4M6XpNp2^)^!R.q;h9cJ+)%5Pp#m`p+Cfu'j$/KHg^0q%U[>8"??r?pZ.VLRinpA8G,O%sIXbu0iEu7/hL4nDYBu0\cORQohtl:.EqdeMqq#/(Fo+ruV\J:c*niSprV;3j7m2Tnp1c7(??U@[%HprHOT0Ks]_pSE'/Fptj3n2/5]CB,%o^hJ/k&7`k&o*Xop)rP]4-0)ahfnh(mp5q_9IBu/17!!n?bO2NU7Ue_FlU]*?QX1#\8hPr%rYIN[\Wu:+/[tE6>']i-p9Gauh)fcP^H8t!G;"5WcT\PLlg=;ul.=,1Y?h"pn)rq*mgll<[SKY83B-m/pWi8Br+5cEc1?GRJ$Hb5%h//FX=/+=<,*+Y`PQ1Q'[SOWM[=3bHO$9Xn3.-$(Sp^IbcFl"]n`#H7#GWtq`GZjrnE"#=0!;qdB)DSj?[o?Tplf.R6[7[Iap:1Z%%;r[=Os<Z^c&_S%Du]O<ro`:YrS>)0h!##L?`7<l\Ti)"*h(9u<f[F(\osmE:M+A)g<#!'?`QjTHrDEhlEb2m.S]p=T^K't_je9M%TE"HPr6CpQNh?&_s*,hh*qA(P^!G!EUL#p`s1.pqiQgoDIe`]_S(Vf[j))@(eM"[[_Z^A'39/=9NoMtHUH@Ko$1@N]D]V$u4Z[q2%R>4k1J##$io&9%]T<6d"&Ie#,,rk)6mU+j#k96dP;l.(m<uYfG*rYWe>ecqiCN"EhIe;sP<W+ndfNZ9i^XtGG^H,]SYa5mh]>a2>%GOGK1C$Em#F\b630g@jgBE`<\T#FL_*7]MqGZ/1sTDmLAlABe4^OQ.U\)!g3(L'hEn3h[rjg$Xn94+[eZ)S//C#g@IqqI=RbOWpI%n>j,C0<2`nL!@;`m8UfH3^8OPMAT=mH8^X_B]>f%[f)]e]A)5V\?igApup\%dpK)8KQH80b"9gj]u?&aEplM9eE"J"nX&^i5H9=Z%-U5k@>o?Z?E<"3dXMOScY<Fp$CVMY&o(Lh;!RS)s'3FXX^$Xe%UYG\/^:mH*c07A=oq/\kGkO5Va"N5"T3qCLe)Ae<$nm)!fD+k2%.R^q`\9mNWjIabBQFhoZr;P[Kh0Zna;e;\o4$Cb;gW*<Dfc>P>=B,\#"okn,rSs57ifS:`%e%a#l&6?a])Beg4rfP#AJ?(p>1*r)%gB[4SHjig1b9ofMSXq9L:Z)'B,Q+e458lb6\o[dXrj1(0Y2+L$\%L9k"oZT)rej;2o"Au1<grsbg\^CqW?5I6hE$,bHN3j#c>i73%1@G0^k=g.KB<Su4Msmh+H#ieWlebtI_4KeSUTBR#aleSqa!Wf!Y'[I$mbmGm^X^5Llbf:Rcd&[R0C?r,^\m5l\u*eP*Qu&:HEt/U%97@=WoMpq*qXi4,chrF_K7buS<nP[iDt`T^<E8#C?JW_fW+R[Aqst@85M=<uDI(##q7$5oMF#7S5PM.sFM.G6fDWD=+mm4oDGOVg%2eh)-o+'c+n>7tg#;:"cffs_lZTLFnF5c<G4eg9YZ_(OVrq;Q5p+F@,67Q&\o(I8L]]-k74tMU6e:SjX])UH[msk/3c/QDI+kkfR%8Qdb:Ti0ErPrJa>eXh$CkZqs7=.XJGs-)0SoCo88oh"7S3u9PW^,2JSbI%FZe7O3EIgo6m%p#PZ^:j9s:K8%AJ"`F;X3Wl-H=Qd1%E$tSVjN6N^7q_SkDZ._mI2gQ7<KhcTU$hl3+"B9/:KNpBb%%2anDq^NJ/#'P1&o8no#6<Ts7g#8H-m\gq"`ml5NX5m;6Q+$NAO;L%Q.fZL`;$en2rNXP4+I8&ia[AtleSanqYo2b-XVjWIn9lpm%+%5_V8Fia/a]^^V%%cpZ[s2NKT@Xr-X"gm5B@/Ira[)mdAlEqLbe#%rT[HJCX.E#3qeKThn?^PVuHANa&V,FTi0%G7@qKSYJ9r$DkW+7;:K3Ms*bt\nYI1CrdOE_jk#JJ=12I!\L7#UkO.XV*0i%d:]9sU%PMXMdY(PMXZM3$2pWcfFF8O'mU#fh`<*B4oO1S2CpgO!ag7PjXV%8W:jM@rSG&VEoK7B9aEH,0@be4P](-`m)\GYR2P<X7Uhu!#h%ra,T,mo!0S(YdhrIIe%.8>VUpT6^1QgM9#iT55Uge]7--'Rsfnmb4(VnF;G3Nje\R5[",.s5DMq#I#9*T_`$IAStnYNEpd48_iY'%[21LHN8(Q8FQBGIqSW9hIe_pMdF$pC^N?TRI.-.nNAIWJ]5Qll0A!r5Ep)ihVlt!o=P#r9?XC9G):.!<\i28@4L_1X"=/B#[s7f/%o8PPm%^18%4HBG>Y>#B@gW@-Ho[V>f-'T5$jlssTO-V_r<aG%fcZOU5G"JsJG:U/7J%`"6V'^]\FQRK8p<?*mkO*c2p\S=k=X@k\%TBu!\GkfbUDbkj=A+r/q4'u5G59EraqV4(KbLQCJ\_YS]3qusK+r.<)q'R`_qu5AuX?V==h3h`pp<VU*rUR;^O$7gNG&R1<DYN/r%Qd"CnGHVDs>X*/-1k,&hrqT>CKM$B9qWuoP(S8:lHZSo3'o6kEL"G;E-_/=<^O3]mh+?-Hs#To/+!:C[qs#"-3KHWt[=`rDl$;^5%Xl]+*6`NpgD8,rJ1K=dQ]">TS:_N2Yh>H9W>tL[+Mg%s_cW^\T/7A)B]Gm>94un"aESlO&%.N>A[kBY#ShHZu5Pu3K^Y8%pE;3ll%+Y\UrDVdm^s6IT&CNE?;^t2o<^:?@Op%n-dLR\<(H2Cc47fRQ#htm87_p.5*-dRjF+25VL.'6HUIet3$\6'ee5O)%*lEp<a3-dT(%PHR,0r(h2#q(X@*e<a4n8'R/d043:eOg5,_H[Ms<>:]l/kh?K7D[oW!jmT[Ngk*EAr99+Ipt4WiomuXkHju^M/M9e)]Qj)H2$X*O%;'"mGPTG/B>Z,c\#@9Nmbrp?1Y4+=@BBpRrh\NVKGk((pbL7WTms)?jY$^jEZ+g7*GeZ-SpYTWY^OK4g<DfKP\M:Rbe4mlHs5u+C%8(upEB)]IBGN7b"#I!E=[fhS4[/]U#p##M/ql^MJ.t,d@]DU^c[O%D<q)d$.s)h>$pO?(6[f,sX;3gV-4F6PYdB!#f*1p3!F6gf>%*mU%Iq-Ruo;fV`9POL5_Oo1+`?<bY5hfSK)M1+j4YVJ/#A&#^%Fn5=TS(j#'Hhcn)qoS,$h*H5Q^\Il9?h*d)Ip]W>,3pUQhN3Yt%pKsI2DngVi5:<Z6qX,H*6G2p/K9gXjfB25)pV).S)"4$.Gk2s,m%;=?nETi>^E%bLfXJl-VZ0rrGIg2kGAK9bEsF-r\#9/Vp[mX[%VGV9HH;A#*oPc*j4(BW1]/%B,Vrbt:s0i@oNT#@i7%gqI<KE7VTl8e[JNK@:n,=KNG4tFN5L^aB0?s+_jh\%jrLbYeoZuocGs229%j5ZPHmN%7.>5I'=s*=/2&Qm:0A3Oor5&"S"g^sMMjiV<JVjs.KJ*k7V8,n#3a4=>CB^ae<H#^-7<qju"eA<]_?!"/(58!S@pP$<;%2rTa(G*3mRK@LudrR"7e&,,qjofop,"/PqDS&9kkDiYuAl"p0A4>?5rfBZ?YKWh#_GYdJ`\?@AHqXO(F&'kddk?i=H[M%$ohS7un%CVJZoVa7Z&21=PX5-]:p@;RleIWrGOBDl<n].[nVW_NcnQ]q1t-%L2Wk&.-tlHQ`Co_o?(XN:F=a"-I2S#*-PejkB+?QYQQp=h#r%F=IY\YM",s+tP\)PqSr+1)9n.oc-o`Zn?:.!Hgs=TXQ#<E:+>gOo9Cnp59A\hg2V,]W6CT9*;9A:&Lc0mbroRgtm:fEI["u;/Viq%dc9K#:H*e"Z+g*Yj8@Z2Z81i'fLhW_D:l[C%Ah]O+2V'90lA%6/8Pb=PYFBpXnnOA]M0r'lRV,+ifMqB&Ed:BP&dYQ;;95O&?s!j%bsd$ip[k9X:l&>.aVdg,K#c"R93[%PD=H@$U13!D-WAQ]2f3sd`tH!Z<$Z$.SM35eHnu2=rLlnP6<j,:<*u#$FdOMK^Nh?jqM0GS%'jkS*J5XHW`oW@$'MH.cR3EI=-BL!9.#8ag7I6>HY'U]N0l6Yno"=q6'h_ZFl:AgSB)Om#<6L8rNUunLYVq6<0Z8OW%Gl=\A$iar%,>VF4PV)'82tK:LcS4g"SA/1XCl"JQqS?;2D54.AZP`)6($]-@)7JfePmP9R\IKU#4?f%sQDn(U>0:uuP1b`J1=Oi)A5f&%WD>6c%Kb4*0T,QO[NneO?DP/(=M2lX^;AhI^YiV(*'4tbQ]JZ9rP6qe879nh5GN8DicW&d0H-6pUYGD8h->aW%(C!U3Pk0PZfS,Jol(=u6%QdI6=PjH1/=m+fBF*2i]IFWPA^=P9UG'nFWMfHiJL7db^_77(oRt`LNXR)HVGJ=Fd=2k\iiY&gc8(*\2H!n+60gRP_nR`eH.1T!Q%:MN3DJ[g$5JYX.BoNiPCY%Pae4)7&^nf[8HI</s"h3K[9qg*F`eErJO#+&!=,<c[>'LA1i?Ze@@1GRGUYD@<MYX8Rgb`Gr91V;:J%hH,"h,[a%j@Og%T&rN"r&7*f;nrNqsS*Dn#Vd^YtGAoI*4P>=%auCW'/3'/a?0\&^ABgofh\9GD^EqfcnU.D*ds>OT<XFP>,fTF>%+08.>*`0)P[TsEKSf%BV5)$T/'7ugr/MGk!Hn*VH(SM)U3(kM8WuJHA&)Y9b_BdW0*)[fCc#kq!i4G1Z7pP<@0V\jVLE86/4]P^I%?Ka]#Filb`eO/f8G:!`Bg6p0A0b1h'/odogEV&hb(b%f=8LUAhI`n5WLMRnop^+e]%]S*;1f(`^SjlqYf;80Q$O^\kJsE6e`3laV%8%Kgr,WV9sJfg0feXSbR%()C])riiSbtnG4bRU&.B9,Jgch,j`)onqocKTs;F^8:7,KKD#9[%,oCakhV!oY]-e([m(P%,AtZ=ISt%d3q2\@c#<8N\a]R7ZVhkSJ.Knlqo1N%'r97`]i9d1QI;e<&1[X@d_l;*MX&hD@OF+\:>ffWFQbI`:jr`=H(m3NU]"Jl[8SibrK#&%gYcn_dAmtg'l<+m\o[P^Kkt'4*rtVbRsiT4cfI!*ST9f8;W$rnZ*eG/ITVe$chR!Oc7Vm0&E@$9@k])6CU8$4mg%.)0L!4:;j^+>%ZhVN5I#g(7_+kNkme`0b`:ndM+7ag33#'qeI<)t$Gj,%<3kCT)m4/K:nhYW!#OguV-q@5FNB's;MaQWN85=^]=+k8^R&)a<EIhi%%\tL]LLXe[[-#h0$:udbZ)o%85)hhBp@QS$5Jf=^oiiTIR@\qu_.d8VW)?e"42.-5D5`Qk:0N\gs$qb*9$_@%%k[=<IhXYgT8)HNe%$L0d;;d=`(-Q`"SChtEc94FUI1h#U!9"@QW:+aGl;D(4r)eS)d$ak?/c0)]J,,c!]H)0j6`LQ@d<;4Q_O=Jrp4]4@?6Cco5_[(C/%KeTDe^94$q"_V4cNJ!c.,B]4"kOL&Q'I0n'RAOAE-$=jUi34n8V%GG]6g@MsdsL:_SK_QU@[O3D]l(qGa!,CP0=,Qu$V=onPVN"?%1"Qb1W^$T<UoFB)Y%MQ'kIGm[lJZ(6`p-HE";Z:dBQHsWX,^$@]Br-heKhXJ+K:`516KC!Oc,ai+XUfq9)GHf'9GgC6jB>u#,Lf*%+k@.G(uEHG`RhBf8rV,C6;'J(Y<#UYkVH]4^__b?qPTiSM3Qn6jZPl/#U.s$b5=@2TK?`s!a\H,,uXCI;UHFd&:./5I`JC_T.u\+%J#^deb&[>PeQt0hGGH!6f;>->]N6g0A"(\-B/hAtW,tbjX,d\[*^oo0f>a&>AntQ"Q=>K;@s'mr:2Tk6<_9>?/ek2QV@?",^9VKH%A-c>hX%6#:isaG#`gq^IlI.N[ZA'+acF[uN:[Om=Q.6bp`N/,@$R@W<Q152a&_^<K3a&n$&p:@*cDbFhfE8K_FALF]Pc]gH311L8%<B?cBUcMEce>OF=;KFK#c?IJAqb<I=_ue<gdF-(5>/)RcpTU.h8lW.C<T;r3OL"54lk4IX]rZTHcI7/A<`ib[l!0LmAipXi[8G28%4><KAjgDr-,F"ITB0<D-AoMg[=Z+M2PL^/CPFHWbn[nX8j[aBG-!Vj9LD^U*VD\TdJI/6)KMP`Y"]Vq%=CA/GGij$)(7;>29^\9N%nr<08bUh]Yf[rCl<@=%l;WYd$qHanrh2DY@/Bi?Hm6[WTV;m-)etQZ+)6_9oCqu9d<%=7tZoVU;B\He8BGDI$)C+l:+>dT8f4pAQ%XTE)c,`JPk%]X`1]bHm-mI\=8,H]!q#c3"Xg11OhlRp^6NK=n@?E&N2$$!p^1b-\5B\Bu+\gp2FXZ`VqFY4nO-p#$saPis<o3\>,%:F*n'":j0&Y>t./#*Fg9J0\E_8upaC6NX6g29BV`##maoWj-[K7%?:c1Roqm!IsGjf],SoD=^[V[VV2.%`/]iAo2Rf*WU5XOlB?Y%,b$jr[n]fo_i+_+9gJSGRCg1EI@RE(`8VMhKB3TWb]cXDGC1c[U]9#n.8Ij>/\N?)&YE?ACcX_j3Q:Mb*3C7XSQp<_Xf?Bb6n;[%%LL-DO7.m71D?()@^k>\((Tj;9F/961f$#\U<K7X^l3r:k2pJ1h;H5(X<j9/8LDXWT'sOKcQ&';m8]IPdOp=(4XO(;re_7"iHW,bp%FESB4F_COt0]CB<)cm3S;T%]G@1Ghn7FV1(BaZ0RS$t(GR$DQj0%;/j<P3L[Ph@6]m<FG52O0#D>GjK94NH_Da18?p\ikG!:E%[4%-q"_U!M(T<:^l7+J\k&CR0G%Y6G9$P3^_$ijhQ403/WSfG1:Krd5)h7J6$,,AAJ:W:WbCU<U![^JiF.s%dO!hk$P01B;bnXR85XR%!`f!"hlENA%Z6$bCKsAX1%JS]k<&P+X+HmMG+r-c5[CA8fMp9i%i0OeRXtq^a<g=b#hc=h6:ZZ!%"Kf6b&.q$1aUY&ec3OF;/'E$%F&Z1QfJ%["<LI`tNFmnOg$H:I?`]^o]XuH=.12_ueg`R53h#Je$sp';'Zna'PH+s?Up"\8:o4'GW?a]9Ke"oV9Jtf1'2D@O^L2Do%nW`]k3:m^:C_U4lkgVA293a@2b&cA)#ZXT%NbtP([u!,37A``=[2#rl&48r76**+ram()p;L@ch>8fQH_f0%sLiF-_J>g1?g-:/!%_0%$AeOatf,F/;.%h5O?GA#Pcj_nUekX:G>NkqG6SQ-h.Y[$1(89F'o'ajtrD8WF)QR!5SZuCh'iRnCCZT>/`RL0=cLK#u`c?r<n%RB7Y)cW!?0AC8krKmHc3ol\n6ZiCb<-JWr)WDrQ*lH\3(rig!?40f/9Q(&8P!c2[qc"R8\.uN!8TPZ&0';S=%lE*Ve]p4C@K-FOY%JSGZ&b#dHA^9*!N/9D@9%hr0N%lUK+5bG&#Cf,Bja3'74%sB-A&?j"U42:hh8e):cfL]/Bi&[f;-RSnhZQ]#iJ3o#N`7e/_O/a(s%N'`s=VaOSM-\aJI]rDL!'F2qEe84S&lI@>AlG+u\W`3NFDFu"JVlEou8GaPp=WqE)d5t4'2<mk(nZ9O\Rd8=eS;!>pT;<1NWg;Ge%/`3NrmLFYuV)nAh?&,^uLORNH,N<Ic-"/*6RUe-r<-G4/R;p5ekmb^6'W=/cS]A.P#P[-fLAn0`JR"H<"uC=s%I14b4r<2@lMR\_%nUqn;YP"m22;R%ds7`@VGk#n;9q?:T6an-uJJWiX2U2,-.eOXUXbhf;kCuQo7E`flfLrm@61MXXbf9]ngEc8t5UMop,\)o_`kG5.%eN*?Z?6.gY^mc7?km2]0bmZE@qC9[HbB5*&5eQBE65>\f<-gl<Ff?P<Sp%!Xp.Ze(cr*e(0hUX[B'?oH.6Ve2OLq)b8e2)0XPFPd%:U#DK(>P]SHrCO%%&8l(,h\'#.jGTA!aNuTO`<ja0kTT\U`PQYTYcLUg5386BcBE&8q+5#1WCNK=99U"p4PV>dj\43KYFH[`=<oZ%LGIYdKT49L>1S_Z(PJD_&cY`DoW[Cq_f6lUUlo7W*%36J>-?iaPfO%tcl$fidQLQ\nMLnD.q7V.WfA#=HKdO$\fUNs)@Fr%Ff[%6%mU:?6`H%f=[\Poa5G*k$Z=Ha2UeZp]J7.Xbs3%=).H+6X-p]^+JI@b^,+p\jAJ@FKTqL0>Tr,k1,Qs3DROFu&!Kr*eYB!;aOq%7j%<C3rg<*hsO=;ED&JV;L:?*c79+s$/^n/n9SH'AS`_MQV.J>`kn_*[Zu)dYa/E)GnT*jK\,_MWPI(ku$ahc1^&/.,#oVk@`FNosM4%X:cPU^gTXbXiQ+;D%5_*oMhA8&$?)r0iSnSe3IFN!npIrj7P:A\)5l@KoVND]"g8fK.;-m,1(,.p_E]Ek)/&qp8Ic:-Uf'B'Ya]f%;skAb6j<p(Di.nQEp2YC?\.1jG)@@C",*(#Q*,R2Fim;G/$Wf$j&8Nd?)-C\&<@Lf?`QRD%DCb&&U!2prE^N#`%Zc\FLt??$d<tj%D5a"dR-f=&5Stj!b^9HR!F^8KSI_+/)J\CBVTRg:?/sW2,ZeNDEUbM^<roLW0_1Sg1e#K7!>G"6\+0P=`:pH94u@.El@][k+JqnA%f3X>CH[Mh'cDZsr.j'jFI+2Ck.j(GN`AgOl&PVeH2'X1T*h:?n#>BMnPE$8l4WgJM*G1sKpIsN=RcS9R5)`.qPY'pBVU>QdfdMUN%:m"K6$Qq2#R:i'`6>8_s*WRM[p,dZI`_O1/=nKhhq%drq/ktKe/6\8"?`SO+Zsi55]OcMp=3!4cGQQn72S4dG@&*;f.H2i(gd2HV%'c8&JPV1s1L1nNU$tI3j&b<[PEE2aXr?I+(-kTO24RMMfiX279+(Hi:3c=OOi[WUW(#r6m<#pTaS\uDGT!)nP(itD/BYWb?Y0[qI%).Ul*^*r0B78onP7<G^fjsn0>A^]oodtXqY=2Bp.n/-3M9SG6%[4t[i.55eLC(IuE[GgtR1Fh.<:H>I31ENA!).Tg19EUb<$gR3/%R&ec^d<#NLluj1bKt1Rk8V7#qk*fbte[173Laujn%r)kL^^d!"\?)rFn:V=YLb!Wlbp'=C>DYh8R&ap_[$[m().Tg](hJ]0TlDWa%"(!uV%SlFGA$l=L+!PT]H35j\,uVF-LfYN62$1-bV1[Fd%Da>FX@s-nj`F46!((o#ZrhiF;Hk-K"s?C*$)?&_SE$m?8Yle#,+;(b%r*l1#gsI]DX2:Yh&9C4/PQi7QOuoKJLjI-4V'3@M;I(OAQj>q*IKSS>@dXqeqB"X)U.bG`To%6u38b[ZX\=TS0K#9!jq&*gdeKkX%%]:+dP-4r*h&5t+U*G!8G':j_@A!),lm[bm.:,fAHM&crXeSsUKH%_oI9'LL%BE+5Aq'B)Dk=N0R@r=?]XOmp'nOAjKo=@]NVA#s%"R7hX9h:\cHJd+pm@\>a(kL(c@8q5t/3!mVBGA3Dj\)r3^i@>CMf;]U-6;arD/$>@gROM>Yr2%)65Zi#T\6^e_:RU6FfBkj:)>cd%W&dp<i=q*MKn91_lU5IQd(end?Eu.kk<Ut4HnkHFb?(TB\<Hor:u$78lbm4Raj+#OJ6YPa^T^I,7#Tb2f%D:-FnV3,:*AS:-L6?F%X@\`#3\(n94\""*3u*n_*QgX`"XNkO@\'`VRHAg]VacSOA"CLSpGoKR`41meGH>k9;f(YW-T4IN23K703!&c]p5BZ:NpWF;%I.mO%gT5m`&Rp`:U:Vjt>SG;CAn!:Hpt<oP%fWiL5@.@*QUr(*k(HE5F2Ai:)K_&Sf0$Gs7_X`NAquDOaIWu@F_!C_;)s,:SDt[U(an?`%o?]3e4QUGDqdrhKmMI>J+L)>"j$\[5)NA`sRpfit'/D;f*YZOR2)L>)Fi8TXm]Xf8W]I18S(k-f;^HML.38+.<XMkrPH''?%"!Po%mHPGh7O(!d6J)PcU.]n,Xi8<Z45*#SF-3oP/r9]B:ET``*nIbXc`;Z`>".3t0q65%.as7g[\PF@Yr<oiNFl$Q!]/'-YXmYB,-<Wk%J$Eu3>LF)h_ZPS&@\<h>eV;!%lEQ:-Q=/eYr1ro8U8G@t(gLSh!MYn8ajJGo7.Uk`XC08.qt/M]FeC]:MiAdXh(!)OHnQX`*<E<Q%e$(18DD?8V,;DkC+K)I*`]+mh"iLu]i<#piC?cE^A_!=#XitJfZ^t1!7>(]rJn@umalZuMhMU&-=)^PC)lKqeK+F-I]:jQb*\d&\%f%9;Ve(BiB*L62lBg`G&3<M+Y2JU1p0FY1TY1)$d&Q_[#(ag6l>CuqmDMnP6,C4Q=ZGjflj2ru5VDm9#:T`pmRCY(hXj\,ueHXM]%jYUZ;>;u3'L!;b_4.EC-@HuT8e)+HW3@mSDF=.JIjucscaC<EI>cu%2VOu;SR4:pt3<CKj(/H>`RcM$O4=AtJ&8!=q+9fPWOAn<`%Jie2oU.F-?=.i-<N3h\(k+o#4Q.R>l1D`NW+eBoKoY?(A6b\-!J4aJeo/;AlMOtFtjr@S\H3P"3pS*r:\Zp",/>t&sof_4GPp&p$%7/U0/6QV#7[5J'PBc8YApO%"$R[#@^8m#Mk2uopm]$p"T#HhOZNTnCf\nocHep%7WBAceU!c5I]5;m\kBR]/%'U\X1c)(LdA4Y"p%3%Kg_JVl<[*$uCdZd\8!Un@13J^im]2/$1<f(QK5@gAljd<[h?SMlXFLQ03B[UGYhBrACb42%7&C\IOD/U"L]b97!)F=4rK-m<"$%bjQd2:aX=(5V1a@#'%)!%l(^8gpDqj)-p4\3&$8dM0Kdgn#1l97UiD4Nu4mI82pn%&j#%t#XaKdZOtPm$hdOn<C2>.1*ZZZXCB?o%1K=uor(h)k30gG^5!X1QW7n5K3"V$,C4iLCX!jItOJ2D9QL1TD@G!qa!aUr`jCscc++ObZ/O`$K5NZQH!!WcqX7kmSc06'L#@02.%HYr'"Bl$AWX175f&L$S*a^o>9%,`[aA=OMA2Bp:eS3KD/L6SSbSq)YIX?t):C25l<gt$oMrj4ba::<;B%A`BtBt2V%4cNl2gZ5cU%4\]nMs3i_[A?k:X/D"@RK+%g\d/k<2O9pu)"m"PBb8(j'ACtIAapsO3%0E8_,s@o(Q#^e/3]6PGA.QJ]F513n<l.2.AFOHX75=R,%H497/em>LnD`r9^feOH-CELJIE(jG>"c5oEK";JSP\:OG<8%=-d!d[-Z/Gl3!`LG)1`CXa*<JIX+DkaE&^8$q&D>V?%tmIT?*3fm%O$qefe,nnnAtabZ=_E[^[Pf.D(h4T6+LWK\rn8ZZbSonu:Hp(YS--h\R`^R9FcrBRI;X12(2Kd>-Eq5E_IXnVVnr`Cq6pe@b2sG]%e*]OBWH3-^M?/h[7[Cp,8/YpUI1"1QO;A0b6pPQCJj_D:m4W"23nh*`p,f?u%Bg8K5.2'IYX&u5)<)LI0d5B.('tct0d&.RFMKkE%h.s'T\6Os6FB8bsW&5uKe`)85#:jCgoSg@R:k(?7VdM_45n,r#_'-gKR:ZL?'HmSj].@R*HFU865kDBE$\9o_`^puSJ)nh`?mkLJ%'#Nj%_^!\"@1\Ph&^7jYc?D_jKI31_NRP4AReX[o*T:-Q0H%QgoJdN6*f@cgH2oO*M@h6jq"?^*8f@<h+lJj&/n",bRAD)S)47BK%1sHlZfV3'h[Lj[6:65O0`9ARMXB?<A/=8di5%0/^&<BDg.rA.!Q*?&G?;ZNWJe.Gm<!8X]70u:'Kn2erD8D3&.5?.RKEVLY9l_KE%Sd[pB1J+]`L,lpu.KFhG?mTo=H4Ldb3.%\M1qY#6Tibu'YR6[_?uY><!Xn-Hf]'g`8E*B&L<:BM#F8=TEr-V2a+Q0>;3Y0j,b;0K%93)4dWt9;ZdNUEJaC&^%K.C#+3Ke'-]LRJ:;K=EaOuK(*$H*Q,r+&(@>n1]h]ED17.42%MaP)s";%,AhL7_]A83mLA&A>]ODC?jJ%,j&rtpr/n$@_lk#jQt6J-s1'<6-kaY@G4EHq&k+f+OS)L%Hk@TKoU+T&&];eaQ:KLhMZ4_IEFhfd64b=.CQ.arA$,3UEHjU7ERBY%:Q,BQfqWdPd91"G\redr4\Sf4pQ19,>,dWT)o4N*7Y8m@:h#!t&!\]mFraB>(=`sg`u5.b[Oos%JVY<T)]??l*4X,nK00fABUVjs%6Sn*2@,2F'30qHJQ6Du%U6Q3BCgX]CB^uEsc,()6\MO`@R<$jCnQr:WnreFZUj`pL"3&Alk"1B[<=]-E:Q\<obQG,Y@X1TrB%')K%\p'=AH0i\)Z'GTNJ6?^%,\0;*25NUoO<V[`kCrE@\H7\QZU/gJZ3a3ebU+0h;*[J).FH3m0P:C,`ah63YVR,,m9/<g&uL1%GD$'l%D%7j+&E-C]5Ma.,GG)=[(Q$:'6AA<D'^gO^=B--s@@P0#.Sehn1nV,V:%I.;oMBQsJM?VdS!-_0<[6E&_bA'<%`RoYr/U9,><TJu%p!YG#=L4H$@rOERM25VE3%"B/j:sEGcbR46G;dl1i#+d"acI5LV/M#pgqqGO_5.d#i=n3IjE_6*KE!FDL'[9haTf+<3K^IB4a,5q%k*=:<`!0'4irB.+.nXk*2OA9[4ucu^;;[(AN#6_r(mcbio]\',1J^OU[t7;!*fBSi66Ea]4L9Z0pg@_KAIkFXU@Hq;_%rXVbD)@R%&3?4-ojBYf`BZ47]hR=)H#^5Ff1b.L9MR[?i!;s[LHk3#^+i1.d#sqU%OslcSG6t*_]_J(ZrkDZ]9/LNK*ctrf\JZD&ZK5KAS1QY%!N2F!@7`9IAGRm@_.dhQ'I53NH9akc_r9^n9Vt8>9N]dg"j;+"#T<m/))d$t<J!?pR.h-0#f&tmBq>or,GnD_M,4HXUFCbMa1=d8%Urdg_d]A?5aeD:#82?oL-rku/*>lK2b7;Fk,5-6&UT"V-0$Y+n..KU<#!([C.Z)VX05*"q&^2K.GUJ58`>O7O?!pV?[3,#+L('O+%p<rO(p0%hED+sM/o^k-a$Uh`D,1[n[;UC=nQ:!e;N"f'X60jJ0EA/XcZg-7C'P<GX*GJQ*DT7/R.hr[68dpnpe@:r-!ng?P$R`8g%X\*Qr2qqALH$V#WTd(:a0[JD0=R9O,XGdsW-68N*S&@So7!kPf]E(D2]Egue.Xo8`:^%aj7KgUd@K,,>l+!RrXE,akYT12FE(U0<%e@D9i>!!lOoUm,UfY"^26k1(r!D+h.!1g]T+9rml^0<;cEmR:=bbSGec*As.&mK_=`'PWc5^mH?(MfnY9g6`?<ma^[lGO>s=Ld9%%m)P,B(8rZ:]iaCm84b>4@7KBUbh^(mj_l%<-pH+AXVGgkloPriM.>uaTZ:bgD+e6B4@HFd[DF?9Al,3Ma:Q.a&Y-&t0/@#C&pqF3%:F%8ElUKPr;>l7#2789@o`-^#(eF;+m(m(qoaoKG(*kY$?5!o5HZAr+_XQli.p;L%SdIl^4#?)`%Qpabb\%E.JJD4EMd?lQk\-.R%=92#_E,&rt*E!UaeC=S_&0AebKbSMNc'tB<&Xa/4j_[C\@GY+a"Ae(YZR%CU>SGm]=^bWcn[aRroTP0nKE)=WDZV1Rd0`c+ZF\;/%#7OWPXtL;<\iK851l!#B)tEQCmPUd%<>5u)VT)P6NDO`t]U(G;>dntpCGtg*/U$arF(h+`o(Nip#f`#Eo<El:N"b_ldnun:N0Tnr%p/[Cp4B75bOnL5[43:<qAX*l+CFuSt4H<'FgR/1Fkg.SW"q(Q/9!g9?2pHsmQp=8b"=,jlACW0n)CTt?6*_%r9T]a+]Vbep^a&sa%ebp=dB:o?=g$a`%i?K<uG2!S7^?,[g^m<c-D"CPp:^%&?+gIQk#:_hE2De`%)tJ#$-;!0*>aim^'?2:8%>\Cq:M4d@YfZ*V]!_4`%&[ucIChK;"hIug#+_6VuVVNFB6Ne8>5H'[$Of%\eOn!t,(_5(2)L%()Po\\KKr&jC#e\I)3MmE55t*su0eXIJm/f^_BOWC6olcQK%Or?P7<XG@:B's?`.PU(`PW6'=`8qjaRg_X]8`:fqU+IM(%>l8m$]$6a#]m)#\=dJj<=XO6'ba+Vd*EP?.fkJLV[*PV/ur8?d0)id%'J,"#(f]!#j&tnH'_.?;+gY=a(L]_A+_Hr14F1Q?1^d\!7PD<QC71a6#&/PuprK3JhAF]e3[@lckSX^PP8fYjp9\U2U-jSOHk:t]%*%@3a;Xe?VW[0G-1ss.*$Ueec:!uB4Smh+\4eqXTUD_HTSZ+`2=N;4(@9@_VKK6Tf0k\XS&bd-=NVRZVa>u.N&%iL*JoHrVFf^Oq%_(KKI<q0V6X;J;9I%_$9Y%a$#^l:SaKp3+*gb,kq1R_s/X]NO`AZgo:Jf=B=,s2rs`7pEef%V+4LUbk-=^=meiK@7>.SWZ(`>R7$%_L():T\YiObK(]C+Kb>eLociZ\-\?S99&Eu_ueA=c^65qL*004-&?0!1eGM#p"C_7.q7\>ZNQf8VP"]@+k!?dSKm6KAu44"2(Mh[%_N?JhofXh5$SZ#r%lDp3<b>q8JM;9fZcQljq4=M8_NMW&T!C]pl'bo\%].5k%0)UE`/TkK'Hrr>mo?5YC7c$8cpT$5Qo7"d;,]MM%nh$0i'QKC5"H-ZX-jUHOASdK&$"]59TFLU_[7cZ-"87RdK@C4Oa@WJpMMEO4Z?hC0rm-C,ns5MN3O.]tSRQ+?[-04X1t4TqNuAJr%@MhL2q\Pg"[!P%j9eeI@(7MC&(<[aM)GulrB^ehW4ajkAC1kWN"tJ,*o593bMU`'8OqH'+Gm6%%"DU:g&a5:!Z^%Sa=rLss;X's^%@I_A]RVJM[&/9sf]jk=k[:.IOR&o$4=Ed4l$cXT&E3tX"1hnde`?Kl'+uHR-ZVZW*`HhU[!SIGV!@QQlT^_<3#Yg!W-rbij1?Y[M%Rq^16$@uJpDE<%n;FDHp@Ur,3.[c,q3Jgd4n.<PSXJ$)0_iX,,?Z*r+7H.5l'>YOAG_91$k_GpI!%(HBb1nqrb2ZejEL6gI'0E0g%,_dk[$#kFe[:CS`hAHX:b*Kbp0Y+LsrF0(AP1"@'#/Q-Z%j]>e/1riX-]qcbaUY-B]HEfW4F]s[B"6tK8?"siDU\?#&6XdF#'>BZ%X.r`Mp5j*G-irrh1uVr;qjBlNXE[WshI?nsIn<eLO\kD=;2q6`hMRl[:pN\FYeZ,gMVLi/k@0]KakB=/Y'F.N#uhL*#,2fPW.7F'%7^F+U^d`_ijDZ<(YZO"gfTTYeh3>V^'U0$_oglPG:>$"Q/)]B^l[g)k77E23l@Uc/jsOb_@)ckt"*F^G@)F,dEg:-r$gm#gO@tcJ%7';(/SL+</4B>@un(FA:agpWH=<l+K8d'l4Lrl9$*&0Gac($GdRMOB<`DCL'MAp9]%>21a`D0bWNlF0dAFikJ;`EY687L5r/He[?%*jh+Xh8eLYL4)9T8JVn5@%Gf=JEN4a.q1OK1b@!ZT#=5Q";U/?,^IrucU8>$=mVM1b'rC`70os*-'WH4k&@8^[$CoiO!gs.Q.=.g%bSio*0lg6N)l""EIaBha(!A0MTC,OZ+n`;-VjoX0*##YQLRDbe7+ec.L*\tNe?U[W/>[#U<m@SZ8IG8J0fKB6%MamGE^DaQpBqWh%I15V0X1nr*?r79L<:=CZkrs>.Q:7&ITeUR))7`_3[PKjl6>Xgm_/"[P;&f\*)kj0kq8KB]na+W<OEMaf/e/NB+It,#$"=U$"<&C;%'/T^r<Cu!_j&B`dN9-Mm>E9fpX"6?^`@.u=9Y5-r9!W5KS77_=Ust/J;522/ODYu?/:Tu9/OKQ8/jtO/,O0K4+\H99fp!ptLlBfP%dYB5*,cnu&0LSLn-ROpHL_:0U.+m"f_a&InBR^IgU1>HNE9$+^B4\>[VG9X;;IJU;G:Wtu31ECt-W.&T,T"@.8N5]K1A_l>#qGcp%8t9(EN)$tK:emsFKV:,];'PT[@2+Meb]\)F<Xd.*0iT$-Z"ftS$IT[lR[f6=88QeK(+5C*OIp3f#X'AA1&3PM[2hPI5g*"F^PK!N%7=/EA7b3?jW]HId$4mQ(-f77!Ga&5sfV5*b%gu]c?6bHpM&rJM#V)<1N>sUpBpB!q7#NCK&<LXb7H3f2LbdgT7hKc5b8A2#&Wj3$%:*ucD\g(LD_U<D-Nq8QA<8fe+,eGHO;]q3r7Td9ij?8fs_Xc.%gqF!)YX:[?XoT7Tk=#F>Fp/R&a]:-"V%d&%P-"eELVkik@,M9J%EUm]VTYsPm_UW[:(2LA@E\2G[:&roI""UBSYE;71`k!]o0D9g43D;)$*ALrZA\^$*ZahFbc-9@t0OYHW!9V<o:',7rK9I&/\>G&p%LRN]a6[nMa(XcuI%r/YZr@Bmk86[O[K'@NV8YXI]"[JJk>>/r>GIcfRdh$EX+fuBWF\35t9ZsrudY^L.Hf%/$k;0POM]M>b(XuVt%."Ih3=9@!/)j>(r^.1J?AjBre,<Dr)n>]VQ4V1flYrdJp&edkjC*WlA&_ob2Csk2>qc?2p8^>CtgnZOY^E?gZi+%J)U"CDQL]A:P%,saPI$"jm`O>&eq4&rb1Bji9kWC-SN@WPSZ-rN<u02oea:5OOV@E^W@0a*f`9HdV`(kilK'm+jp)NmFPM8L!U-2qDPU:/3$A.Fu&%(.U9.3oE[5,(C&.SoJJ';dnLfOmIs5@'Z;Jl4"@+"."d++0T1:#`)(V6<"_`>D0SSGcE4TKuG#:SZ,(-lnHR9ik92!NCah8#KT9Y%(l/khNAdblC/lcSj1KmCX"G8LSeb^O18AA.(Ge,Hl#0tc9.TNa/.9eO=kupQ#%!hRd_ZuJAX/J-B9s'C$"DBm"sp7n+tJZZ_t=j$%7.7LX\Y**m`K#U=4@k!a:.#ed)A"Wj3+PO>&g2$S::32RV[2h;8j]YBb5"G!C&;'R&<?MCaK0%5^faa,Labrj`de8ne)T@/Q3uYG%dVVIf7%G!\gXk`5a@!g(&^6?=E(!0h1R8'\gkc.imL<n]jR,;\L%Q17DoG#?abP^DkZl87-"WWbA+fGGS;$dU/_2Ib'@oP5#mkWJ%JdC]%0u>:.@$DcS6?*'_8Q9[M^1H.;j2Peh;4+9?N<!'3&QXLnj1(bh?;c5-/N/6(>M8j\gS"5=+=$M,9oOS"TQ/+C.h9'TlVUGR%%7hb1Y=[N+)oTraS+JuoSP*Gq.D4Dgb;T^72F.kq.OK-eFjdW^7IdCtkX1G]GdN/M7#@(6kko0_hFSDdFRoB&*@:PO$rUs[KdCM7%6,Go/W9d]u_Ehdf_,%,4\QH2Th9BLZ'gB36SDKr[]J5g@Y\m#A04MtG6)"tTEY2n%6nAsLGRtp'f-CJVNelj7102t*#Em7Q\(>Fk%L3HI3B:<U,%.-"[$t`$K&rZ-]ZM::B>/MWu*i&nFl$sIn0A1;9qQ0cM5[<f9'_N$e$)D\J"O#7(&iB4o:CT/GHd0Q\e>Z#d/5,,Z%KFAtQ[*=E.OsI,q4qXQ;M=[b`S.p+d6*"N_L,H9r9^(]SLI`f'Zia)ql\"[ram2N8ALQi$?\[WCmh[69-arX6)uq4%,M2JN_\0Qo%Uf4>F-dS$=MV''um/mMQ#bII#"jAUX>$9Mk5U9q[Ls]I^U$W:>kp\0F:(IW%MM(8p^pmbX^Ic+-8jOmL7k]$Gc_=:8[-UH<4M?Ld%C\Dm\CL#W@[Tg,-<$Y<M:@j6$.(\29Z:5'fT"q1^C(A2%ag*G]2[#j8C<@VP9Td)RKE1=C8DdCh'7ZA61j%m^Ogo86OOU_Jb35cN%*5k;-N%-\!\G;)@4BB<bi5?'sh^BnWD+8&giZRAdI%sFIAX"m(Jt$2=:`Mqj0jD]@CJ7SR/U#st3?**51-MfTY`_[+cY&FpQu\J*%a<]P6nlfTLnljV$ZqY$g7=fp@(8k53F<IESg`F:Ybrd3;UOqWe$s<'$:e)o\8]d9kF<J+S`$Lb:fu,^=O55Iq)M<4V8CQ)[jG\&P%j_Peph\$Xa]PMR38^Coul@AVLNumP')2&J;`^r2(=d5*T/YDYt.igrf<3'c7G;<<X;-cF2o?.AuhfE3MQ`HKaA4\`ogPRadRSt4p%#ifeC=s&]lrE4VEWK&'BDp"[B+rG?=1/Is+C`%@DmlLP>\Xdh.[YL4IN71G2=L65of8siClTj%,c;N8c6)05c$4OX]C+KH[N)UQu%Z2hK>ARm`bE`d$l/L5m2U5q"Y5_?X#n&Rl!oFT"VCCpqIdb$rQ,3\&\1*W:W05)H[=cA38H,E3kp_]A:Ub4WuP+l$Vf>nXaX:FPA%TirUFFC:\K<2IP$KYRp7*\g;YU&_h18MbWn#.,.,iiOC;XMEac.8>C*/&mD+5mh@!2$GMV%2(WG=g::V=UeE(d\sMsNj0l`EoAU>%9S/PZ5GZU@M?erMK>h",533pLfN+DA[kO]^&JSQ87?''LA;CF]6Y*\E%-\Y;[UXZE1^tZKqm&9:p"3q0E-.*qGh5PM_D*c<Y=mAK%jqqR#r<+05L?GBKMM!UP/=[81"#84OOrESE64@"U#k[/lBct7DeCt:'i]Ep!S0M8?<$^MS8T[#^.RFk.p*aZA!ir^<U=3XgKRuk,%NbamhN(Q/Kh&nNl[j0">K-WuH+-YKG-5S.#8OlE*TG_gfnm-oN#[JPaL-^ID'pIVa#Z_,Z7_*92`%p<Z,1rkD?`[Cb;&Dj6Fb+!#%70;;+3HPk")R^>RJmAr<,=NWG@&$/Vo"l[+U>KYY_B=e&_GRC(E7,C0[Z79LWgf:VAq8C6G;9dlA2L*&lmI219SPUYo>R0Ga;H"[%Xl0uE:$>fE<&[:b*a!UnMai#E-jBYiC1Xfg"R:"`\<POo>q;k:.HIgY3r!5(e=2>nO=5oM#mqhm"rD;o'B>d]AmDV0&t5ubV,!(`%Z"AYP1M?fP/5L_r2bOk,7isQ1%u)A::@V4uJ'$ku-O9f[gk^eG*sKS]DKQaXh-^KnJY>ppM4@7;F[l-qYu/D),_b8Xn((u=+rNZ$%#fX/E0ug4j6pc!t\CKQ;B0@>96qJ#J>Id?=Rb\tU<jdaX=$86%NeA71UWOANa/i'h*,oOp4I_";QRH1_V.@u9p_AeM&rhS=Ka1I:%#0"Mqbac7q>nr]KD*d4;]nWS_'<R@If7`m!`#4@jc&#ss6l9@q>NGjgFg[18Y(ZtR_@$5<7FLZO//pC^aDo:XN'Cq?RUA*g@NmT+%6F*W$3#RZ#;">LV6SXBGge`5&Qp!3eQ;S'?U.s$5FAdW38me.-@;2\fVdEii(OOJE;Y7h1ePM4R3\,1a"@^h\XGW+-#?baFgT6sI%B%_>9A=$sjqFls\Nu8acU`VSTUq2hf5;0mb_E8%Z`C#\b/E5(n//o%8A5-HW<t)AhMD%d[EHEF&#%Vp,(VPbV2OYk6WdF%d[9Z,J%V0OK3V*i:V7*LKV'$0.h9-"qj)32'hr5,M%cVls#@Tb54o[qZb@Ok_e$RrWDC<IU(!:V]t:$aF:s--d9Es3!3JRFFb68^<6>-Q/0%dH9MUH^6kG:a`6qk4C,7+n4KXVWg5N'kWgF<*lc`NmVq7JLr'\Zs1;l;d*sH]0d+XiKaGJ=t:"&$nR3XF@%t#!CO`-X?;ar-aW0M%PnHE<a\r`^1n"j\"&l$u7"16PR!:h4hNPQP>V#,pqbB"b"9o,ZV/mn=!5"DJ&u*om;V2m5@Elo"^'iWS1p])kLc74`MO+uJP3Zk?%!kIu%WY7fOP+4*'3)LA_fi4GK*Jl%"U._b>?V4I/Tm2KN)ai&2<^DMTaiHl9U).T"odVO.,WG<]iuE.FF;+G87p.*d=t8:K=iEMN%fhTd>laG`j<^H.>*60D0M4kqgkDQF=KMXqFKNVFDZSHH8H(bJelI<)m1<nQK?B\9PTF)-B)%`mtf-ZN/(2ts0Q(=_61E@-]N0ii\%><GJZ?Il__>cVDSCN#s6?;Hn#[Sn/tp/<@L:[$.8rVY0Ja,[+U"P/;0>si#P0ejb-Z&\Y_&2C4R]eTlald54foWBC<&P7VW)&Gp0%.Db?TKV<@aPulp#E\h2\>%nD=gdAFuh--Z\i!pfbTY\8$'Srp!Ed]PaKpaV.;pt`@-Hr.S9U\S@Zsko4]o:r0NFHRmq+n!OJ&U4.%oL5ltJeV:PM;OZq6>-FA>`DA=8H\s2W=WtC+<ld[$,3=GafMG:3FU>B1!2as@1=W4Oqta\C3V#3dZ96'WX)1f+>b:J%;Gu26W=:&%q.+NOL=(A&oG+VdTkDS^81fE5S<C/9kQPJ'&DAW0@YqYZ11):XJdfM[;Qt';Ho8#>`@e+K_H_eIEkF-WQ\#L)KB2h3Q-+@3W,3h1%7*o>YVfR`Pm%2C&LG1+#YX4e2O"IM",Z9<p+_Gkrl(1I71"TCjec)\k<(00S&XBi"7E:JNBi\PlH!N2,M.-,p\`m\9qG`n;f,g,b%K>_f]kBnd:,/F<lNc@q6E_T?\A&?D,Yt1;08\0bgeh$EPMGtT0O2&4&$>WIU8p8RCN0Mb$.59!`U0>@s$!uF`3=I*Z)gRBnHeK?3%:e(OebE?::l>B8_\3qo',LeS`Q;eZNbhVd`NJ9D/2^Z!Y<M#fO@U!Qodpl[Ec0QWP[O,Q7Rt%N,ek$iqJr%FG#koZg&He.5P<s8&%NS<r*q1nYX$KtXQ+s$8jSKs'#\5oPNKb<lFlMpDZAP#55E\._8GZlY<P*:>JCX=jO?a&Uo/:ocNn.:JKIEc>^U\rHeDkoD54ngiD%OF9uk>=G$G6p+k"89R4sI:T%!,E!J0O`>nH81#ld8d;i,QS^fNg"-V#X2O`8S!Ss"log=G8A5O:br%3%3h(s0bu\_dAec]"arjd9%#MNf=J('Xt<Cr`I/VnJ+g+Mjm:29!)s2;,sBUtWg/6<Pb+A&7`=OI2rSmf#UP2ej69='l]-*s>2!/a!VCm&9hR36\EFN525"uCIs%il4lQ8UtCZS#YNWMLCoL:7d5,D_oI3@S<O/ZGbfX%nqXDRl"RV.Aajk`?Ycjbt.qiUpaQ22H`Wnf0@>4Rc,LQ-,o\<9:mI:-u.6=%;`!Zd"r@Eg"#l$B!`P:D]<g'ZPs4[M>UG(q?'#ijOr:T,=E%/91/OI=7;3u7BFt'CQDH,^=e]!1_$K09(8aA\ljuVbCt6\t*fHUW%).gkp/\HBQ/+:[@R#@c*_Cs#]f;sg/GYc0V&2tA-iGs([(2HrjdNoJJ^c_*3lGt]P*krn!:2SB0$eB"0`@86/`%2HEOft,qVSo,[%PH6#f,BHkKl4mQ.k$_oMVR:W25[20i\0ND4'NphqMhc%&:X[Dh:\B.@Aiu&aKrA'A,ADl.Im\h<Upt__E<un6^hYWPF*XdfFiY/Y%9I-p^8=]]7$C#J^:!9bGK>?:42&Q,]VQQnt1_t;*]!)BSmk35![iWH@UDIlC,Klco)-M,!Q_DghK)VM6V;k"%3*-C=ND+,\+2i^p%)qA>H8E-SqCbh/[#"g*7=*C;_s21WW86Dt.7GW_6M6)^;KVApVgo8]/W;P!2-P`\Lj(?nQm9R[Z\fojop,H*bN]NoQ.KU0O+[I@4%GgM<V7Z([\Aj[m/R1rjZEnMe;L;L7$A$QV!)QF`'N3JDfN\:kTo%UQ88;'gs"([m(e+XM,KEX<TYlJ4JBKo]1lXhJXm,0<$_I5B-%^hAa^q^rC"GFXsMWSH5]/1cA/p<-5A?fkR'^6'[J+1;N<=p4W<+t*3_'"gePb2sA=[%kme-!!8T-H9^g1I5U3[Ht?tpEUc"*JPjo%DL**%CB]o?pr;(A(UjSnYqoRf8^]OAF!Xkkfm)+Y7iT*gR;ATLs"Q67<\Bc%/"36<HLT"UHr-"3;[Xnk$Rl\sASaNlouj#HS-S,r%!Z8SA40R6BZr@40f?3#8!Mj&"[8;3K+Pn4iGLRf.bVO'(LI5PgDN8<eJT52AB$UjIA-J?=K)?#6c4d6k@pWt59h>\kq'ps'9Cdn\%`<V)@_Xs^*_opPUA$^S"N8/4(Fju4WHl@pjoRVIo)V.]Cdnmc$=?g"b/Qk&U[.S\=f50Xe%&(/Uc^30t-KDK.aDN_D^-Uo9M"V)-%7!YUG'HthFhC0GAXu_jKaJh>^:dU#Q<;H9?G7qtc!pp;IP(H@P(m;;!@89**(bPgL[E*SCWE0N88#Wm"7$8mZoRc.FZttHg`Nbdo%b;1;3'Zi*]f`KW]YR7M?73o@EBI(3]=I/'4S:B1H=Sr>Jd^ZUe@hWjm+cC5q)R_acD<m9^("tCI]VhH#!DGDWK0k>Rf"c;u58[re%okA)@VRkFP5@DS*!l@nK+AuNq6A"QNGu$.H3!t=)9S$bSi.+.RWlA:KeF*PMGSmDEC:DT:J>Y)f:@fX_'8r+f>?54f=#:2jB(E[[%"%1s8N:T:bgP#'>j>8#8*f7@oSf/js0<hH$.YCD#m&&c3RP617kZD\]=*H"%UE,t*)+'Gh]?-cSdmGf(\C;b`R(LsN8%`)bNQ)(2%m)#b9(E:LOCmFif%Um5iR%S7!VqX"b-C3354NF7.TCJ+XWmrqt@oAr$HP_ugH*5%cqmRVF%0N&NQ^tos:[u(hMB$[h,Z&-.%I/6A%<Wibmqq+8OSna8D[c9&iF*Y>9CS?%GE+j8&9Mi9bq%dU*WpiPZNi:L27`n_7r=UG^VH-5TXH<q4:)[K\MR*l7>Z,4<Y-@2<X?Y!^%ZOLE=1CZDjObV[I26LFfX*,fAZta]9MgRP*kc%%%Q1uP+%`LgZ3a,.qBojS-CPDK&e8;$A1tZNT*J6n-9rcTS52VQ+L/3O\oft$d%0X@\H'lr&oT%G1EcoE"Y>N]aDD&-p<CPn!<KRo=o\d/CX^SBG6gf!/X(mTnf[bHWhl1K?C<l>TD;^MW7'9XViJN\aA5c_lf5kR:"%nRU`!UK<Q+@8>jsdJF'&ckXFASY<U2V,SF,<[%<8@Q05/ROhHeC<2;je"@X$'T(eo]MmRB9c[5rk]eXe/-H_?,7iiFB\S=\Dm+g;%Pd?/QL+&jJ/(@^2'aV/&GR:rN;T0d0aR6#ndgW+>1i@O(JT,X$3pXBhUqHKTqrO7YXiD^.cb`)lqrAo4*E.Aqp5-_JW%CdVhado.%;?T8n<^mLkD:6*`m`4f0J%ZV-=!Y/+miqL7"lhO^C:_$!`OL,"7:c4*2_\_#!')php"0j$4>Z=cj$Xu5fJJ.1C'/8K>&7B<e*X9X%,k[WEC7J?M[:CYDJ\gV.#V\0=Kt%@ldNK"'Xi:-#U[A-;`@KTVQ(-Vne[tM,PZ'#fDe7YAa(.t>)!fH_R'].fUV6i?%LS]=K4"k@%h!B+t9#QBq#k/60P.!5pQ2ZIma&[Pr*c&b^GRf@B1V+rp2^Fmn(/0DV8<hUD9;9*59D[9X771;=l;M9NQl!_ar9//q8(M0kG&GE^%]NcR(W=_n\e%g>=_.%d.&DfN!HicKR\r!fR\X.hRcOb8p<D&uZR25TREXR^tU6_>T9eUe/=BX%J37.r?k/cGn]$-uDR6Xn$Ia(Js%3nF_)JkQjd@>`Z7W&QIFM\=EfLUa]XGQnrHW:0O_:PCNK5*o;(hF`sZpdLM7KB%DK1lDSWA)AqOn\D@7F)ob\>4g&`2'5RFcJnJB%:#+Mp_LlJHTT*,I;!%kIf2A'S4H(NpbETh.c:=],b6WABk,C-@d>:u+kYD^%&8--"?(Bc7pd*c+5g25;\^*qjll277jFC@MJ@E\"%b[NGbZfi_.'_%Ikf:jEaO*@j@%[rg?C\;]Yqmr]U\\jS:Epg'jOCFV[ed")7H=992/2=6Hcom)M-1[J&Fh&kFMpEL6269ojaVD7C%P^&"CKNE>Q'*mW.@tk_%CXaA_=d>Js@-b,T:PbC:Qri--'u^5F1;^XuHc/IS7<Fa8dD!,qmT,ApGfF1!9"<ak#?#Ho``/X>reO+s%=kLB69!]bi/#hGa+_*q9KLsn4oUQT'j1_,sL*4FC1l<TiYSsk+&l6*q9d,fhGek:Bjs%h5G#(-?/G77^f--R0b_n?jC:P*Ag:4mp%o_-r3s)i[$j375!iSiXO-at2rp[H_PM]6<SgjShenDMilkKCbE)c'g*qTn-_UDGRYhE6+*pp0n)q=N4rlSg2p%Q@`Z48Bs@op,7G%p61]\LC\;TQZ$6GH1e+"ortm=q>$Mt=3&Woe-7h'*kp;ir'(].s+``4qUqVkcX/f::Z_=5Fo>iro'4eGrD\2!^?<>!O5ACD?G-01%2srf@nZ%'/nAUmk2"TkE02J1RHM$d]J,c5>$V\B`IU=/qkA]\BfuTR;Hf+70r'(]=W)*~>%AI9_PrivateDataEnd